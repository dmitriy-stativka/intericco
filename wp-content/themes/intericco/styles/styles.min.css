[class^="flex_col"] {
  width: 100%;
  padding: 0 10px;
  display: flex;
  flex-wrap: wrap; }
  [class^="flex_col"] > * {
    width: 100%; }

.flex_container {
  width: 100%;
  max-width: 1300px;
  padding: 0 25px;
  margin: 0 auto;
  position: relative;
  z-index: 2; }

.flex_row {
  margin: 0 -10px;
  display: flex;
  flex-wrap: wrap; }
  .flex_row-align-center {
    align-items: center; }

.flex_col--1-1 {
  width: 100%; }
  .flex_col--1-1 .cf7sg-popup {
    margin: 0 auto; }

.flex_col--1-2 {
  width: 50%; }

.flex_col--1-3 {
  width: calc(99.9% / 3); }

.flex_col--2-3 {
  width: calc(100% - (100% / 3)); }

.flex_col--1-4 {
  width: calc(100% - 75%); }

.flex_col--2-4 {
  width: calc(100% - 25%); }

.flex_col--3-4 {
  width: calc(100% - 25%); }

.flex_col-desk--2-4 {
  width: calc(100% - 25%); }

body {
  font: 16px/1.17 "Nunito Sans", sans-serif;
  font-weight: 500;
  color: #000; }
  body *::-webkit-scrollbar {
    -webkit-appearance: none;
    width: 7px; }
  body *::-webkit-scrollbar-thumb {
    border-radius: 2px;
    background-color: rgba(207, 160, 92, 0.5); }
  body *::-webkit-scrollbar {
    -webkit-appearance: none;
    width: 3px; }
  body.menu-opened {
    overflow: hidden; }

h3 {
  margin: 0; }

a {
  text-decoration: none;
  color: #fff;
  transition: color 0.2s ease;
  cursor: pointer;
  outline: none !important; }
  a:hover {
    transition: color 0.2s ease; }
  a:active, a:focus, a:visited {
    color: #fff;
    transition: color 0.3 ease; }

ul {
  list-style: none;
  padding: 0;
  margin: 0; }

button {
  background: none;
  border: none;
  outline: none;
  box-shadow: none; }

.header,
.footer {
  flex-shrink: 1;
  width: 100%; }

.main {
  flex-grow: 1;
  width: 100%;
  position: relative; }

input {
  background: #9e9c9e;
  opacity: 1;
  border-radius: 5px;
  width: 175px;
  padding: 7.5px 8px;
  border: 1px solid transparent;
  outline: none; }
  input[type="submit"] {
    opacity: 1;
    font-weight: 600;
    padding: 15px;
    cursor: pointer; }
  input[type="text"] {
    margin: 10px auto;
    height: 35px;
    width: 100%;
    border-radius: 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    background: transparent;
    padding-left: 0px;
    padding-right: 0px;
    font-family: "Montserrat", sans-serif;
    font-weight: 500;
    font-size: 15px; }
  input[type="email"] {
    margin: 10px auto;
    height: 35px;
    width: 100%;
    border-radius: 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    background: transparent;
    padding-left: 0px;
    padding-right: 0px;
    font-family: "Montserrat", sans-serif;
    font-weight: 500;
    font-size: 15px; }
  input:visited, input:active, input:hover, input:focus {
    background: #fff;
    opacity: 1; }

.wrapper {
  position: relative;
  overflow: hidden; }

.icon {
  width: 25px;
  height: 25px; }

.mini_desc {
  max-height: 90px;
  overflow: hidden;
  color: #000;
  line-height: 22px; }

.tripple-btn {
  display: flex;
  position: relative; }
  .tripple-btn .tripple-btn-first {
    display: block;
    background: #B65490;
    height: 100%;
    width: 40%;
    position: relative;
    transform: skew(25deg);
    transition: margin-top 0.2s ease; }
    .tripple-btn .tripple-btn-first:before {
      content: "";
      display: block;
      background: #B65490;
      position: absolute;
      top: 0;
      left: -18%;
      height: 100%;
      width: 60%;
      transform: skew(-25deg); }
  .tripple-btn .tripple-btn-second {
    display: block;
    background: #E05D68;
    height: 100%;
    width: 30%;
    transform: skew(25deg);
    margin-left: -2px;
    transition: margin-top 0.2s ease; }
  .tripple-btn .tripple-btn-third {
    display: block;
    position: relative;
    background: #5184AF;
    height: 100%;
    width: 30%;
    margin-left: -1px;
    transform: skew(25deg);
    transition: margin-top 0.2s ease; }
    .tripple-btn .tripple-btn-third:after {
      content: "";
      display: block;
      background: #5184AF;
      position: absolute;
      top: 0;
      right: -25%;
      height: 100%;
      width: 60%;
      transform: skew(-25deg); }
  .tripple-btn .tripple-btn-title {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 auto;
    font-family: "Gotham Pro", sans-serif;
    font-style: normal;
    font-weight: normal;
    color: white;
    letter-spacing: 0.1em;
    text-transform: uppercase; }
    .tripple-btn .tripple-btn-title.tripple-btn-title-arrow {
      justify-content: space-between; }
      .tripple-btn .tripple-btn-title.tripple-btn-title-arrow:after {
        content: url(/wp-content/themes/intericco/images/Vector.svg);
        display: block;
        position: absolute;
        right: 0; }
  .tripple-btn.tripple-btn-tiny {
    width: 50px;
    height: 6px; }
  .tripple-btn.tripple-btn-small {
    width: 130px;
    height: 30px; }
    .tripple-btn.tripple-btn-small .tripple-btn-title {
      font-size: 16px; }
  .tripple-btn.tripple-btn-bigger {
    width: 135px;
    height: 40px; }
    .tripple-btn.tripple-btn-bigger .tripple-btn-title {
      font-size: 16px; }
  .tripple-btn.tripple-btn-medium {
    width: 180px;
    height: 55px; }
  .tripple-btn.tripple-btn-big {
    height: 50px;
    width: 300px; }
  .tripple-btn:hover .tripple-btn-first {
    margin-top: -2%;
    transition: margin-top 0.2s ease; }
  .tripple-btn:hover .tripple-btn-second {
    margin-top: 0%;
    transition: margin-top 0.2s ease; }
  .tripple-btn:hover .tripple-btn-third {
    margin-top: 2%;
    transition: margin 0.2s ease; }

.left-side {
  width: 100%;
  height: 100%;
  position: relative; }
  .left-side-title .left-side-title-wrapper {
    display: flex;
    padding-left: 45px;
    padding-top: 70px; }
    .left-side-title .left-side-title-wrapper .left-side-title-tag {
      display: block;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: bold;
      font-size: 38px;
      width: -webkit-fit-content;
      width: -moz-fit-content;
      width: fit-content;
      position: relative;
      background-color: white; }
  .left-side-text {
    display: flex;
    align-items: center;
    transform: rotate(-180deg);
    position: absolute;
    right: -28px;
    top: 200%; }
    .left-side-text span {
      max-width: 75px;
      -webkit-text-stroke-width: 1px;
      -webkit-text-stroke-color: rgba(0, 0, 0, 0.15);
      color: transparent;
      font-style: normal;
      font-weight: bold;
      font-size: 80px;
      -webkit-writing-mode: tb;
          -ms-writing-mode: tb;
              writing-mode: tb; }

.left-side-sm {
  padding-left: 100px; }
  .left-side-sm-title-wrapper {
    justify-content: flex-end;
    align-items: center;
    height: 100%; }
    .left-side-sm-title-wrapper .left-side-sm-title-tag {
      background-color: transparent;
      height: -webkit-fit-content;
      height: -moz-fit-content;
      height: fit-content;
      text-align: center;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 14px !important;
      letter-spacing: 1.34em;
      color: #FBFBFB;
      background-color: initial !important;
      position: relative; }
      .left-side-sm-title-wrapper .left-side-sm-title-tag:before {
        content: "";
        display: block;
        border: 2px solid rgba(0, 0, 0, 0.15);
        border-width: 2px 2px 0px 0px;
        height: 12px;
        width: 25px;
        position: absolute;
        right: 6px;
        top: -25px;
        z-index: -1; }
      .left-side-sm-title-wrapper .left-side-sm-title-tag:after {
        content: "";
        display: block;
        height: 125px;
        width: 13px;
        border: 2px solid rgba(0, 0, 0, 0.15);
        border-width: 0px 0px 2px 2px;
        position: absolute;
        top: -25px;
        right: 20px; }

.lines-title-wrapper {
  position: relative;
  padding-top: 74px; }
  .lines-title-wrapper .lines-title {
    position: relative;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content; }
    .lines-title-wrapper .lines-title:before {
      content: "";
      display: block;
      border: 4px solid #363636;
      height: 100px;
      width: 100px;
      position: absolute;
      right: -35px;
      bottom: -29px;
      z-index: -1; }
    .lines-title-wrapper .lines-title:after {
      content: "";
      display: block;
      height: 4px;
      width: 45px;
      background-color: #E05D68;
      position: absolute;
      bottom: 12px;
      right: -65px; }

.main-link {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-family: "Gotham Pro", sans-serif;
  font-style: normal;
  font-weight: normal;
  font-size: 15px;
  color: #fff;
  background-color: #151515;
  height: 50px;
  max-width: 300px;
  padding-left: 25px; }
  .main-link:after {
    content: url(/wp-content/themes/intericco/images/arrow-right.svg);
    display: flex;
    align-items: center;
    height: 100%;
    padding: 0px 20px;
    background-color: #1B1B1B; }

.middle-line {
  height: 100%;
  width: 1px;
  background: #EDEDED;
  position: absolute; }
  .middle-line-first {
    left: 15%; }
  .middle-line-second {
    left: 33.2%;
    display: none; }
  .middle-line-third {
    left: 49.9%; }
  .middle-line-fourth {
    left: 66.6%;
    display: none; }
  .middle-line-fifth {
    left: 85%; }
  .middle-line .middle-line-square {
    height: 50px;
    width: 4px;
    background-color: white;
    position: absolute;
    left: -1px;
    right: -1px; }

.title-block {
  display: flex;
  align-items: center; }
  .title-block h2 {
    margin-right: -30px;
    font-family: "Gotham Pro", sans-serif;
    font-style: normal;
    font-weight: bold;
    font-size: 45px; }
  .title-block .title-block-lines {
    position: relative;
    height: 100px;
    width: 100px; }
    .title-block .title-block-lines .line-purple {
      height: 25px;
      width: 75px;
      border: 4px solid #B65490;
      border-width: 4px 0px 0px 4px;
      background-color: transparent;
      background-color: initial;
      top: 0;
      left: 0; }
    .title-block .title-block-lines .line-corner {
      height: 100px;
      width: 25px;
      border-width: 4px 4px 4px 0px;
      right: 0;
      top: -1px; }
    .title-block .title-block-lines .line-blue {
      height: 25px;
      width: 75px;
      border: 4px solid #5184AF;
      border-width: 0px 0px 4px 4px;
      background-color: transparent;
      background-color: initial;
      bottom: 0;
      left: 0; }
  .title-block-reverse h2 {
    margin-right: 0;
    margin-left: -50px; }
  .title-block-reverse .title-block-lines .line-purple {
    border-width: 4px 4px 0px 0px;
    right: 0;
    left: auto;
    left: initial; }
  .title-block-reverse .title-block-lines .line-corner {
    border-width: 4px 0px 4px 4px;
    left: 0;
    right: auto;
    right: initial; }
  .title-block-reverse .title-block-lines .line-blue {
    border-width: 0px 4px 4px 0px;
    right: 0;
    left: auto;
    left: initial; }

.line {
  position: absolute; }
  .line-purple {
    display: block;
    background: #B65490; }
    .line-purple-mob {
      width: 4px;
      height: 20px;
      top: 54px;
      left: 120px; }
  .line-corner {
    display: block;
    border: solid #E05D68; }
    .line-corner-mob {
      width: 25px;
      height: 15px;
      border-width: 0px 4px 4px 0px;
      bottom: -28px;
      left: 98px; }
  .line-blue {
    display: block;
    background: #5184AF; }
    .line-blue-mob {
      height: 4px;
      width: 45px;
      bottom: -28px;
      left: 53px; }

.swiper-main {
  height: 660px;
  position: static;
  position: initial; }
  .swiper-main .swiper-wrapper {
    cursor: -webkit-grab;
    cursor: grab; }
    .swiper-main .swiper-wrapper .swiper-slide img {
      display: block;
      -o-object-fit: cover;
         object-fit: cover;
      max-height: 500px;
      height: 100%;
      max-width: 375px;
      width: 100%;
      margin-bottom: 30px; }
  .swiper-main .swiper-pagination {
    display: flex;
    height: 30px; }
    .swiper-main .swiper-pagination .swiper-pagination-bullet {
      background: none;
      height: auto;
      width: 30px;
      border-bottom: 1px solid black;
      border-radius: 0;
      text-align: left;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 16px;
      transition: width 0.3s ease, color 0.3s ease;
      color: #E4E4E4;
      border-color: #E4E4E4;
      opacity: 1; }
    .swiper-main .swiper-pagination .swiper-pagination-bullet-active {
      color: #000;
      border-color: #000;
      width: 50px;
      transition: width 0.3s ease, color 0.3s ease; }
  .swiper-main .swiper-button-next {
    left: -100px;
    top: 40%;
    height: 45px;
    width: 45px;
    background-color: #000;
    color: #fff;
    font-size: 32px; }
    .swiper-main .swiper-button-next:after {
      content: ""; }
    .swiper-main .swiper-button-next:before {
      content: '';
      display: block;
      height: 45px;
      width: 45px;
      border: 2px solid #BD5B98;
      border-width: 2px 0px 0px 2px;
      position: absolute;
      top: -6px;
      left: -6px; }

.text-with-logo {
  display: block;
  transform: rotate(-90deg);
  transform-origin: 0% -140%;
  position: relative; }
  .text-with-logo h3 {
    font-family: "Gotham Pro", sans-serif;
    font-size: 16px;
    text-transform: uppercase;
    color: #fff;
    letter-spacing: 0.195em;
    margin-bottom: 7px; }
  .text-with-logo span {
    font-family: "Gotham Pro", sans-serif;
    font-size: 16px;
    color: #595959;
    letter-spacing: 0.195em; }
  .text-with-logo:before {
    content: url(/wp-content/themes/intericco/images/logo-e.svg);
    display: block;
    height: 50px;
    width: 50px;
    position: absolute;
    left: -70px;
    top: -7px;
    transform: rotate(90deg); }

.footer-bottom-left-menu {
  display: flex;
  flex-wrap: wrap;
  margin-top: 70px;
  padding-left: 20px; }
  .footer-bottom-left-menu .footer-menu-item {
    display: flex;
    justify-content: center;
    width: 50%;
    margin-bottom: 35px; }
    .footer-bottom-left-menu .footer-menu-item a {
      display: flex;
      align-items: center;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 16px;
      color: #8F8F8F;
      width: 150px;
      height: 40px;
      padding-left: 15px;
      position: relative;
      transition: background-color 0.3s ease; }
      .footer-bottom-left-menu .footer-menu-item a:after {
        content: "";
        width: 70px;
        height: 1px;
        background-color: white;
        position: absolute;
        right: -55px;
        opacity: 0;
        transition: opacity 0.3s ease; }
      .footer-bottom-left-menu .footer-menu-item a:hover {
        background-color: #151515;
        transition: background-color 0.3s ease; }
        .footer-bottom-left-menu .footer-menu-item a:hover:after {
          opacity: 1;
          transition: opacity 0.3s ease; }

.top-crumbs {
  display: flex;
  align-items: center;
  font-family: "Gotham Pro", sans-serif;
  font-style: normal;
  font-weight: 300;
  font-size: 35px;
  color: #151515;
  text-transform: uppercase; }
  .top-crumbs .crumbs-item {
    color: #151515; }
  .top-crumbs .crumbs-last {
    font-weight: bold;
    position: relative; }
    .top-crumbs .crumbs-last .line-purple {
      height: 3px;
      width: 140px;
      right: 131px;
      bottom: -11px; }
    .top-crumbs .crumbs-last .line-corner {
      border-width: 0 3px 3px 0;
      height: 10px;
      width: 140px;
      right: -9px;
      bottom: -10px; }
    .top-crumbs .crumbs-last .line-blue {
      height: 30px;
      width: 3px;
      right: -10px;
      bottom: 0px; }
    .top-crumbs .crumbs-last:before {
      content: "/";
      color: #151515;
      font-weight: bold;
      margin-left: 15px; }
  .top-crumbs:before {
    content: "";
    display: block;
    height: 4px;
    width: 50px;
    background-color: #272727;
    margin-right: 30px; }

.design-seo {
  margin-top: 120px;
  position: relative; }
  .design-seo .design-icon {
    max-width: 100px;
    max-height: 150px;
    position: absolute;
    bottom: 20%;
    right: 10%;
    z-index: -1; }
  .design-seo .lines-title-wrapper {
    position: relative;
    padding-top: 74px; }
    .design-seo .lines-title-wrapper .lines-title {
      position: relative;
      width: -webkit-fit-content;
      width: -moz-fit-content;
      width: fit-content;
      background-color: white; }
      .design-seo .lines-title-wrapper .lines-title:before {
        content: "";
        display: block;
        border: 4px solid #E8E8E8;
        height: 100px;
        width: 100px;
        position: absolute;
        right: -35px;
        bottom: -29px;
        z-index: -1; }
      .design-seo .lines-title-wrapper .lines-title:after {
        content: none; }
    .design-seo .lines-title-wrapper:before {
      content: "";
      display: block;
      width: 50px;
      height: 4px;
      background-color: #E05D68;
      position: absolute;
      left: -100px;
      bottom: 15px; }
    .design-seo .lines-title-wrapper:after {
      content: "";
      display: block;
      width: 50px;
      height: 4px;
      background-color: #E05D68;
      position: absolute;
      right: 0px;
      bottom: 15px; }
  .design-seo .design-seo-middle {
    padding-left: 20px;
    margin-top: 100px; }
    .design-seo .design-seo-middle h4 {
      display: flex;
      align-items: center;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: bold;
      font-size: 25px;
      color: #000000;
      margin-bottom: 50px; }
      .design-seo .design-seo-middle h4:before {
        content: "";
        display: block;
        width: 40px;
        height: 20px;
        background: #E05D68;
        margin-right: 40px; }
    .design-seo .design-seo-middle p {
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 18px;
      line-height: 26px;
      color: #232222; }

.consultation {
  display: flex;
  justify-content: space-between;
  margin: 0 auto;
  max-width: 810px;
  width: 100%;
  position: relative;
  box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.08);
  background-color: white; }
  .consultation-text {
    padding: 40px 0 40px 50px; }
    .consultation-text h3 {
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: bold;
      font-size: 25px;
      color: #232222; }
    .consultation-text p {
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 18px;
      color: #232222; }
  .consultation .tripple-btn {
    align-self: flex-end;
    margin-right: 70px; }
    .consultation .tripple-btn .tripple-btn-title {
      font-size: 14px;
      text-transform: none;
      text-transform: initial;
      letter-spacing: normal;
      letter-spacing: initial; }
    .consultation .tripple-btn:after {
      content: "";
      display: block;
      background-image: url(/wp-content/themes/intericco/images/Vector.svg);
      background-position: center center;
      background-repeat: no-repeat;
      height: 40px;
      width: 50px;
      background-color: #E05D68;
      position: absolute;
      right: -70px; }
  .consultation:before {
    content: "";
    display: block;
    background-color: #E05D68;
    width: 25px;
    height: 25px;
    position: absolute;
    top: 0;
    left: 0; }
  .consultation:hover .tripple-btn-first {
    margin-top: -2%;
    transition: margin-top 0.2s ease; }
  .consultation:hover .tripple-btn-second {
    margin-top: 0%;
    transition: margin-top 0.2s ease; }
  .consultation:hover .tripple-btn-third {
    margin-top: 2%;
    transition: margin 0.2s ease; }

@font-face {
  font-family: 'Gotham Pro';
  src: url("/wp-content/themes/intericco/fonts/GothamPro.eot");
  src: local("Gotham Pro"), local("GothamPro"), url("/wp-content/themes/intericco/fonts/GothamPro.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/intericco/fonts/GothamPro.woff2") format("woff2"), url("/wp-content/themes/intericco/fonts/GothamPro.woff") format("woff"), url("/wp-content/themes/intericco/fonts/GothamPro.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

*,
*:before,
*:after {
  box-sizing: border-box; }

html {
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0;
  width: 100%; }

main,
section,
article,
aside,
figure,
figcaption,
header,
footer,
nav {
  display: block; }

h1 {
  margin: 0 0 0.67em; }

h2 {
  margin: 0; }

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

a {
  background-color: transparent; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

img {
  display: block;
  max-width: 100%;
  height: auto;
  border-style: none; }

button,
input,
optgroup,
select,
textarea {
  line-height: 1.15;
  margin: 0; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }

progress {
  vertical-align: baseline; }

textarea {
  overflow: auto; }

[type="checkbox"],
[type="radio"] {
  padding: 0; }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button; }

[hidden] {
  display: none; }

.top-site {
  display: flex;
  align-items: flex-end;
  min-height: 100vh;
  height: 100vh;
  width: 100%;
  position: relative;
  z-index: 9;
  padding-bottom: 75px; }
  .top-site-middle {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 60%;
    width: 100%;
    padding-left: 10%;
    z-index: 11; }
    .top-site-middle-title {
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: bold;
      font-size: 35px;
      color: #fff;
<<<<<<< Updated upstream
      max-width: 660px; }
=======
      max-width: 640px; }
>>>>>>> Stashed changes
      .top-site-middle-title strong {
        display: block; }
    .top-site-middle-bottom {
      display: flex;
      flex-direction: column-reverse; }
      .top-site-middle-bottom p {
        display: flex;
        align-items: center;
        height: 100%;
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        color: #fff;
        line-height: 23px;
        margin-bottom: 40px; }
  .top-site .long-line {
    height: 3px;
    width: 100px;
    background-color: #fff;
    z-index: 11;
    position: absolute;
    bottom: 5%;
    left: 10%; }
  .top-site:before {
    content: none;
    top: 0;
    left: 0;
    width: 35%;
    height: 100%;
    position: absolute;
    background: rgba(28, 28, 28, 0.56); }
  .top-site:after {
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.5); }

.middle-wrapper {
  position: relative;
  height: 100%;
  width: 100%; }
  .middle-wrapper .middle-portfolio {
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
    padding-bottom: 200px;
    position: relative; }
    .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
      content: "";
      display: block;
      border: 4px solid rgba(21, 21, 21, 0.06);
      height: 100px;
      width: 100px;
      position: absolute;
      right: -35px;
      bottom: -29px;
      z-index: -1; }
    .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line {
      position: absolute; }
    .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line {
      position: relative; }
      .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line span {
        display: block;
        background: #E05D68;
        width: 45px;
        height: 4px;
        position: absolute;
        bottom: 20px;
        left: 295px; }
    .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-scroll {
      display: none;
      text-transform: uppercase;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 9px;
      color: black;
      letter-spacing: 1.34em; }
    .middle-wrapper .middle-portfolio-slider {
      padding: 50px 0 0 0;
      width: 90%;
      margin: 0 auto; }
      .middle-wrapper .middle-portfolio-slider-top {
        display: flex;
        justify-content: center;
        padding-bottom: 30px;
        margin: 40px auto 20px; }
        .middle-wrapper .middle-portfolio-slider-top-left {
          display: flex;
          align-items: center;
          position: relative; }
          .middle-wrapper .middle-portfolio-slider-top-left .slash {
            margin: 0px 20px; }
          .middle-wrapper .middle-portfolio-slider-top-left .category {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px; }
        .middle-wrapper .middle-portfolio-slider-top .tripple-btn-big {
          position: absolute;
          bottom: 40px; }
      .middle-wrapper .middle-portfolio-slider .swiper-container-design {
        position: relative;
        padding: 15px 0 0 15px; }
        .middle-wrapper .middle-portfolio-slider .swiper-container-design .line-purple {
          width: 150px;
          height: 3px;
          left: 75px;
          top: -1px; }
        .middle-wrapper .middle-portfolio-slider .swiper-container-design .line-corner {
          width: 75px;
          height: 140px;
          border-width: 3px 0px 0px 3px;
          top: 0px;
          left: 0px; }
        .middle-wrapper .middle-portfolio-slider .swiper-container-design .line-blue {
          height: 315px;
          width: 3px;
          top: 140px;
          left: 1px; }
        .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main {
          height: 660px;
          position: static;
          position: initial; }
          .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper {
            cursor: -webkit-grab;
            cursor: grab; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper .swiper-slide {
              display: flex;
              flex-direction: column;
              align-items: center; }
              .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper .swiper-slide img {
                display: block;
                -o-object-fit: cover;
                   object-fit: cover;
                max-height: 500px;
                height: 100%;
                max-width: 375px;
                width: 100%;
                margin-bottom: 30px; }
              .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper .swiper-slide .slide-title {
                max-width: 355px;
                width: 100%;
                border-left: 2px solid black;
                font-family: "Gotham Pro", sans-serif;
                font-style: normal;
                font-weight: normal;
                font-size: 18px;
                letter-spacing: 0.1em;
                line-height: 30px;
                padding-left: 20px; }
          .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-pagination {
            display: flex;
            justify-content: center;
            height: 30px; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-pagination .swiper-pagination-bullet {
              background: none;
              height: auto;
              width: 30px;
              border-bottom: 1px solid black;
              border-radius: 0;
              text-align: left;
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 16px;
              transition: width 0.3s ease, color 0.3s ease;
              color: #E4E4E4;
              border-color: #E4E4E4;
              opacity: 1; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-pagination .swiper-pagination-bullet-active {
              color: #000;
              border-color: #000;
              width: 50px;
              transition: width 0.3s ease, color 0.3s ease; }
          .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next {
            left: auto;
            left: initial;
            top: auto;
            top: initial;
            bottom: 0;
            right: 10px;
            height: 45px;
            width: 45px;
            background-color: #000;
            font-size: 32px;
            transform: rotate(45deg); }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next .icon {
              height: 15px;
              width: 15px;
              fill: white;
              transform: rotate(45deg); }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next:after {
              content: ""; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next:before {
              content: '';
              display: none;
              height: 45px;
              width: 45px;
              border: 2px solid #BD5B98;
              border-width: 2px 0px 0px 2px;
              position: absolute;
              top: -6px;
              left: -6px; }
          .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-prev {
            right: auto;
            right: initial;
            left: 10px;
            top: auto;
            top: initial;
            bottom: 0;
            height: 45px;
            width: 45px;
            background-color: #000;
            font-size: 32px;
            transform: rotate(45deg); }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-prev .icon {
              height: 15px;
              width: 15px;
              fill: white;
              transform: rotate(-45deg); }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-prev:after {
              content: ""; }
        .middle-wrapper .middle-portfolio-slider .swiper-container-design:after {
          content: "";
          display: none;
          position: absolute;
          right: 0;
          top: -79px;
          bottom: -50px;
          width: 15%;
          height: 100%;
          box-shadow: inset -97px 0px 60px 3px white;
          z-index: 2; }
  .middle-wrapper .info {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding-top: 40px;
    padding-bottom: 50px;
    background-size: cover;
    position: relative;
    z-index: 1;
    overflow: hidden; }
    .middle-wrapper .info .middle-line {
      z-index: 1;
      background-color: #393939;
      top: 0; }
      .middle-wrapper .info .middle-line-first .middle-line-square {
        top: 0%; }
        .middle-wrapper .info .middle-line-first .middle-line-square-mob {
          display: block;
          top: 80%; }
      .middle-wrapper .info .middle-line-second .middle-line-square {
        top: 75%; }
      .middle-wrapper .info .middle-line-third .middle-line-square {
        top: 95%; }
      .middle-wrapper .info .middle-line-fourth .middle-line-square {
        top: 98%; }
      .middle-wrapper .info .middle-line-fifth .middle-line-square {
        top: 5%; }
        .middle-wrapper .info .middle-line-fifth .middle-line-square-mob {
          display: block;
          top: 70%; }
      .middle-wrapper .info .middle-line .middle-line-square {
        z-index: 2; }
    .middle-wrapper .info .left-side-sm {
      height: 0%; }
      .middle-wrapper .info .left-side-sm .left-side-sm-title {
        display: none; }
        .middle-wrapper .info .left-side-sm .left-side-sm-title .left-side-sm-title-tag:before {
          border: 2px solid rgba(255, 255, 255, 0.15);
          border-width: 2px 2px 0px 0px; }
        .middle-wrapper .info .left-side-sm .left-side-sm-title .left-side-sm-title-tag:after {
          border: 2px solid rgba(255, 255, 255, 0.15);
          border-width: 0px 0px 2px 2px; }
      .middle-wrapper .info .left-side-sm .left-side-sm-text span {
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: rgba(255, 255, 255, 0.15); }
    .middle-wrapper .info .info-middle {
      width: 100%;
      position: relative;
      z-index: 2; }
      .middle-wrapper .info .info-middle-top {
        padding-left: 10%; }
        .middle-wrapper .info .info-middle-top-title {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: bold;
          font-size: 30px;
          margin: 0;
          color: white;
          position: relative; }
      .middle-wrapper .info .info-middle-main {
        display: flex;
        justify-content: space-between;
        flex-direction: column;
        padding: 140px 50px 0; }
        .middle-wrapper .info .info-middle-main-numbers {
          display: flex;
          justify-content: space-between;
          flex-direction: column;
          max-width: 60%;
          width: 100%; }
          .middle-wrapper .info .info-middle-main-numbers .main-numbers-block {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 50px; }
            .middle-wrapper .info .info-middle-main-numbers .main-numbers-block .number {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 50px;
              color: #FBFBFB; }
            .middle-wrapper .info .info-middle-main-numbers .main-numbers-block .tripple-btn {
              margin: 20px 0 25px 5px; }
            .middle-wrapper .info .info-middle-main-numbers .main-numbers-block-category {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 30px;
              color: #FBFBFB; }
            .middle-wrapper .info .info-middle-main-numbers .main-numbers-block-bottom-text {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 12px;
              letter-spacing: 0.285em;
              color: #FFFFFF;
              text-align: left;
              padding-left: 75px; }
        .middle-wrapper .info .info-middle-main-rating-title {
          display: flex;
          flex-direction: column;
          align-items: center;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 35px;
          color: white;
          margin-bottom: 30px; }
        .middle-wrapper .info .info-middle-main-rating-stars {
          display: flex;
          justify-content: center;
          margin-bottom: 40px; }
          .middle-wrapper .info .info-middle-main-rating-stars .star-icon {
            margin: 0px 5px; }
            .middle-wrapper .info .info-middle-main-rating-stars .star-icon .icon {
              fill: #383838; }
            .middle-wrapper .info .info-middle-main-rating-stars .star-icon-active .icon {
              fill: #E05D68; }
        .middle-wrapper .info .info-middle-main-rating-text {
          display: block;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 20px;
          line-height: 25px;
          color: white;
          margin-bottom: 70px;
          text-align: center; }
        .middle-wrapper .info .info-middle-main-rating .main-link {
          max-width: 275px;
          margin: 0 auto; }
    .middle-wrapper .info .info-right {
      display: none;
      flex-direction: column;
      justify-content: flex-end;
      align-items: center;
      max-width: 16.8%;
      width: 100%;
      padding-bottom: 60px; }
    .middle-wrapper .info:after {
      content: "";
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: -1;
      background-color: rgba(24, 24, 24, 0.9); }
  .middle-wrapper .service {
    position: relative; }
    .middle-wrapper .service-top {
      display: flex;
      width: 100%;
      height: 300px; }
      .middle-wrapper .service-top-left {
        display: block;
        max-width: 16.6%;
        width: 100%; }
      .middle-wrapper .service-top-middle {
        display: flex;
        justify-content: space-between;
        max-width: 66.6%;
        width: 100%; }
        .middle-wrapper .service-top-middle-left {
          display: none;
          align-items: center;
          width: 50%; }
          .middle-wrapper .service-top-middle-left-line {
            display: block;
            height: 5px;
            width: 75px;
            background: #E05D68; }
        .middle-wrapper .service-top-middle-right {
          display: flex;
          align-items: center;
          justify-content: flex-end; }
          .middle-wrapper .service-top-middle-right .lines-title {
            background-color: white;
            font-size: 30px; }
          .middle-wrapper .service-top-middle-right .title-block-lines {
            display: none; }
      .middle-wrapper .service-top-right {
        display: block;
        max-width: 16.8%;
        width: 100%; }
    .middle-wrapper .service-middle {
      display: flex;
      border-top: solid 1px #EDEDED;
      border-bottom: solid 1px #EDEDED; }
      .middle-wrapper .service-middle .service-middle-left .service-middle-left-text {
        left: -40px;
        right: auto;
        right: initial;
        top: 50px; }
      .middle-wrapper .service-middle .service-middle-left .service-middle-left-sign {
        transform: rotate(-90deg);
        position: absolute;
        bottom: 55px;
        right: -15px;
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 12.5px;
        letter-spacing: 0.1em;
        color: #9D9D9D;
        text-transform: uppercase; }
      .middle-wrapper .service-middle .service-middle-main {
        display: flex;
        flex-direction: column;
        max-width: 70%;
        width: 100%; }
        .middle-wrapper .service-middle .service-middle-main .service-middle-main-block {
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          position: relative;
          z-index: 0;
          width: 100%;
          padding-top: 35px;
          padding-left: 10px;
          background-color: white;
          border-left: 1px solid #EDEDED; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .service-middle-main-block-bg {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            transition: opacity 0.3s ease;
            z-index: -1; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .service-middle-main-block-bg:after {
              content: "";
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              background-color: rgba(0, 0, 0, 0.7); }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-number {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            color: #131313;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: bold;
            font-size: 16px;
            padding-right: 50px; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-number:before {
              content: "";
              display: block;
              width: 100px;
              height: 1px;
              background: #131313;
              margin-right: 20px; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-title {
            margin-top: 100px;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: bold;
            font-size: 35px;
            color: #131313;
            transition: color 0.3s ease; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-text {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            letter-spacing: 0.065em;
            line-height: 26px;
            position: relative;
            overflow-y: scroll;
            color: black;
            transition: color 0.3s ease; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-text:after {
              content: "";
              display: block;
              height: 65%;
              transition: opacity 0.3s ease;
              opacity: 1;
              position: absolute;
              bottom: 0;
              left: 0;
              right: 0;
              background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff 100%); }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-bottom {
            display: flex;
            align-items: center;
            justify-content: space-between; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-bottom .tripple-btn {
              margin-right: 10px; }
              .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-bottom .tripple-btn .tripple-btn-third:after {
                right: -25%; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-bottom:before {
              content: "";
              display: block;
              height: 1px;
              width: 40%;
              background-color: black; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:after {
            content: "";
            display: none; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .service-middle-main-block-bg {
            opacity: 1;
            transition: opacity 0.3s ease; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-number {
            color: white;
            transition: color 0.3s ease; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-number:before {
              background-color: white;
              transition: background-color 0.3s ease; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-title {
            color: white;
            transition: color 0.3s ease; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-text {
            color: white;
            transition: color 0.3s ease; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-text:after {
              opacity: 0;
              transition: none 0s ease 0s;
              transition: initial; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-bottom {
            justify-content: flex-end; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover .middle-main-block-bottom:before {
              content: none; }
          .middle-wrapper .service-middle .service-middle-main .service-middle-main-block:hover:after {
            content: "";
            display: block;
            background-color: rgba(0, 0, 0, 0.5);
            height: 100%;
            width: 100%;
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            z-index: -1; }
        .middle-wrapper .service-middle .service-middle-main .service-button-next {
          display: flex;
          align-items: center;
          justify-content: center;
          transform: rotate(-90deg);
          height: 50px;
          width: 50px;
          position: absolute;
          right: -75px;
          bottom: 25px;
          cursor: pointer; }
      .middle-wrapper .service-middle .middle-service-left {
        max-width: 15%;
        width: 100%;
        height: 100%; }
    .middle-wrapper .service-bottom {
      padding-top: 40px;
      max-width: 15%;
      width: 100%; }
      .middle-wrapper .service-bottom .service-bottom-link {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 60px;
        max-height: 60px;
        max-width: 60px;
        width: 100%;
        background-color: black; }
        .middle-wrapper .service-bottom .service-bottom-link svg {
          fill: white; }
  .middle-wrapper .news {
    display: flex;
    height: 800px;
    position: relative;
    background-color: white;
    overflow: hidden; }
    .middle-wrapper .news .left-side-title-tag {
      color: black; }
    .middle-wrapper .news-middle {
      max-width: 70%;
      width: 100%;
      position: relative; }
      .middle-wrapper .news-middle-top {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-left: 80px;
        padding-right: 10px; }
        .middle-wrapper .news-middle-top .title-block-reverse .title-block-lines {
          display: none; }
        .middle-wrapper .news-middle-top .title-block-reverse h2 {
          position: relative; }
          .middle-wrapper .news-middle-top .title-block-reverse h2:before {
            content: "";
            display: block;
            position: absolute;
            left: -90px;
            top: 0;
            bottom: 0;
            margin: auto;
            background: rgba(36, 36, 36, 0.14);
            width: 75px;
            height: 4px; }
        .middle-wrapper .news-middle-top .news-middle-top-link {
          display: none;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 16px;
          color: black;
          text-transform: uppercase;
          text-decoration: underline;
          letter-spacing: 0.405em; }
          .middle-wrapper .news-middle-top .news-middle-top-link:after {
            content: url(/wp-content/themes/intericco/images/long-arrow-right.svg);
            display: block;
            margin-left: 30px; }
      .middle-wrapper .news-middle .news-middle-slider {
        position: relative;
        margin-top: 50PX; }
        .middle-wrapper .news-middle .news-middle-slider .swiper-slide {
          display: flex;
          flex-direction: column;
          align-items: center; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-slide img {
            max-width: 265px;
            max-height: 280px; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-slide .slide-date {
            display: block;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 14px;
            color: #000000;
            margin: 30px 0; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-slide .slide-title {
            font-family: "Gotham Pro", sans-serif;
            max-width: 60%;
            margin-bottom: 30px; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-slide .tripple-btn {
            padding-left: 10px;
            margin-left: -100px; }
            .middle-wrapper .news-middle .news-middle-slider .swiper-slide .tripple-btn .tripple-btn-title {
              letter-spacing: normal;
              letter-spacing: initial;
              text-transform: none;
              text-transform: initial; }
            .middle-wrapper .news-middle .news-middle-slider .swiper-slide .tripple-btn:after {
              content: "";
              display: block;
              background-image: url(/wp-content/themes/intericco/images/Vector.svg);
              background-position: center center;
              background-repeat: no-repeat;
              height: 40px;
              width: 50px;
              background-color: #E05D68;
              position: absolute;
              right: -70px; }
        .middle-wrapper .news-middle .news-middle-slider .swiper-pagination {
          display: flex;
          justify-content: center;
          bottom: 70px; }
        .middle-wrapper .news-middle .news-middle-slider .swiper-button-next {
          right: -25px;
          left: auto;
          left: initial;
          border: 1px solid #000000;
          background-color: white;
          color: black;
          overflow: hidden; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-next .icon {
            height: 15px;
            width: 15px; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-next:before {
            content: "";
            display: block;
            height: 43px;
            width: 45px;
            transform: skew(15deg);
            position: absolute;
            top: 0;
            left: -100px;
            background-color: #E05D68;
            z-index: -1;
            transition: left 0.3s ease; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-next:hover .icon {
            fill: white;
            transition: fill 0.3s ease; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-next:hover:before {
            left: -15px;
            transition: left 0.3s ease; }
        .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev {
          left: -25px;
          top: 40%;
          height: 45px;
          width: 45px;
          background-color: white;
          border: 1px solid #000000;
          color: black;
          font-size: 32px;
          overflow: hidden; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev .icon {
            height: 15px;
            width: 15px; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev:before {
            content: "";
            display: block;
            height: 43px;
            width: 45px;
            transform: skew(15deg);
            position: absolute;
            top: 0;
            left: -100px;
            background-color: #E05D68;
            z-index: -1;
            transition: left 0.3s ease; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev:hover .icon {
            fill: white;
            transition: fill 0.3s ease; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev:hover:before {
            left: -15px;
            transition: left 0.3s ease; }
          .middle-wrapper .news-middle .news-middle-slider .swiper-button-prev:after {
            content: none; }
        .middle-wrapper .news-middle .news-middle-slider:after {
          content: "";
          display: none;
          position: absolute;
          right: 0;
          width: 200px;
          height: 100%;
          background: linear-gradient(to left, #fff, transparent);
          top: 0;
          z-index: 2; }
    .middle-wrapper .news-right {
      max-width: 15%;
      width: 100%;
      padding-top: 150px; }
      .middle-wrapper .news-right-logo {
        display: none;
        justify-content: flex-end;
        padding-right: 60px; }
        .middle-wrapper .news-right-logo span {
          display: block;
          height: 50px;
          width: 50px;
          position: relative;
          z-index: 1; }
          .middle-wrapper .news-right-logo span:before {
            content: "";
            display: block;
            height: 150px;
            width: 4px;
            background-color: #BD5B98;
            position: absolute;
            bottom: 45px;
            left: 0;
            right: 0;
            margin: auto; }
          .middle-wrapper .news-right-logo span:after {
            content: "";
            display: block;
            height: 550px;
            width: 1px;
            background-color: #D2D2D2;
            position: absolute;
            top: 45px;
            left: 0;
            right: 0;
            margin: auto;
            z-index: -1; }

.slider-scrollbar {
  bottom: 100px; }

.page-template-design .header {
  display: none; }

.page-template-design .design-wrapper {
  display: flex;
  justify-content: center;
  position: relative;
  padding: 0px 150px; }
  .page-template-design .design-wrapper .menu-left {
    height: 100%; }
  .page-template-design .design-wrapper .middle-line {
    z-index: -1; }
  .page-template-design .design-wrapper .design-container {
    display: flex;
    flex-direction: column;
    max-width: 1300px;
    width: 100%;
    height: 100%;
    padding-top: 100px;
    padding-bottom: 100px; }
    .page-template-design .design-wrapper .design-container .design-tabs > input,
    .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container > .tabs-block {
      visibility: hidden;
      opacity: 0;
      height: 0;
      transition: opacity 0.3s ease; }
    .page-template-design .design-wrapper .design-container #design-tab1:checked ~ section .block-tab1,
    .page-template-design .design-wrapper .design-container #design-tab2:checked ~ section .block-tab2,
    .page-template-design .design-wrapper .design-container #design-tab3:checked ~ section .block-tab3,
    .page-template-design .design-wrapper .design-container #design-tab4:checked ~ section .block-tab4,
    .page-template-design .design-wrapper .design-container #design-tab5:checked ~ section .block-tab5 {
      visibility: visible;
      opacity: 1;
      height: 100%;
      transition: opacity 0.3s ease; }
    .page-template-design .design-wrapper .design-container #design-tab1:checked ~ ul .tab1 label,
    .page-template-design .design-wrapper .design-container #design-tab2:checked ~ ul .tab2 label,
    .page-template-design .design-wrapper .design-container #design-tab3:checked ~ ul .tab3 label,
    .page-template-design .design-wrapper .design-container #design-tab4:checked ~ ul .tab4 label,
    .page-template-design .design-wrapper .design-container #design-tab5:checked ~ ul .tab5 label {
      background-color: #E05D68;
      color: white;
      position: relative; }
      .page-template-design .design-wrapper .design-container #design-tab1:checked ~ ul .tab1 label:after,
      .page-template-design .design-wrapper .design-container #design-tab2:checked ~ ul .tab2 label:after,
      .page-template-design .design-wrapper .design-container #design-tab3:checked ~ ul .tab3 label:after,
      .page-template-design .design-wrapper .design-container #design-tab4:checked ~ ul .tab4 label:after,
      .page-template-design .design-wrapper .design-container #design-tab5:checked ~ ul .tab5 label:after {
        border-top: 10px solid #E05D68;
        transition: border-top 0.3s ease; }
    .page-template-design .design-wrapper .design-container .design-tabs {
      margin-top: 100px; }
      .page-template-design .design-wrapper .design-container .design-tabs .design-tabs-labels {
        display: flex;
        border: 1px solid #E1E1E1;
        margin-bottom: 75px; }
        .page-template-design .design-wrapper .design-container .design-tabs .design-tabs-labels li {
          width: calc(100%/5); }
          .page-template-design .design-wrapper .design-container .design-tabs .design-tabs-labels li label {
            display: block;
            width: 100%;
            height: 100%;
            padding: 10px 0;
            text-align: center;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            text-transform: uppercase;
            transition: background-color 0.3s ease; }
            .page-template-design .design-wrapper .design-container .design-tabs .design-tabs-labels li label:after {
              content: "";
              display: block;
              border: 10px solid transparent;
              border-top: 10px solid transparent;
              position: absolute;
              bottom: -20px;
              margin: 0 auto;
              left: 0;
              right: 0;
              max-width: 10px;
              transition: border-top 0.3s ease; }
            .page-template-design .design-wrapper .design-container .design-tabs .design-tabs-labels li label:hover {
              cursor: pointer;
              background-color: #f0b3b8;
              transition: background-color 0.3s ease; }
      .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container {
        position: relative; }
        .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .line-purple {
          width: 150px;
          height: 3px;
          left: 51px;
          top: -25px; }
        .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .line-corner {
          width: 75px;
          height: 140px;
          border-width: 3px 0px 0px 3px;
          top: -24px;
          left: -24px; }
        .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .line-blue {
          height: 150px;
          width: 3px;
          top: 115px;
          left: -22px; }
        .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .design-icon {
          max-width: 200px;
          max-height: 285px;
          position: absolute;
          bottom: -100px;
          right: -75px;
          z-index: -1; }
        .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block {
          display: flex;
          justify-content: space-between;
          flex-wrap: wrap; }
          .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
            max-width: 32%;
            max-height: 420px;
            min-height: 420px;
            position: relative;
            z-index: 1;
            padding: 0 60px 40px 30px;
            margin-bottom: 15px; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item h2 {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 28px;
              color: white;
              transition: margin-bottom 0.5s ease; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item p {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 14px;
              color: white;
              height: 0;
              max-height: 60px;
              visibility: hidden;
              margin: 0;
              transition: height 0.5s ease; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item:after {
              content: "";
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              z-index: -1;
              transition: background-color 0.3s ease; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item:hover {
              cursor: pointer; }
              .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item:hover h2 {
                margin-bottom: 40px;
                transition: margin-bottom 0.5s ease; }
              .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item:hover p {
                height: 60px;
                visibility: visible;
                transition: height 0.5s ease; }
              .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .tabs-block .tabs-block-item:hover:after {
                background-color: rgba(0, 0, 0, 0.4);
                transition: background-color 0.3s ease; }

.error404 .header {
  display: none; }

.error404 .error-wrapper {
  height: 100vh;
  position: relative;
  padding: 100px 0; }
  .error404 .error-wrapper .middle-line {
    top: 0;
    bottom: 0; }
  .error404 .error-wrapper .error-icon {
    max-width: 200px;
    max-height: 285px;
    position: absolute;
    bottom: 100px;
    left: -100px;
    z-index: -1; }
    .error404 .error-wrapper .error-icon-sec {
      top: 100px;
      right: -100px;
      left: auto;
      left: initial; }
  .error404 .error-wrapper .error-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    max-width: 1200px;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    position: relative;
    z-index: 1; }
    .error404 .error-wrapper .error-container .error-right-text {
      position: absolute;
      top: -140px;
      right: 50px;
      transform: rotate(-180deg); }
      .error404 .error-wrapper .error-container .error-right-text span {
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: rgba(0, 0, 0, 0.55);
        color: transparent;
        text-transform: uppercase;
        font-style: normal;
        font-weight: bold;
        font-size: 90px;
        -webkit-writing-mode: tb;
        -ms-writing-mode: tb;
        writing-mode: tb; }
    .error404 .error-wrapper .error-container .error-title {
      display: flex;
      align-items: center;
      max-width: -webkit-fit-content;
      max-width: -moz-fit-content;
      max-width: fit-content;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: bold;
      font-size: 35px;
      color: #151515;
      position: relative; }
      .error404 .error-wrapper .error-container .error-title .line-purple {
        height: 3px;
        width: 100px;
        right: 40px;
        bottom: -11px; }
      .error404 .error-wrapper .error-container .error-title .line-corner {
        border-width: 0 3px 3px 0;
        height: 10px;
        width: 50px;
        right: -9px;
        bottom: -10px; }
      .error404 .error-wrapper .error-container .error-title .line-blue {
        height: 30px;
        width: 3px;
        right: -10px;
        bottom: 0px; }
      .error404 .error-wrapper .error-container .error-title:before {
        content: "";
        display: block;
        background-color: #272727;
        width: 50px;
        height: 5px;
        margin-right: 40px; }
    .error404 .error-wrapper .error-container .error-middle {
      display: flex;
      align-items: center;
      justify-content: center; }
      .error404 .error-wrapper .error-container .error-middle .error-num {
        font-style: normal;
        font-weight: 900;
        font-size: 290px;
        color: #E05D68; }
    .error404 .error-wrapper .error-container .error-bottom {
      display: flex;
      justify-content: space-between; }
      .error404 .error-wrapper .error-container .error-bottom .error-bottom-title {
        width: 50%; }
        .error404 .error-wrapper .error-container .error-bottom .error-bottom-title .error-title {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: bold;
          font-size: 45px;
          color: #151515;
          position: relative;
          padding-left: 50px;
          margin: 0;
          text-transform: uppercase; }
          .error404 .error-wrapper .error-container .error-bottom .error-bottom-title .error-title:before {
            content: "";
            display: block;
            border: 2px solid #151515;
            background: white;
            border-width: 0px 2px 2px 0px;
            height: 15px;
            width: 230px;
            position: absolute;
            left: 0px;
            bottom: -24px; }
          .error404 .error-wrapper .error-container .error-bottom .error-bottom-title .error-title:after {
            content: "";
            display: block;
            height: 50px;
            width: 15px;
            border: 2px solid #151515;
            border-width: 2px 0px 0px 2px;
            position: absolute;
            top: 26px;
            left: 0px; }
      .error404 .error-wrapper .error-container .error-bottom .footer-bottom-left-menu {
        justify-content: space-between;
        margin-top: 0;
        padding-left: 0;
        max-width: 50%; }
        .error404 .error-wrapper .error-container .error-bottom .footer-bottom-left-menu .footer-menu-item a:after {
          background-color: #151515;
          right: -20px;
          width: 40px; }
        .error404 .error-wrapper .error-container .error-bottom .footer-bottom-left-menu .footer-menu-item a:hover {
          background-color: #F7F7F7; }

.page-template-contacts .header {
  display: none; }

.page-template-contacts .contacts-wrapper {
  display: flex;
  justify-content: center;
  min-height: 100vh;
  position: relative;
  padding: 0 150px; }
  .page-template-contacts .contacts-wrapper .menu-left {
    height: 100%; }
    .page-template-contacts .contacts-wrapper .menu-left .menu-left-bottom {
      display: none; }
    .page-template-contacts .contacts-wrapper .menu-left .info-right {
      display: block; }
  .page-template-contacts .contacts-wrapper .contacts-container {
    max-width: 1300px;
    width: 100%;
    padding-top: 100px;
    padding-bottom: 150px;
    position: relative; }
    .page-template-contacts .contacts-wrapper .contacts-container .top-crumbs {
      margin-bottom: 140px; }
      .page-template-contacts .contacts-wrapper .contacts-container .top-crumbs .crumbs-last .line-purple {
        height: 3px;
        width: 100px;
        right: 41px;
        bottom: -11px; }
      .page-template-contacts .contacts-wrapper .contacts-container .top-crumbs .crumbs-last .line-corner {
        border-width: 0 3px 3px 0;
        height: 10px;
        width: 50px;
        right: -9px;
        bottom: -10px; }
      .page-template-contacts .contacts-wrapper .contacts-container .top-crumbs .crumbs-last .line-blue {
        height: 30px;
        width: 3px;
        right: -10px;
        bottom: 0px; }
    .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle {
      display: flex;
      justify-content: space-between;
      width: 100%; }
      .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle .contacts-title {
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: bold;
        font-size: 35px;
        color: black;
        margin-bottom: 100px; }
      .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-left {
        max-width: 55%;
        width: 100%; }
        .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-left .footer-bottom-right .footer-right-info-item {
          margin-bottom: 70px; }
          .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-left .footer-bottom-right .footer-right-info-item .footer-right-info-item-place {
            color: #373737; }
        .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-left .contacts-map-block {
          position: relative; }
          .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-left .contacts-map-block img {
            position: absolute;
            bottom: -70px;
            left: -53px;
            z-index: -1; }
      .page-template-contacts .contacts-wrapper .contacts-container .contacts-middle-form {
        max-width: 35%;
        width: 100%; }

.page-template-contacts .footer .footer-top {
  display: none; }

.page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  max-width: 100%; }
  .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-bottom-left-title {
    order: 0; }
  .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-bottom-left-menu {
    order: 2;
    max-width: 100%;
    width: 100%;
    padding-left: 0; }
    .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-bottom-left-menu .footer-menu-item {
      width: calc(100%/6); }
      .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-bottom-left-menu .footer-menu-item a {
        justify-content: center;
        padding-left: 0; }
  .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-social {
    order: 1; }
    .page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-left .footer-social:after {
      display: none; }

.page-template-contacts .footer .footer-bottom .footer-container .footer-bottom-right {
  display: none; }

.page-template-contacts .footer .footer-bottom .footer-anchor {
  margin-top: 40px; }

.page-template-blog .header {
  display: none; }

.page-template-blog .blog-wrapper {
  display: flex;
  justify-content: center;
  min-height: 100vh;
  position: relative;
  padding: 0 150px; }
  .page-template-blog .blog-wrapper .menu-left {
    height: 100%; }
  .page-template-blog .blog-wrapper .blog-container {
    max-width: 1300px;
    width: 100%;
    padding-top: 100px;
    padding-bottom: 150px;
    position: relative; }
    .page-template-blog .blog-wrapper .blog-container .top-crumbs {
      margin-bottom: 140px; }
      .page-template-blog .blog-wrapper .blog-container .top-crumbs .crumbs-last .line-purple {
        height: 3px;
        width: 100px;
        right: 41px;
        bottom: -11px; }
      .page-template-blog .blog-wrapper .blog-container .top-crumbs .crumbs-last .line-corner {
        border-width: 0 3px 3px 0;
        height: 10px;
        width: 50px;
        right: -9px;
        bottom: -10px; }
      .page-template-blog .blog-wrapper .blog-container .top-crumbs .crumbs-last .line-blue {
        height: 30px;
        width: 3px;
        right: -10px;
        bottom: 0px; }
    .page-template-blog .blog-wrapper .blog-container .blog-slider {
      width: 100%;
      position: relative; }
      .page-template-blog .blog-wrapper .blog-container .blog-slider .design-icon {
        max-width: 150px;
        max-height: 200px;
        position: absolute;
        top: 470px;
        right: -25px;
        z-index: -1; }
      .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container {
        position: static;
        position: initial; }
        .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item {
          display: flex;
          flex-direction: column;
          padding: 30px 20px 50px;
          max-width: 48%;
          background-color: white;
          transition: box-shadow 0.3s ease, background-color 0.3s ease;
          position: relative;
          margin-bottom: 40px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item .line {
            opacity: 0;
            transition: opacity 0.3s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item .line-purple {
              width: 150px;
              height: 3px;
              left: 60px;
              top: -20px; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item .line-corner {
              width: 75px;
              height: 140px;
              border-width: 3px 0px 0px 3px;
              top: -19px;
              left: -15px; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item .line-blue {
              height: 200px;
              width: 3px;
              top: 121px;
              left: -13px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-left: 15px;
            margin-bottom: 30px;
            width: 100%; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-title h3 {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 28px;
              color: #2B2B2B; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-title .tripple-btn {
              height: 4px;
              margin-right: 6px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-img {
            width: 100%;
            height: 280px;
            position: relative; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-img img {
              display: block;
              height: 100%;
              width: 100%;
              -o-object-fit: cover;
                 object-fit: cover; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-img:before {
              content: "";
              display: block;
              width: 10px;
              height: 10px;
              border-radius: 50%;
              background-color: #000000;
              position: absolute;
              bottom: -5px;
              left: -40px; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-img:after {
              content: "";
              display: block;
              width: 300px;
              height: 1px;
              background-color: #000000;
              position: absolute;
              bottom: -1px;
              left: -40px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-text {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            color: black;
            line-height: 29px;
            margin: 30px 0 45px 0;
            padding-left: 15px;
            max-height: 90px;
            overflow: hidden;
            position: relative; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-text:after {
              content: "";
              display: block;
              height: 65%;
              transition: opacity 0.3s ease;
              opacity: 1;
              position: absolute;
              bottom: 0;
              left: 0;
              right: 0;
              background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff 100%); }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-bottom {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-left: 25px;
            width: 100%; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-bottom .tripple-btn .tripple-btn-title {
              font-size: 14px;
              text-transform: none;
              text-transform: initial;
              letter-spacing: normal;
              letter-spacing: initial; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-bottom .tripple-btn:after {
              content: "";
              display: block;
              background-image: url(/wp-content/themes/intericco/images/Vector.svg);
              background-position: center center;
              background-repeat: no-repeat;
              height: 40px;
              width: 50px;
              background-color: #E05D68;
              position: absolute;
              right: -70px; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item-bottom .blog-item-bottom-date {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 14px;
              color: black; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item:hover {
            box-shadow: 0px 0px 35px rgba(0, 0, 0, 0.08);
            transition: box-shadow 0.3s ease, background-color 0.3s ease;
            background-color: white; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item:hover .line {
              opacity: 1;
              transition: opacity 0.3s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item:hover .tripple-btn-first {
              margin-top: -2%;
              transition: margin-top 0.2s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item:hover .tripple-btn-second {
              margin-top: 0%;
              transition: margin-top 0.2s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item:hover .tripple-btn-third {
              margin-top: 2%;
              transition: margin 0.2s ease; }
        .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-pagination {
          display: flex;
          justify-content: center;
          height: 30px;
          top: -50px;
          width: auto;
          width: initial;
          left: auto;
          left: initial;
          right: 80px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-pagination .swiper-pagination-bullet {
            background: none;
            height: auto;
            width: 30px;
            border-bottom: 1px solid black;
            border-radius: 0;
            text-align: left;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            transition: width 0.3s ease, color 0.3s ease;
            color: #E4E4E4;
            border-color: #E4E4E4;
            opacity: 1; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-pagination .swiper-pagination-bullet-active {
            color: #000;
            border-color: #000;
            width: 50px;
            transition: width 0.3s ease, color 0.3s ease; }
        .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next {
          left: auto;
          left: initial;
          top: initial;
          top: -50px;
          right: 10px;
          height: 45px;
          width: 45px;
          font-size: 32px;
          border: 1px solid black;
          transition: background-color 0.3s ease, box-shadow 0.3s ease;
          transform: rotate(45deg); }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next .icon {
            height: 15px;
            width: 15px;
            fill: black;
            transform: rotate(45deg);
            transition: fill 0.3s ease; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next:after {
            content: ""; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next:before {
            content: '';
            display: none;
            height: 45px;
            width: 45px;
            border: 2px solid #BD5B98;
            border-width: 2px 0px 0px 2px;
            position: absolute;
            top: -6px;
            left: -6px; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next:hover {
            background-color: #000;
            box-shadow: 1px 1px 30px -3px rgba(0, 0, 0, 0.49);
            transition: background-color 0.3s ease, box-shadow 0.3s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-next:hover .icon {
              fill: white;
              transition: fill 0.3s ease; }
        .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-prev {
          right: 250px;
          top: -50px;
          left: auto;
          left: initial;
          height: 45px;
          width: 45px;
          border: 1px solid black;
          transition: background-color 0.3s ease, box-shadow 0.3s ease;
          font-size: 32px;
          transform: rotate(45deg); }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-prev .icon {
            height: 15px;
            width: 15px;
            fill: black;
            transform: rotate(-45deg);
            transition: fill 0.3s ease; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-prev:after {
            content: ""; }
          .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-prev:hover {
            background-color: #000;
            box-shadow: 1px 1px 30px -3px rgba(0, 0, 0, 0.49);
            transition: background-color 0.3s ease, box-shadow 0.3s ease; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-button-prev:hover .icon {
              fill: white;
              transition: fill 0.3s ease; }
    .page-template-blog .blog-wrapper .blog-container .design-seo {
      margin-top: 70px; }

<<<<<<< Updated upstream
.swiper-container-multirow-column > .swiper-wrapper {
  flex-direction: row !important; }

.blog-template-default.single-blog .header {
  display: none; }

.blog-template-default.single-blog .top-site-with-crumbs {
  flex-direction: column;
  align-items: initial;
  justify-content: space-between; }
  .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs {
=======
.top-site-with-crumbs {
  flex-direction: column;
  align-items: initial;
  justify-content: space-between; }
  .top-site-with-crumbs .top-crumbs {
>>>>>>> Stashed changes
    padding-left: 25%;
    padding-bottom: 60px;
    position: relative;
    z-index: 11;
    padding-top: 70px; }
<<<<<<< Updated upstream
    .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs .crumbs-item {
      display: flex;
      align-items: center; }
      .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs .crumbs-item span {
=======
    .top-site-with-crumbs .top-crumbs .crumbs-item {
      display: flex;
      align-items: center; }
      .top-site-with-crumbs .top-crumbs .crumbs-item span {
>>>>>>> Stashed changes
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: bold;
        font-size: 30px;
        color: white;
        text-transform: uppercase; }
<<<<<<< Updated upstream
      .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs .crumbs-item:before {
=======
      .top-site-with-crumbs .top-crumbs .crumbs-item:before {
>>>>>>> Stashed changes
        display: block;
        content: "/";
        color: white;
        margin-right: 15px; }
<<<<<<< Updated upstream
    .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs .crumbs-last span {
=======
    .top-site-with-crumbs .top-crumbs .crumbs-last span {
>>>>>>> Stashed changes
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 16px;
      color: white;
      text-transform: none;
      text-transform: initial; }
<<<<<<< Updated upstream
    .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs .crumbs-last:before {
      color: white;
      font-size: 18px; }
    .blog-template-default.single-blog .top-site-with-crumbs .top-crumbs:before {
      display: none; }
  .blog-template-default.single-blog .top-site-with-crumbs .top-site-middle .top-site-middle-text {
=======
    .top-site-with-crumbs .top-crumbs .crumbs-last:before {
      color: white;
      font-size: 18px; }
    .top-site-with-crumbs .top-crumbs:before {
      display: none; }
  .top-site-with-crumbs .top-site-middle .top-site-middle-text {
>>>>>>> Stashed changes
    font-family: "Gotham Pro", sans-serif;
    font-style: normal;
    font-weight: normal;
    font-size: 16px;
    color: white;
    line-height: 25px;
    max-width: 50%; }
<<<<<<< Updated upstream
  .blog-template-default.single-blog .top-site-with-crumbs .top-site-middle-bottom .date {
    border-left: none; }
  .blog-template-default.single-blog .top-site-with-crumbs .text-with-logo {
=======
  .top-site-with-crumbs .top-site-middle-bottom .date {
    border-left: none; }
  .top-site-with-crumbs .text-with-logo {
>>>>>>> Stashed changes
    position: absolute;
    right: -60px;
    top: 350px;
    z-index: 11; }
<<<<<<< Updated upstream
    .blog-template-default.single-blog .top-site-with-crumbs .text-with-logo span {
      color: #FFFFFF; }

.blog-template-default.single-blog .blog-single-main {
=======
    .top-site-with-crumbs .text-with-logo span {
      color: #FFFFFF; }

.page-template-blog-single .header {
  display: none; }

.page-template-blog-single .blog-single-main {
>>>>>>> Stashed changes
  display: flex;
  position: relative; }
  .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
    content: "";
    display: block;
    border: 4px solid rgba(21, 21, 21, 0.06);
    height: 100px;
    width: 100px;
    position: absolute;
    right: -35px;
    bottom: -29px;
    z-index: -1; }
  .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .line {
    position: absolute; }
  .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-red_line {
    position: relative; }
    .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-red_line span {
      display: block;
      background: #E05D68;
      width: 45px;
      height: 4px;
      position: absolute;
      bottom: 20px;
      left: 295px; }
  .blog-template-default.single-blog .blog-single-main .blog-single-main-right {
    padding: 80px 40px;
    width: 83.4%;
    position: relative; }
    .blog-template-default.single-blog .blog-single-main .blog-single-main-right .design-icon {
      position: absolute;
      top: 30%;
      right: -50px; }
    .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container {
      max-width: 1100px;
      width: 100%; }
      .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-date {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 55px; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-date .date {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 16px;
          color: #000000;
          margin-left: 30px; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-date:before {
          content: "";
          display: block;
          background-color: #151515;
          height: 1px;
          width: 90%; }
      .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment {
        display: flex;
        position: relative;
        padding-left: 100px; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-left {
          transform: rotate(-90deg);
          position: absolute;
          left: -30px;
          top: 70px; }
          .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-left span {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: bold;
            font-size: 25px;
            text-transform: uppercase; }
          .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-left .tripple-btn {
            height: 4px;
            width: 110px;
            margin-top: 10px; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-text p {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 16px;
          line-height: 33px; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-text-bg {
          position: absolute;
          top: -20px;
          right: 150px; }
          .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-top-moment .moment-text-bg span {
            font-style: normal;
            font-weight: bold;
            font-size: 80px;
            max-width: 75px;
            -webkit-text-stroke-width: 1px;
            -webkit-text-stroke-color: rgba(0, 0, 0, 0.15);
            color: transparent; }
      .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-middle p {
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 33px;
        color: #000000;
        margin: 35px 0; }
      .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-middle ul li {
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        line-height: 33px;
        color: #000000;
        margin: 5px 0; }
      .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-middle .main-middle-img {
        max-height: 450px;
        height: 100%;
        margin-top: 80px;
        position: relative; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-middle .main-middle-img img {
          -o-object-fit: cover;
             object-fit: cover;
          height: 100%; }
        .blog-template-default.single-blog .blog-single-main .blog-single-main-right-container .blog-single-main-middle .main-middle-img .design-icon {
          position: absolute;
          top: -75px;
          right: 105px;
          z-index: -1; }
  .blog-template-default.single-blog .blog-single-main .menu-left-bottom {
    position: absolute;
    left: 0;
    bottom: 0; }

.page-template-design-single .header {
  display: none; }

.page-template-design-single .top-site .swiper-bg {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 11; }
  .page-template-design-single .top-site .swiper-bg .swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
       object-fit: cover; }
  .page-template-design-single .top-site .swiper-bg .swiper-slide:after {
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.5); }
  .page-template-design-single .top-site .swiper-bg .swiper-pagination {
    display: flex;
    justify-content: center;
    height: 30px;
    width: auto;
    width: initial;
    right: 70px;
    left: auto;
    left: initial;
    bottom: 135px; }
    .page-template-design-single .top-site .swiper-bg .swiper-pagination .swiper-pagination-bullet {
      background: none;
      height: auto;
      width: 30px;
      border-bottom: 1px solid black;
      border-radius: 0;
      text-align: left;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 16px;
      transition: width 0.3s ease, color 0.3s ease;
      color: #E4E4E4;
      border-color: #E4E4E4;
      opacity: 1; }
    .page-template-design-single .top-site .swiper-bg .swiper-pagination .swiper-pagination-bullet-active {
      color: #fff;
      border-color: #fff;
      width: 50px;
      transition: width 0.3s ease, color 0.3s ease; }

.page-template-design-single .top-site .top-crumbs {
  z-index: 12; }

.page-template-design-single .top-site .top-site-middle {
  z-index: 12; }

.page-template-design-single .top-site:before {
  z-index: 12; }

.page-template-design-single .design-single-wrapper {
  position: relative; }
  .page-template-design-single .design-single-wrapper .design-single-portfolio {
    display: flex; }
    .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
      content: "";
      display: block;
      border: 4px solid rgba(21, 21, 21, 0.06);
      height: 100px;
      width: 100px;
      position: absolute;
      right: -35px;
      bottom: -29px;
      z-index: -1; }
    .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line {
      position: absolute; }
    .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line {
      position: relative; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line span {
        display: block;
        background: #E05D68;
        width: 45px;
        height: 4px;
        position: absolute;
        bottom: 20px;
        left: 295px; }
    .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author {
      display: flex;
      justify-content: space-between;
      max-width: 66.7%;
      width: 100%;
      padding: 160px 40px;
      position: relative; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-block-title {
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: bold;
        font-size: 35px;
        color: #000000;
        text-transform: uppercase;
        padding-left: 15px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-block-title:after {
          content: "";
          display: block;
          background-color: #E05D68;
          width: 200px;
          height: 1px;
          margin-top: 10px; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-img-block {
        width: 230px;
        height: 230px;
        background-color: #C4C4C4;
        margin-top: 20px;
        position: relative; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-img-block .author-avatar {
          height: 100%;
          width: 100%;
          -o-object-fit: cover;
             object-fit: cover; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-img-block .design-icon {
          position: absolute;
          top: -85px;
          right: -70px; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-name {
        display: block;
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 16px;
        color: #000000;
        letter-spacing: 0.325em;
        position: relative;
        padding: 25px 0 0 25px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .author-block .author-name:before {
          content: "";
          display: block;
          background-color: #E05D68;
          height: 90px;
          width: 1px;
          position: absolute;
          left: 12px;
          bottom: -15px; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment {
        display: flex;
        position: relative;
        max-width: 580px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-left {
          transform: rotate(-90deg);
          position: absolute;
          left: -30px;
          top: 55px; }
          .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-left span {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: bold;
            font-size: 25px;
            text-transform: uppercase; }
          .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-left .tripple-btn {
            height: 4px;
            width: 110px;
            margin-top: 10px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-text p {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 16px;
          line-height: 33px; }
          .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-text p:first-child {
            padding-left: 100px;
            margin-bottom: 60px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-text .moment-text-bg {
          position: absolute;
          top: 35%;
          right: 150px; }
          .page-template-design-single .design-single-wrapper .design-single-portfolio .portfolio-author .blog-single-main-top-moment .moment-text .moment-text-bg span {
            font-style: normal;
            font-weight: bold;
            font-size: 80px;
            max-width: 75px;
            -webkit-text-stroke-width: 1px;
            -webkit-text-stroke-color: rgba(0, 0, 0, 0.15);
            color: transparent; }
  .page-template-design-single .design-single-wrapper .info {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding-top: 40px;
    padding-bottom: 50px;
    background-size: cover;
    position: relative;
    z-index: 1;
    overflow: hidden; }
    .page-template-design-single .design-single-wrapper .info .middle-line {
      z-index: 1;
      background-color: #393939;
      top: 0; }
      .page-template-design-single .design-single-wrapper .info .middle-line-first .middle-line-square {
        top: 0%; }
        .page-template-design-single .design-single-wrapper .info .middle-line-first .middle-line-square-mob {
          display: block;
          top: 80%; }
      .page-template-design-single .design-single-wrapper .info .middle-line-second .middle-line-square {
        top: 75%; }
      .page-template-design-single .design-single-wrapper .info .middle-line-third .middle-line-square {
        top: 95%; }
      .page-template-design-single .design-single-wrapper .info .middle-line-fourth .middle-line-square {
        top: 98%; }
      .page-template-design-single .design-single-wrapper .info .middle-line-fifth .middle-line-square {
        top: 5%; }
        .page-template-design-single .design-single-wrapper .info .middle-line-fifth .middle-line-square-mob {
          display: block;
          top: 70%; }
      .page-template-design-single .design-single-wrapper .info .middle-line .middle-line-square {
        z-index: 2; }
    .page-template-design-single .design-single-wrapper .info .left-side-sm {
      height: 0%; }
      .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-title {
        display: none; }
        .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-title .left-side-sm-title-tag:before {
          border: 2px solid rgba(255, 255, 255, 0.15);
          border-width: 2px 2px 0px 0px; }
        .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-title .left-side-sm-title-tag:after {
          border: 2px solid rgba(255, 255, 255, 0.15);
          border-width: 0px 0px 2px 2px; }
        .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-title .portfolio-left-scroll {
          position: absolute;
          bottom: 60px;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 9px;
          text-transform: uppercase;
          letter-spacing: 1.34em;
          color: #FBFBFB; }
      .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-text span {
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: rgba(255, 255, 255, 0.15);
        margin-top: -120px; }
    .page-template-design-single .design-single-wrapper .info .info-middle {
      width: 100%;
      position: relative;
      z-index: 2; }
      .page-template-design-single .design-single-wrapper .info .info-middle-top {
        padding-left: 0; }
        .page-template-design-single .design-single-wrapper .info .info-middle-top .title-block {
          margin-left: -30px; }
        .page-template-design-single .design-single-wrapper .info .info-middle-top-title {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: bold;
          font-size: 30px;
          margin: 0;
          color: white;
          position: relative;
          margin-left: -60px; }
        .page-template-design-single .design-single-wrapper .info .info-middle-top .title-block-lines {
          display: none; }
      .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle {
        display: flex;
        justify-content: space-between;
        margin-top: 70px;
        padding: 0 30px 0 20px; }
        .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-text {
          max-width: 48%;
          width: 100%; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-text p {
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            color: #fff;
            line-height: 33px;
            margin-top: 0; }
            .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-text p:first-child {
              position: relative;
              text-indent: 80px; }
              .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-text p:first-child:before {
                content: "";
                display: block;
                background-color: #E05D68;
                width: 70px;
                height: 10px;
                position: absolute;
                top: 12px; }
        .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img {
          max-width: 480px;
          width: 100%;
          position: relative; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .line-purple {
            width: 150px;
            height: 3px;
            left: 55px;
            top: -18px; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .line-corner {
            width: 75px;
            height: 140px;
            border-width: 3px 0px 0px 3px;
            top: -19px;
            left: -20px; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .line-blue {
            height: 150px;
            width: 3px;
            top: 121px;
            left: -18px; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img img {
            display: block;
            max-width: 480px;
            max-height: 390px; }
          .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .blog-single-img-text {
            position: absolute;
            right: -113px;
            top: 85px;
            transform: rotate(90deg);
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 15px;
            color: #fff; }
    .page-template-design-single .design-single-wrapper .info:after {
      content: "";
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: -1;
      background-color: rgba(24, 24, 24, 0.9); }
  .page-template-design-single .design-single-wrapper .design-single-bottom {
    position: relative; }
    .page-template-design-single .design-single-wrapper .design-single-bottom .middle-line-square {
      background-color: #E8E8E8; }
    .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d {
      display: flex;
      height: 100vh;
      padding-bottom: 100px; }
      .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .left-side .left-side-title-tag {
        color: #000000; }
      .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .left-side .portfolio-left-scroll {
        position: absolute;
        bottom: 60px;
        font-family: "Gotham Pro", sans-serif;
        font-style: normal;
        font-weight: normal;
        font-size: 9px;
        text-transform: uppercase;
        letter-spacing: 1.34em;
        color: #151515; }
      .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d {
        max-width: 66.6%;
        width: 100%;
        padding-top: 100px; }
        .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .info-middle-top {
          position: relative; }
          .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .info-middle-top .lines-title-wrapper .design-icon {
            position: absolute;
            top: -37px;
            right: -140px; }
          .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .info-middle-top .middle-top-big-text {
            position: absolute;
            bottom: 0;
            right: 30px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .info-middle-top .middle-top-big-text span {
              max-width: 75px;
              -webkit-text-stroke-width: 1px;
              -webkit-text-stroke-color: rgba(0, 0, 0, 0.15);
              color: transparent;
              font-style: normal;
              font-weight: bold;
              font-size: 80px;
              text-transform: uppercase; }
        .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center {
          display: flex;
          justify-content: space-between;
          margin-top: 80px;
          padding: 0px 30px; }
          .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img {
            max-width: 480px;
            width: 100%;
            position: relative; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .line-purple {
              width: 150px;
              height: 3px;
              left: 55px;
              top: -18px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .line-corner {
              width: 75px;
              height: 140px;
              border-width: 3px 0px 0px 3px;
              top: -19px;
              left: -20px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .line-blue {
              height: 150px;
              width: 3px;
              top: 121px;
              left: -18px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img img {
              display: block;
              max-width: 480px;
              max-height: 390px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .blog-single-img-text {
              position: absolute;
              right: -180px;
              top: -50px;
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 80px;
              color: rgba(0, 0, 0, 0.04);
              z-index: -1;
              text-transform: uppercase; }
          .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text {
            max-width: 48%;
            width: 100%; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 16px;
              color: #1B1B1B;
              line-height: 33px;
              margin-top: 0; }
              .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p:first-child {
                position: relative;
                text-indent: 80px; }
                .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p:first-child:before {
                  content: "";
                  display: block;
                  background-color: #E05D68;
                  width: 70px;
                  height: 10px;
                  position: absolute;
                  top: 12px; }
              .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p:nth-child(2) {
                position: relative;
                height: 65px;
                overflow: hidden;
                transition: height 0.4s ease; }
                .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p:nth-child(2):after {
                  content: "";
                  display: block;
                  height: 100%;
                  transition: opacity 0.3s ease;
                  opacity: 1;
                  position: absolute;
                  bottom: 0;
                  left: 0;
                  right: 0;
                  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff 100%); }
                .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text p:nth-child(2).show-more-text-open {
                  height: 100%;
                  max-height: 300px;
                  overflow: visible;
                  overflow: initial;
                  transition: height 0.4s ease; }
            .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .middle-3d-center-text .show-more {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: normal;
              font-size: 16px;
              text-decoration: underline;
              color: #1B1B1B; }
        .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .consultation {
          max-width: 90%;
          margin-top: 90px; }
      .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .right-3d {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        max-width: 16.6%;
        width: 100%; }
        .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .right-3d .right-3d-text {
          display: block;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 17px;
          color: #DDDDDD;
          text-transform: uppercase;
          transform: rotate(-90deg); }
          .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .right-3d .right-3d-text-dark {
            color: #878787; }
    .page-template-design-single .design-single-wrapper .design-single-bottom-fabric {
      margin-top: 50px; }
      .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle {
        max-width: 66.7%;
        width: 100%;
        margin: 0 auto; }
        .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .info-middle-top {
          margin-left: -40px; }
        .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content {
          display: flex;
          justify-content: space-between;
          margin-top: 80px;
          position: relative;
          padding-bottom: 100px; }
          .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-img {
            display: flex;
            justify-content: center;
            max-width: 48%;
            width: 100%;
            position: relative; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-img img {
              display: block;
              width: 370px;
              height: 430px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-img:before {
              content: "";
              display: block;
              border: 1px solid #000000;
              height: 115px;
              width: 115px;
              position: absolute;
              left: 0;
              bottom: 40px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-img:after {
              content: "";
              display: block;
              border: 1px solid #000000;
              height: 140px;
              width: 140px;
              position: absolute;
              right: 0;
              top: 0; }
          .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text {
            max-width: 48%;
            width: 100%;
            position: relative; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text h2 {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: bold;
              font-size: 45px;
              color: #000;
              margin-bottom: 40px; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text div {
              position: relative;
              padding: 20px 0; }
              .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text div p {
                font-family: "Gotham Pro", sans-serif;
                font-style: normal;
                font-weight: normal;
                font-size: 16px;
                line-height: 31px;
                color: #1B1B1B; }
              .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text div:before {
                content: "";
                display: block;
                background-color: #000;
                width: 670px;
                height: 1px;
                position: absolute;
                top: 0;
                left: -200px; }
              .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text div:after {
                content: "";
                display: block;
                background-color: #000;
                width: 670px;
                height: 1px;
                position: absolute;
                bottom: 0; }
            .page-template-design-single .design-single-wrapper .design-single-bottom-fabric .fabric-middle .fabric-middle-content-text .number {
              font-family: "Gotham Pro", sans-serif;
              font-style: normal;
              font-weight: 900;
              font-size: 100px;
              color: rgba(0, 0, 0, 0.04);
              position: absolute;
              bottom: 0;
              right: 0; }

.footer {
  background: url(/wp-content/themes/intericco/images/footer-bg.jpg);
  background-size: cover;
  position: relative; }
  .footer .footer-title {
    font-family: "Gotham Pro", sans-serif;
    font-style: normal;
    font-weight: bold;
    font-size: 45px;
    color: #EDEDED; }
  .footer .footer-container {
    display: flex;
    justify-content: space-between;
    max-width: 1360px;
    width: 100%; }
  .footer-top {
    display: flex;
    justify-content: center;
    padding: 70px 0 60px 0px;
    position: relative;
    z-index: 1; }
    .footer-top .footer-container .footer-map {
      width: 100%;
      padding: 0 25px; }
      .footer-top .footer-container .footer-map .footer-title {
        margin-bottom: 50px; }
      .footer-top .footer-container .footer-map .map-container {
        position: relative;
        padding: 25px 25px; }
        .footer-top .footer-container .footer-map .map-container .line-purple {
          width: 150px;
          height: 3px;
          left: 75px;
          top: -1px; }
        .footer-top .footer-container .footer-map .map-container .line-corner {
          width: 75px;
          height: 140px;
          border-width: 3px 0px 0px 3px;
          top: 0px;
          left: 0px; }
        .footer-top .footer-container .footer-map .map-container .line-blue {
          height: 150px;
          width: 3px;
          top: 140px;
          left: 1px; }
        .footer-top .footer-container .footer-map .map-container .footer-map-block {
          max-width: 100%; }
          .footer-top .footer-container .footer-map .map-container .footer-map-block iframe {
            height: 100%;
            width: 100%;
            min-height: 300px; }
    .footer-top .footer-container .footer-form {
      display: none;
      max-width: 500px;
      width: 100%; }
      .footer-top .footer-container .footer-form .tripple-lines {
        display: flex;
        justify-content: space-between; }
        .footer-top .footer-container .footer-form .tripple-lines-long {
          width: 270px;
          height: 1px;
          background-color: white;
          position: relative; }
          .footer-top .footer-container .footer-form .tripple-lines-long:before {
            content: "";
            display: block;
            background-color: white;
            width: 40px;
            height: 1px;
            position: absolute;
            right: -70px; }
        .footer-top .footer-container .footer-form .tripple-lines-two {
          background-color: white;
          width: 40px;
          height: 1px; }
    .footer-top .footer-container .footer-top-right-text {
      position: absolute;
      top: 150px;
      right: -49px;
      transform: rotate(-180deg); }
      .footer-top .footer-container .footer-top-right-text span {
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: rgba(255, 255, 255, 0.55);
        color: transparent;
        text-transform: uppercase;
        font-style: normal;
        font-weight: bold;
        font-size: 90px;
        -webkit-writing-mode: tb;
        -ms-writing-mode: tb;
        writing-mode: tb; }
    .footer-top:after {
      content: "";
      display: none;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: -1;
      background-color: rgba(0, 0, 0, 0.8); }
  .footer-bottom {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    position: relative;
    z-index: 1; }
    .footer-bottom .footer-container {
      flex-direction: column-reverse;
      align-items: center; }
    .footer-bottom-left {
      max-width: 100%;
      width: 100%;
      margin-top: 70px; }
      .footer-bottom-left-title {
        display: flex;
        align-items: center;
        justify-content: center; }
        .footer-bottom-left-title .footer-title {
          position: relative;
          padding-left: 50px; }
          .footer-bottom-left-title .footer-title:before {
            content: "";
            display: block;
            border: 2px solid #E05D68;
            border-width: 0px 2px 2px 0px;
            height: 15px;
            width: 230px;
            position: absolute;
            left: 0px;
            bottom: -24px; }
          .footer-bottom-left-title .footer-title:after {
            content: "";
            display: block;
            height: 55px;
            width: 15px;
            border: 2px solid #E05D68;
            border-width: 2px 0px 0px 2px;
            position: absolute;
            top: 20px;
            left: 0px; }
        .footer-bottom-left-title span {
          display: none;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: bold;
          font-size: 16px;
          color: white;
          margin-top: -10px;
          margin-left: 40px; }
      .footer-bottom-left .footer-bottom-left-menu {
        display: flex;
        flex-wrap: wrap;
        margin-top: 70px;
        padding-left: 20px; }
        .footer-bottom-left .footer-bottom-left-menu .footer-menu-item {
          display: flex;
          justify-content: center;
          width: 50%;
          margin-bottom: 35px; }
          .footer-bottom-left .footer-bottom-left-menu .footer-menu-item a {
            display: flex;
            align-items: center;
            font-family: "Gotham Pro", sans-serif;
            font-style: normal;
            font-weight: normal;
            font-size: 16px;
            color: #8F8F8F;
            width: 150px;
            height: 40px;
            padding-left: 15px;
            position: relative;
            transition: background-color 0.3s ease; }
            .footer-bottom-left .footer-bottom-left-menu .footer-menu-item a:after {
              content: "";
              width: 70px;
              height: 1px;
              background-color: white;
              position: absolute;
              right: -55px;
              opacity: 0;
              transition: opacity 0.3s ease; }
            .footer-bottom-left .footer-bottom-left-menu .footer-menu-item a:hover {
              background-color: #151515;
              transition: background-color 0.3s ease; }
              .footer-bottom-left .footer-bottom-left-menu .footer-menu-item a:hover:after {
                opacity: 1;
                transition: opacity 0.3s ease; }
      .footer-bottom-left .footer-social {
        display: flex;
        justify-content: center;
        align-items: center;
        padding-left: 35px;
        margin-top: 30px; }
        .footer-bottom-left .footer-social .social {
          display: flex;
          align-items: center; }
          .footer-bottom-left .footer-social .social .social-icon .icon {
            fill: rgba(255, 255, 255, 0.5); }
          .footer-bottom-left .footer-social .social .social-icon:nth-child(2) {
            margin: 0px 50px; }
        .footer-bottom-left .footer-social:after {
          content: "";
          display: none;
          background-color: #C4C4C4;
          width: 250px;
          height: 1px; }
    .footer-bottom-right {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center; }
      .footer-bottom-right .footer-right-info-item {
        display: flex; }
        .footer-bottom-right .footer-right-info-item img {
          width: 35px;
          height: 35px; }
        .footer-bottom-right .footer-right-info-item .footer-right-info-item-place {
          display: flex;
          flex-direction: column;
          border-left: 1px solid #5B5B5B;
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 14px;
          color: white;
          padding-left: 20px;
          margin-left: 20px; }
        .footer-bottom-right .footer-right-info-item:nth-child(2) {
          margin: 50px 0; }
    .footer-bottom .footer-anchor {
      display: flex;
      justify-content: center;
      width: 100%;
      margin: 120px auto 0;
      padding: 40px 10%;
      border-top: 1px solid #5B5B5B;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 16px;
      color: #8F8F8F;
      background-color: #1c1c1c; }
      .footer-bottom .footer-anchor-left {
        display: none;
        justify-content: space-between;
        width: 40%; }
        .footer-bottom .footer-anchor-left a {
          color: #8F8F8F; }
  .footer:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.8); }

.header {
  display: flex;
  justify-content: space-between;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  height: 100px; }
  .header-left-block {
    display: none;
    max-width: 35%;
    width: 100%;
    padding-left: 25%; }
    .header-left-block .header-lang {
      display: flex;
      align-items: center; }
      .header-left-block .header-lang li {
        display: flex; }
        .header-left-block .header-lang li:marker {
          display: none; }
        .header-left-block .header-lang li a {
          font-family: "Gotham Pro", sans-serif;
          font-style: normal;
          font-weight: normal;
          font-size: 14px;
          color: #545454; }
        .header-left-block .header-lang li:last-child:before {
          content: '/';
          display: block;
          margin: 0px 10px;
          color: #545454; }
        .header-left-block .header-lang li.current-lang a {
          color: #fff; }
  .header .header-logo {
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 150px;
    position: absolute;
    left: 10%;
    top: 75px; }
  .header-right-block {
    display: none;
    align-items: center; }
    .header-right-block .small-line {
      width: 120px;
      height: 1px;
      background-color: #fff; }
    .header-right-block .social {
      display: flex;
      padding: 0px 120px 0px 60px; }
      .header-right-block .social-icon {
        display: flex;
        align-items: center; }
        .header-right-block .social-icon svg {
          fill: #fff; }
        .header-right-block .social-icon:nth-child(2) {
          margin: 0px 60px; }

.menu-left {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  max-width: 100px;
  position: absolute;
  top: 60px;
  right: 40px;
  z-index: 11; }
  .menu-left .navigation {
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 30;
    transform: translate(-110%);
    transition: transform 800ms cubic-bezier(0.77, 0, 0.175, 1); }
    .menu-left .navigation-left {
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      padding: 50px 6%;
      background-color: #151515; }
      .menu-left .navigation-left .menu-left-top-burger-close {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 65px;
        height: 65px;
        background: #1B1B1B;
        cursor: pointer; }
        .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross {
          display: block;
          margin: auto 0;
          position: relative;
          width: 30px;
          padding: 0;
          cursor: pointer; }
          .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross:before {
            content: "";
            display: block;
            width: 100%;
            height: 3px;
            background-color: #fff;
            transform: rotate(45deg);
            transition: transform 0.3s ease; }
          .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross span {
            display: block;
            width: 100%;
            height: 3px;
            margin: 8px 0;
            background-color: #fff;
            transition: all 0.3s ease;
            position: absolute;
            left: -1000px; }
          .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross:after {
            content: "";
            height: 3px;
            width: 100%;
            transform: rotate(-45deg);
            transition: all 0.3s ease;
            position: absolute;
            top: 0;
            background-color: #fff;
            display: block;
            transition: transform 0.3s ease; }
          .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross:hover {
            cursor: pointer; }
      .menu-left .navigation-left .logo-mob {
        max-width: 150px; }
      .menu-left .navigation-left .text-with-logo {
        transform-origin: 50% 50% 0;
        transform-origin: initial;
        display: none; }
        .menu-left .navigation-left .text-with-logo span {
          display: block;
          white-space: nowrap; }
    .menu-left .navigation .menu-list {
      display: flex;
      flex-direction: column;
      height: 100%;
      width: 100%;
      background-color: #222222; }
      .menu-left .navigation .menu-list .menu-list-item {
        width: 100%;
        height: calc(100%/6);
        overflow: hidden;
        position: relative; }
        .menu-left .navigation .menu-list .menu-list-item .menu-list-item-bg {
          height: 100%;
          width: 100%;
          transform: scale(1.1);
          position: relative;
          transition: transform 0.3s ease; }
          .menu-left .navigation .menu-list .menu-list-item .menu-list-item-bg:after {
            content: "";
            background-color: rgba(0, 0, 0, 0.6);
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0; }
        .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container {
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          background-color: #222222;
          transition: background-color 0.3s ease; }
          .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .menu-list-item-link {
            display: block;
            height: 100%;
            width: 100%; }
          .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content {
            position: absolute;
            top: 30%;
            right: 0;
            left: 0;
            text-align: center; }
            .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-main {
              font-family: "Gotham Pro", sans-serif;
              font-size: 23px;
              font-weight: bold;
              transition: color 0.3s ease; }
            .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-sub {
              margin-top: 80px;
              padding: 0px 10%; }
              .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-sub .link-content-sub-item {
                margin-bottom: 40px;
                padding-bottom: 30px;
                border-bottom: #6D6D6D 1px solid; }
                .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-sub .link-content-sub-item a {
                  font-family: "Gotham Pro", sans-serif;
                  font-size: 23px;
                  font-weight: bold;
                  transition: color 0.3s ease; }
                  .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-sub .link-content-sub-item a:hover {
                    color: #E05D68;
                    transition: color 0.3s ease; }
                .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container .link-content .link-content-sub .link-content-sub-item:last-child {
                  border-bottom: none; }
          .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container:hover {
            background-color: transparent;
            transition: background-color 0.3s ease; }
            .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container:hover .menu-list-item-link {
              border-top: #E05D68 6px solid; }
            .menu-left .navigation .menu-list .menu-list-item .menu-list-item-container:hover .link-content-main {
              color: #E05D68;
              transition: color 0.3s ease; }
        .menu-left .navigation .menu-list .menu-list-item:nth-child(2n) .menu-list-item-container {
          background-color: #292929;
          transition: background-color 0.3s ease; }
          .menu-left .navigation .menu-list .menu-list-item:nth-child(2n) .menu-list-item-container:hover {
            background-color: transparent;
            transition: background-color 0.3s ease; }
        .menu-left .navigation .menu-list .menu-list-item:hover .menu-list-item-bg {
          transform: scale(1);
          transition: transform 0.3s ease; }
    .menu-left .navigation.navigation-open {
      transform: translate(0%);
      transition: transform 800ms cubic-bezier(0.77, 0, 0.175, 1); }
  .menu-left-top-burger {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 60px;
    height: 60px;
    background: #1B1B1B;
    cursor: pointer; }
    .menu-left-top-burger-btn {
      display: block;
      margin: auto 0;
      position: relative;
      width: 25px;
      padding: 0;
      cursor: pointer; }
      .menu-left-top-burger-btn:before {
        content: "";
        display: block;
        width: 100%;
        height: 2px;
        background-color: #fff;
        transform: rotate(0deg);
        transition: transform 0.3s ease; }
      .menu-left-top-burger-btn span {
        display: block;
        width: 100%;
        height: 2px;
        margin: 3px 0;
        background-color: #fff;
        transition: all 0.3s ease; }
      .menu-left-top-burger-btn:after {
        content: "";
        width: 60%;
        height: 2px;
        background-color: #fff;
        display: block;
        transform: rotate(0deg);
        transition: transform 0.3s ease; }
      .menu-left-top-burger-btn:hover {
        cursor: pointer; }
  .menu-left-top-name {
    display: none;
    flex-direction: column;
    justify-content: flex-end;
    padding-bottom: 100px;
    min-height: 500px;
    width: 100%;
    background-color: #151515;
    cursor: pointer; }
    .menu-left-top-name-text {
      display: block;
      font-family: "Gotham Pro", sans-serif;
      font-style: normal;
      font-weight: normal;
      font-size: 14px;
      transform: rotate(-90deg);
      text-transform: uppercase;
      color: #fff;
      letter-spacing: 1.34em; }
  .menu-left-bottom {
    display: none;
    align-items: center;
    justify-content: center;
    background-color: #151515;
    height: 100px;
    width: 100px;
    cursor: pointer; }
    .menu-left-bottom svg {
      fill: #fff; }
  .menu-left .info-right {
    display: none;
    padding-bottom: 50px; }
    .menu-left .info-right .text-with-logo {
      transform-origin: 50% 50% 0;
      transform-origin: initial; }
      .menu-left .info-right .text-with-logo h3 {
        color: black; }
      .menu-left .info-right .text-with-logo span {
        white-space: nowrap; }
      .menu-left .info-right .text-with-logo:before {
        display: none; }
      @media (min-width: 320px) and (max-width: 1024px) {
        .middle-wrapper .info .left-side-sm .left-side-sm-text {
          right: 15%;
          top: 200px; }
        .middle-wrapper .service-middle .service-middle-left {
          max-width: 15%; }
      .middle-wrapper .news .left-side .left-side-title {
        display: none; }
      .middle-wrapper .news .left-side {
        max-width: 15%;
        padding-left: 0; }
        .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-text {
          right: 15%;
          top: 200px; }
      .footer-top {
        background: none !important; } }
      @media (min-width: 440px) {
              .middle-wrapper .service-top-middle-right .lines-title {
                font-size: 35px; } }
      @media (min-width: 640px) {
              .middle-wrapper .service-top-middle-right .lines-title {
                font-size: 40px; } }
      @media (min-width: 740px) {
        .middle-wrapper .middle-portfolio-slider {
          width: 55%; } }
      @media (min-width: 768px) {
    .flex_container {
      padding: 0 20px; }
    .flex_row {
      margin: 0 -10px; }
  .flex_col-tab--1-1 {
    width: 100%; }
  .flex_col-tab--1-2 {
    width: 50%; }
  .flex_col-tab--1-3 {
    width: calc(100% / 3); }
  .flex_col-tab--2-3 {
    width: calc(100% - (100% / 3)); }
  .flex_col-tab--4-5 {
    width: calc(100% - 20%); }
      input[type="text"] {
        height: 50px; }
      input[type="email"] {
        height: 50px; }
              .middle-wrapper .middle-portfolio-slider-top-left .category {
                letter-spacing: 0.405em; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .line-purple {
              width: 260px; }
              .middle-wrapper .service-top-middle-right .lines-title {
                font-size: 45px; } }
      @media (min-width: 1024px) {
    [class^="flex_col"] {
      padding: 0 10px; }
    .flex_container {
      padding-left: 50px; }
  .flex_col-desk--1-2 {
    width: 50%; }
  .flex_col-desk--1-3 {
    width: calc(100% / 3); }
  .flex_col-desk--1-5 {
    width: calc(100% - 80%); }
  .flex_col-desk--1-6 {
    width: calc(100% - (100%/6)*5); }
  .flex_col-desk--2-5 {
    width: calc(100% - 60%); }
  .flex_col-desk--4-5 {
    width: calc(100% - 20%); }
  .flex_col-desk--2-3 {
    width: calc(100% - (100% / 3)); }
  .flex_col-desk--1-4 {
    width: calc(100% - 75%); }
  .flex_col-desk--3-4 {
    width: calc(100% - 25%); }
      .tripple-btn .tripple-btn-title {
        letter-spacing: 0.405em; }
        .left-side-title .left-side-title-wrapper .left-side-title-tag {
          -webkit-writing-mode: tb;
              -ms-writing-mode: tb;
                  writing-mode: tb;
          font-size: 45px; }
      .left-side-title .left-side-title-wrapper {
        justify-content: flex-end;
        transform: rotate(-180deg);
        padding-left: 0;
        padding-left: initial;
        padding-top: 0;
        padding-top: initial; }
    .left-side-title {
      height: 100%;
      width: 100px; }
      .left-side-text {
        right: 0;
        top: 0;
        bottom: 0;
        margin: 0 auto; }
    .left-side {
      max-width: 16.6%; }
        .lines-title-wrapper .lines-title:before {
          display: none; }
      .lines-title-wrapper .lines-title {
        width: auto; }
    .lines-title-wrapper .line-purple-mob {
      display: none; }
    .lines-title-wrapper .line-corner-mob {
      display: none; }
    .lines-title-wrapper .line-blue-mob {
      display: none; }
    .lines-title-wrapper {
      padding-top: 0; }
      .middle-line-first {
        left: 16.6%; }
      .middle-line-second {
        display: block; }
      .middle-line-fourth {
        display: block; }
      .middle-line-fifth {
        left: 83.2%; }
      .footer-bottom-left-menu .footer-menu-item {
        width: 30%;
        justify-content: initial; }
          .design-seo .lines-title-wrapper .lines-title:before {
            display: block; }
      .design-seo .lines-title-wrapper .line-purple-mob {
        display: block; }
      .design-seo .lines-title-wrapper .line-corner-mob {
        display: block; }
      .design-seo .lines-title-wrapper .line-blue-mob {
        display: block; }
      .design-seo .lines-title-wrapper {
        padding-top: 74px; }
        .top-site-middle-title {
          font-size: 50px; }
          .top-site-middle-bottom p {
            margin-left: 45px;
            margin-bottom: 15px;
            border-left: solid #fff 3px;
            padding-left: 20px;
            line-height: normal;
            line-height: initial; }
        .top-site-middle-bottom {
          align-items: center;
          flex-direction: row;
          height: 50px; }
      .top-site-middle {
        padding-left: 25%;
        padding-bottom: 60px; }
      .top-site .long-line {
        position: static;
        position: initial;
        width: 400px; }
      .top-site:before {
        content: ""; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
          bottom: -35px;
          right: -20px; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-purple {
          width: 28px;
          height: 4px;
          right: -28px;
          top: 63px; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-corner {
          width: 20px;
          height: 35px;
          border-width: 0px 0px 4px 4px;
          top: 31px;
          left: 15px; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-blue {
          height: 65px;
          width: 4px;
          top: -34px;
          left: 16px; }
          .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line span {
            position: static;
            position: initial;
            bottom: auto;
            bottom: initial;
            left: auto;
            left: initial;
            width: 4px;
            height: 50px; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line {
          position: static;
          position: initial;
          padding-left: 30px;
          margin: 140px 0 100px 0; }
        .middle-wrapper .middle-portfolio .middle-portfolio-left-title .portfolio-left-scroll {
          display: block; }
      .middle-wrapper .middle-portfolio .middle-portfolio-left {
        padding: 160px 0 80px 80px; }
            .middle-wrapper .middle-portfolio-slider-top .tripple-btn-big {
              position: relative;
              bottom: auto;
              bottom: initial; }
          .middle-wrapper .middle-portfolio-slider-top {
            justify-content: space-between;
            padding-right: 20%;
            margin: 0; }
                  .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper .swiper-slide .slide-title {
                    text-align: right;
                    padding-right: 20px;
                    padding-left: 0;
                    word-spacing: 999px;
                    border-right: 2px solid black;
                    border-left: none; }
                .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-wrapper .swiper-slide {
                  align-items: initial; }
              .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-pagination {
                justify-content: initial; }
                .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next .icon {
                  transform: rotate(0deg); }
                .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next:before {
                  display: block; }
              .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-next {
                left: -100px;
                right: auto;
                right: initial;
                top: 40%;
                transform: rotate(0deg); }
                .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-prev .icon {
                  transform: rotate(0deg); }
              .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main .swiper-button-prev {
                display: none; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design .swiper-main {
              margin-right: -100px; }
            .middle-wrapper .middle-portfolio-slider .swiper-container-design:after {
              display: block; }
        .middle-wrapper .middle-portfolio-slider {
          padding: 50px 0 0 70px;
          margin: 0;
          margin: initial;
          width: 83.4%; }
      .middle-wrapper .middle-portfolio {
        flex-direction: row;
        padding-bottom: 20px; }
            .middle-wrapper .info .middle-line-first .middle-line-square-mob {
              display: none; }
          .middle-wrapper .info .middle-line-third .middle-line-square {
            top: -2%; }
            .middle-wrapper .info .middle-line-fifth .middle-line-square-mob {
              display: none; }
          .middle-wrapper .info .left-side-sm .left-side-sm-title {
            display: block; }
        .middle-wrapper .info .left-side-sm {
          height: 100%; }
            .middle-wrapper .info .info-middle-top-title:before {
              content: url(/wp-content/themes/intericco/images/logo-e.svg);
              display: block;
              border: none;
              width: 55px;
              height: 55px;
              position: absolute;
              left: -80px;
              top: -3px; }
            .middle-wrapper .info .info-middle-top-title:after {
              content: "";
              display: block;
              width: 75px;
              height: 5px;
              background-color: #E05D68;
              position: absolute;
              top: 0;
              bottom: 0;
              right: 55px;
              margin: auto; }
            .middle-wrapper .info .info-middle-top-title {
              font-size: 45px; }
          .middle-wrapper .info .info-middle-top {
            padding-left: 230px; }
                .middle-wrapper .info .info-middle-main-numbers .main-numbers-block-category {
                  margin-bottom: 15px; }
                .middle-wrapper .info .info-middle-main-numbers .main-numbers-block-bottom-text {
                  text-align: right;
                  padding-left: 0px; }
              .middle-wrapper .info .info-middle-main-numbers .main-numbers-block {
                align-items: initial;
                max-width: 33%;
                margin-bottom: 0; }
            .middle-wrapper .info .info-middle-main-numbers {
              flex-direction: row; }
            .middle-wrapper .info .info-middle-main-rating-title {
              display: block; }
            .middle-wrapper .info .info-middle-main-rating-stars {
              display: block; }
            .middle-wrapper .info .info-middle-main-rating-text {
              text-align: left;
              text-align: initial; }
            .middle-wrapper .info .info-middle-main-rating .main-link {
              margin: 0; }
          .middle-wrapper .info .info-middle-main-rating {
            max-width: 33%; }
          .middle-wrapper .info .info-middle-main {
            flex-direction: row;
            padding-left: 90px;
            padding: 140px 0 90px 170px; }
        .middle-wrapper .info .info-middle {
          max-width: 66.6%;
          padding-top: 170px; }
        .middle-wrapper .info .info-right {
          display: flex; }
      .middle-wrapper .info {
        flex-direction: row;
        padding-top: 0px;
        padding-bottom: 0;
        height: 800px; }
            .middle-wrapper .service-top-middle-left {
              display: flex; }
              .middle-wrapper .service-top-middle-right .lines-title:after {
                display: none; }
              .middle-wrapper .service-top-middle-right .title-block-lines {
                display: block; }
            .middle-wrapper .service-top-middle-right {
              width: 50%; }
          .middle-wrapper .service-middle .service-middle-left .service-middle-left-text {
            left: 0;
            top: auto;
            top: initial; }
              .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-title {
                font-size: 60px; }
              .middle-wrapper .service-middle .service-middle-main .service-middle-main-block .middle-main-block-text {
                max-height: 105px; }
            .middle-wrapper .service-middle .service-middle-main .service-middle-main-block {
              width: 50%;
              padding-left: 50px; }
          .middle-wrapper .service-middle .service-middle-main {
            flex-direction: row;
            max-width: 66.6%; }
          .middle-wrapper .service-middle .middle-service-left {
            max-width: 16.6%; }
        .middle-wrapper .service-middle {
          height: 450px; }
          .middle-wrapper .service-bottom .service-bottom-link {
            height: 100px;
            max-height: 100px;
            width: 100px;
            max-width: 100px; }
        .middle-wrapper .service-bottom {
          max-width: 16.6%; }
      .middle-wrapper .service {
        background-color: white; }
            .middle-wrapper .news-middle-top .title-block-reverse .title-block-lines {
              display: block; }
            .middle-wrapper .news-middle-top .news-middle-top-link {
              display: flex; }
              .middle-wrapper .news-middle .news-middle-slider .swiper-slide .tripple-btn {
                margin-left: 0; }
            .middle-wrapper .news-middle .news-middle-slider .swiper-slide {
              align-items: initial; }
            .middle-wrapper .news-middle .news-middle-slider .swiper-pagination {
              justify-content: initial;
              left: 100px; }
            .middle-wrapper .news-middle .news-middle-slider:after {
              display: block; }
          .middle-wrapper .news-middle .news-middle-slider {
            padding-left: 100px; }
        .middle-wrapper .news-middle {
          max-width: 66.6%; }
          .middle-wrapper .news-right-logo {
            display: flex; }
        .middle-wrapper .news-right {
          max-width: 16.7%; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .line-purple {
              width: 230px; }
            .page-template-design .design-wrapper .design-container .design-tabs .tabs-content-container .line-blue {
              height: 250px; }
                .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .blog-item .line-purple {
                  width: 230px; }
            .page-template-blog .blog-wrapper .blog-container .blog-slider .swiper-container .swiper-pagination {
              justify-content: initial; }
      .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
        bottom: -35px;
        right: -20px; }
      .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .line-purple {
        width: 28px;
        height: 4px;
        right: -28px;
        top: 63px; }
      .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .line-corner {
        width: 20px;
        height: 35px;
        border-width: 0px 0px 4px 4px;
        top: 31px;
        left: 15px; }
      .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-wrapper .line-blue {
        height: 65px;
        width: 4px;
        top: -34px;
        left: 16px; }
        .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-red_line span {
          position: static;
          position: initial;
          bottom: auto;
          bottom: initial;
          left: auto;
          left: initial;
          width: 4px;
          height: 50px; }
      .blog-template-default.single-blog .blog-single-main .middle-portfolio-left-title .portfolio-left-title-red_line {
        position: static;
        position: initial;
        padding-left: 30px;
        margin: 140px 0 100px 0; }
    .blog-template-default.single-blog .blog-single-main .middle-portfolio-left {
      padding: 160px 0 80px 80px; }
      .page-template-design-single .top-site .swiper-bg .swiper-pagination {
        justify-content: initial; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .portfolio-left-title-tag:before {
          bottom: -35px;
          right: -20px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-purple {
          width: 28px;
          height: 4px;
          right: -28px;
          top: 63px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-corner {
          width: 20px;
          height: 35px;
          border-width: 0px 0px 4px 4px;
          top: 31px;
          left: 15px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-wrapper .line-blue {
          height: 65px;
          width: 4px;
          top: -34px;
          left: 16px; }
          .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line span {
            position: static;
            position: initial;
            bottom: auto;
            bottom: initial;
            left: auto;
            left: initial;
            width: 4px;
            height: 50px; }
        .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left-title .portfolio-left-title-red_line {
          position: static;
          position: initial;
          padding-left: 30px;
          margin: 140px 0 100px 0; }
      .page-template-design-single .design-single-wrapper .design-single-portfolio .middle-portfolio-left {
        padding: 160px 0 80px 80px; }
            .page-template-design-single .design-single-wrapper .info .middle-line-first .middle-line-square-mob {
              display: none; }
          .page-template-design-single .design-single-wrapper .info .middle-line-third .middle-line-square {
            top: -2%; }
            .page-template-design-single .design-single-wrapper .info .middle-line-fifth .middle-line-square-mob {
              display: none; }
          .page-template-design-single .design-single-wrapper .info .left-side-sm .left-side-sm-title {
            display: block; }
        .page-template-design-single .design-single-wrapper .info .left-side-sm {
          height: 100%; }
            .page-template-design-single .design-single-wrapper .info .info-middle-top-title:after {
              content: "";
              display: block;
              width: 75px;
              height: 5px;
              background-color: #fff;
              position: absolute;
              top: 0;
              bottom: 0;
              right: -155px;
              margin: auto; }
            .page-template-design-single .design-single-wrapper .info .info-middle-top-title {
              font-size: 45px; }
            .page-template-design-single .design-single-wrapper .info .info-middle-top .title-block-lines {
              display: block; }
              .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .line-purple {
                width: 230px; }
              .page-template-design-single .design-single-wrapper .info .info-middle .info-blog-single-middle-img .line-blue {
                height: 150px; }
        .page-template-design-single .design-single-wrapper .info .info-middle {
          max-width: 66.6%;
          padding-top: 100px; }
      .page-template-design-single .design-single-wrapper .info {
        flex-direction: row;
        padding-top: 0px;
        padding-bottom: 0;
        height: 800px; }
                .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .line-purple {
                  width: 230px; }
                .page-template-design-single .design-single-wrapper .design-single-bottom .design-single-bottom-3d .middle-3d .middle-3d-center .info-blog-single-middle-img .line-blue {
                  height: 150px; }
            .footer-top .footer-container .footer-map .map-container .line-purple {
              width: 230px; }
            .footer-top .footer-container .footer-map .map-container .line-blue {
              height: 250px; }
              .footer-top .footer-container .footer-map .map-container .footer-map-block iframe {
                min-height: 400px;
                min-width: 600px; }
          .footer-top .footer-container .footer-map .map-container {
            padding: 25px 0 0 25px; }
        .footer-top .footer-container .footer-map {
          width: auto;
          padding: 0; }
        .footer-top .footer-container .footer-form {
          display: block; }
        .footer-top .footer-container .footer-top-right-text {
          top: -40px;
          right: 20px; }
        .footer-top:after {
          display: block; }
        .footer-bottom .footer-container {
          flex-direction: row;
          align-items: initial; }
            .footer-bottom-left-title span {
              display: block; }
          .footer-bottom-left-title {
            justify-content: initial; }
            .footer-bottom-left .footer-bottom-left-menu .footer-menu-item {
              width: 30%;
              justify-content: initial; }
            .footer-bottom-left .footer-social:after {
              display: block; }
          .footer-bottom-left .footer-social {
            justify-content: space-between;
            max-width: 80%; }
        .footer-bottom-left {
          max-width: 55%;
          margin-top: 0; }
            .footer-bottom-right .footer-right-info-item:nth-child(2) {
              margin: 0; }
        .footer-bottom-right {
          align-items: initial; }
          .footer-bottom .footer-anchor-left {
            display: flex; }
        .footer-bottom .footer-anchor {
          max-width: 80%;
          justify-content: space-between; }
      .footer-bottom {
        background-color: #1c1c1c;
        padding-top: 60px; }
      .footer:after {
        display: none; }
    .footer {
      background: none; }
      .header-left-block {
        display: flex; }
      .header .header-logo {
        margin: 0 auto;
        left: 0;
        right: 0;
        top: 25px;
        max-width: 220px; }
      .header-right-block {
        display: flex; }
            .menu-left .navigation-left .menu-left-top-burger-close .menu-left-top-burger-cross {
              width: 40px; }
          .menu-left .navigation-left .menu-left-top-burger-close {
            width: 100px;
            height: 100px; }
          .menu-left .navigation-left .logo-mob {
            display: none; }
          .menu-left .navigation-left .text-with-logo {
            display: block; }
        .menu-left .navigation-left {
          flex-direction: column;
          align-items: initial;
          width: 100px;
          height: 100%;
          padding: 0 0 12% 0; }
          .menu-left .navigation .menu-list .menu-list-item {
            height: 100%;
            width: calc(100%/6); }
        .menu-left .navigation .menu-list {
          flex-direction: row; }
      .menu-left .navigation {
        flex-direction: row; }
          .menu-left-top-burger-btn:before {
            height: 3px; }
          .menu-left-top-burger-btn span {
            margin: 8px 0;
            height: 3px; }
          .menu-left-top-burger-btn:after {
            height: 3px; }
        .menu-left-top-burger-btn {
          width: 40px; }
      .menu-left-top-burger {
        width: 100px;
        height: 100px; }
      .menu-left-top-name {
        display: flex; }
      .menu-left-bottom {
        display: flex; }
    .menu-left {
      left: 0;
      top: 0;
      right: auto;
      right: initial;
      min-height: 100vh; } }
      @media (max-width: 1600px) {
    .flex_container {
      max-width: 1024px;
      padding: 0 15px; } }
      @media (max-width: 700px) {
    .flex_col-desk--2-4 {
      width: 100%; } }

<<<<<<< Updated upstream
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJzZXR0aW5ncy9fZ3JpZC5zY3NzIiwiY29tbW9uL19iYXNlLnNjc3MiLCJzZXR0aW5ncy9fdmFyaWFibGVzLnNjc3MiLCJjb21tb24vX2ZvbnRzLnNjc3MiLCJjb21tb24vX3JlY292ZXIuc2NzcyIsInBhZ2VzL2Zyb250LXBhZ2Uuc2NzcyIsInBhZ2VzL2Rlc2lnbi5zY3NzIiwicGFnZXMvNDA0LnNjc3MiLCJwYWdlcy9jb250YWN0cy5zY3NzIiwicGFnZXMvYmxvZy5zY3NzIiwicGFnZXMvYmxvZy1zaW5nbGUuc2NzcyIsImJsb2Nrcy9fZm9vdGVyLnNjc3MiLCJibG9ja3MvX2hlYWRlci5zY3NzIiwiYmxvY2tzL19tZW51LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUNDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGFBQWE7RUFFYixlQUFlLEVBQUE7RURHZjtJQ0tFLFdBQVcsRUFBQTs7QUFLYjtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsVUFBVSxFQUFBOztBQWdCWjtFQUNFLGVBQWU7RUFDZixhQUFhO0VBQ2IsZUFBZSxFQUFBO0VBRWY7SUFDRSxtQkFBbUIsRUFBQTs7QUFTckI7RUFDRSxXQUFXLEVBQUE7RUFEWjtJQUlHLGNBQWMsRUFBQTs7QUFJbEI7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxzQkFBc0IsRUFBQTs7QUFHeEI7RUFDRSw4QkFBOEIsRUFBQTs7QUFHaEM7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSx1QkFBdUIsRUFBQTs7QUFvRnZCO0VBQ0UsdUJBQXVCLEVBQUE7O0FDeksvQjtFQUNFLHlDQUF5QztFQUN6QyxnQkFBZ0I7RUFDaEIsV0FBVyxFQUFBO0VBSGI7SUFPTSx3QkFBd0I7SUFDeEIsVUFBVSxFQUFBO0VBUmhCO0lBWU0sa0JBQWtCO0lBQ2xCLHlDQUF5QyxFQUFB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LEVBQUE7VUFoQ3RCO1lBOENXLFdBQVcsRUFBQTtRQTlDdkI7VUF1RFEsV0FBVyxFQUFBO01BaEV2QjtRQXFFUSxZQUFZO1FBQ1osYUFBYSxFQUFBO01BSXJCO1FBdUJRLGFBQWEsRUFBQTtNQUt6QjtRQWNRLGFBQWEsRUFBQTtJQXhZekI7TUFrYVEsT0FBTztNQUNQLE1BQU07TUFDTixXQUFjO01BQWQsY0FBYztNQUNkLGlCQUFpQixFQUFBLEVidFp4QjtNQVdHO0lBUkY7TUFTSSxpQkFBaUI7TUFDakIsZUFBZSxFQUFBLEVBVWxCO01BcUlLO0lBSEY7TUFJSSxXQUFXLEVBQUEsRUFFZCIsImZpbGUiOiJzdHlsZXMubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIltjbGFzc149XCJmbGV4X2NvbFwiXSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwIDEwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgW2NsYXNzXj1cImZsZXhfY29sXCJdIHtcbiAgICAgIHBhZGRpbmc6IDAgMTBweDsgfSB9XG4gIFtjbGFzc149XCJmbGV4X2NvbFwiXSA+ICoge1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5mbGV4X2NvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEzMDBweDtcbiAgcGFkZGluZzogMCAyNXB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAxNjAwcHgpIHtcbiAgICAuZmxleF9jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiAxMDI0cHg7XG4gICAgICBwYWRkaW5nOiAwIDE1cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmZsZXhfY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmctbGVmdDogNTBweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5mbGV4X2NvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nOiAwIDIwcHg7IH0gfVxuXG4uZmxleF9yb3cge1xuICBtYXJnaW46IDAgLTEwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDsgfVxuICAuZmxleF9yb3ctYWxpZ24tY2VudGVyIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5mbGV4X3JvdyB7XG4gICAgICBtYXJnaW46IDAgLTEwcHg7IH0gfVxuXG4uZmxleF9jb2wtLTEtMSB7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5mbGV4X2NvbC0tMS0xIC5jZjdzZy1wb3B1cCB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmZsZXhfY29sLS0xLTIge1xuICB3aWR0aDogNTAlOyB9XG5cbi5mbGV4X2NvbC0tMS0zIHtcbiAgd2lkdGg6IGNhbGMoOTkuOSUgLyAzKTsgfVxuXG4uZmxleF9jb2wtLTItMyB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAoMTAwJSAvIDMpKTsgfVxuXG4uZmxleF9jb2wtLTEtNCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA3NSUpOyB9XG5cbi5mbGV4X2NvbC0tMi00IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1JSk7IH1cblxuLmZsZXhfY29sLS0zLTQge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMjUlKTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZsZXhfY29sLXRhYi0tMS0xIHtcbiAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuZmxleF9jb2wtdGFiLS0xLTIge1xuICAgIHdpZHRoOiA1MCU7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZsZXhfY29sLXRhYi0tMS0zIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC8gMyk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZsZXhfY29sLXRhYi0tMi0zIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gKDEwMCUgLyAzKSk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmZsZXhfY29sLXRhYi0tNC01IHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjAlKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTEtMiB7XG4gICAgd2lkdGg6IDUwJTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTEtMyB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAvIDMpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZmxleF9jb2wtZGVzay0tMS01IHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gODAlKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTEtNiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICgxMDAlLzYpKjUpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZmxleF9jb2wtZGVzay0tMi01IHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNjAlKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTQtNSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwJSk7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5mbGV4X2NvbC1kZXNrLS0yLTMge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAoMTAwJSAvIDMpKTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTEtNCB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDc1JSk7IH0gfVxuXG4uZmxleF9jb2wtZGVzay0tMi00IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1JSk7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gICAgLmZsZXhfY29sLWRlc2stLTItNCB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmZsZXhfY29sLWRlc2stLTMtNCB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1JSk7IH0gfVxuXG5ib2R5IHtcbiAgZm9udDogMTZweC8xLjE3IFwiTnVuaXRvIFNhbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6ICMwMDA7IH1cbiAgYm9keSAqOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIHdpZHRoOiA3cHg7IH1cbiAgYm9keSAqOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjA3LCAxNjAsIDkyLCAwLjUpOyB9XG4gIGJvZHkgKjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICB3aWR0aDogM3B4OyB9XG4gIGJvZHkubWVudS1vcGVuZWQge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cblxuaDMge1xuICBtYXJnaW46IDA7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnMgZWFzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYTpob3ZlciB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4ycyBlYXNlOyB9XG4gIGE6YWN0aXZlLCBhOmZvY3VzLCBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMyBlYXNlOyB9XG5cbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwOyB9XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogbm9uZTsgfVxuXG4uaGVhZGVyLFxuLmZvb3RlciB7XG4gIGZsZXgtc2hyaW5rOiAxO1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubWFpbiB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG5pbnB1dCB7XG4gIGJhY2tncm91bmQ6ICM5ZTljOWU7XG4gIG9wYWNpdHk6IDE7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgd2lkdGg6IDE3NXB4O1xuICBwYWRkaW5nOiA3LjVweCA4cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBvdXRsaW5lOiBub25lOyB9XG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7XG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gICAgICAgIGhlaWdodDogNTBweDsgfSB9XG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSB7XG4gICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7XG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xuICAgICAgICBoZWlnaHQ6IDUwcHg7IH0gfVxuICBpbnB1dDp2aXNpdGVkLCBpbnB1dDphY3RpdmUsIGlucHV0OmhvdmVyLCBpbnB1dDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi53cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi5pY29uIHtcbiAgd2lkdGg6IDI1cHg7XG4gIGhlaWdodDogMjVweDsgfVxuXG4ubWluaV9kZXNjIHtcbiAgbWF4LWhlaWdodDogOTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY29sb3I6ICMwMDA7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4OyB9XG5cbi50cmlwcGxlLWJ0biB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAudHJpcHBsZS1idG4gLnRyaXBwbGUtYnRuLWZpcnN0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiAjQjY1NDkwO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogNDAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2Zvcm06IHNrZXcoMjVkZWcpO1xuICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlOyB9XG4gICAgLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi1maXJzdDpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYmFja2dyb3VuZDogI0I2NTQ5MDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IC0xOCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogNjAlO1xuICAgICAgdHJhbnNmb3JtOiBza2V3KC0yNWRlZyk7IH1cbiAgLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi1zZWNvbmQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQ6ICNFMDVENjg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAzMCU7XG4gICAgdHJhbnNmb3JtOiBza2V3KDI1ZGVnKTtcbiAgICBtYXJnaW4tbGVmdDogLTJweDtcbiAgICB0cmFuc2l0aW9uOiBtYXJnaW4tdG9wIDAuMnMgZWFzZTsgfVxuICAudHJpcHBsZS1idG4gLnRyaXBwbGUtYnRuLXRoaXJkIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZDogIzUxODRBRjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBtYXJnaW4tbGVmdDogLTFweDtcbiAgICB0cmFuc2Zvcm06IHNrZXcoMjVkZWcpO1xuICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlOyB9XG4gICAgLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi10aGlyZDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBiYWNrZ3JvdW5kOiAjNTE4NEFGO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IC0yNSU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogNjAlO1xuICAgICAgdHJhbnNmb3JtOiBza2V3KC0yNWRlZyk7IH1cbiAgLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi10aXRsZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC50cmlwcGxlLWJ0biAudHJpcHBsZS1idG4tdGl0bGUudHJpcHBsZS1idG4tdGl0bGUtYXJyb3cge1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgICAudHJpcHBsZS1idG4gLnRyaXBwbGUtYnRuLXRpdGxlLnRyaXBwbGUtYnRuLXRpdGxlLWFycm93OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL1ZlY3Rvci5zdmcpO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC50cmlwcGxlLWJ0biAudHJpcHBsZS1idG4tdGl0bGUge1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC40MDVlbTsgfSB9XG4gIC50cmlwcGxlLWJ0bi50cmlwcGxlLWJ0bi10aW55IHtcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDZweDsgfVxuICAudHJpcHBsZS1idG4udHJpcHBsZS1idG4tc21hbGwge1xuICAgIHdpZHRoOiAxMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7IH1cbiAgICAudHJpcHBsZS1idG4udHJpcHBsZS1idG4tc21hbGwgLnRyaXBwbGUtYnRuLXRpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDsgfVxuICAudHJpcHBsZS1idG4udHJpcHBsZS1idG4tYmlnZ2VyIHtcbiAgICB3aWR0aDogMTM1cHg7XG4gICAgaGVpZ2h0OiA0MHB4OyB9XG4gICAgLnRyaXBwbGUtYnRuLnRyaXBwbGUtYnRuLWJpZ2dlciAudHJpcHBsZS1idG4tdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9XG4gIC50cmlwcGxlLWJ0bi50cmlwcGxlLWJ0bi1tZWRpdW0ge1xuICAgIHdpZHRoOiAxODBweDtcbiAgICBoZWlnaHQ6IDU1cHg7IH1cbiAgLnRyaXBwbGUtYnRuLnRyaXBwbGUtYnRuLWJpZyB7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiAzMDBweDsgfVxuICAudHJpcHBsZS1idG46aG92ZXIgLnRyaXBwbGUtYnRuLWZpcnN0IHtcbiAgICBtYXJnaW4tdG9wOiAtMiU7XG4gICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7IH1cbiAgLnRyaXBwbGUtYnRuOmhvdmVyIC50cmlwcGxlLWJ0bi1zZWNvbmQge1xuICAgIG1hcmdpbi10b3A6IDAlO1xuICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlOyB9XG4gIC50cmlwcGxlLWJ0bjpob3ZlciAudHJpcHBsZS1idG4tdGhpcmQge1xuICAgIG1hcmdpbi10b3A6IDIlO1xuICAgIHRyYW5zaXRpb246IG1hcmdpbiAwLjJzIGVhc2U7IH1cblxuLmxlZnQtc2lkZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubGVmdC1zaWRlLXRpdGxlIC5sZWZ0LXNpZGUtdGl0bGUtd3JhcHBlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gICAgcGFkZGluZy10b3A6IDcwcHg7IH1cbiAgICAubGVmdC1zaWRlLXRpdGxlIC5sZWZ0LXNpZGUtdGl0bGUtd3JhcHBlciAubGVmdC1zaWRlLXRpdGxlLXRhZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAzOHB4O1xuICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLmxlZnQtc2lkZS10aXRsZSAubGVmdC1zaWRlLXRpdGxlLXdyYXBwZXIgLmxlZnQtc2lkZS10aXRsZS10YWcge1xuICAgICAgICAgIHdyaXRpbmctbW9kZTogdGI7XG4gICAgICAgICAgZm9udC1zaXplOiA0NXB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubGVmdC1zaWRlLXRpdGxlIC5sZWZ0LXNpZGUtdGl0bGUtd3JhcHBlciB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IGluaXRpYWw7XG4gICAgICAgIHBhZGRpbmctdG9wOiBpbml0aWFsOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5sZWZ0LXNpZGUtdGl0bGUge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMHB4OyB9IH1cbiAgLmxlZnQtc2lkZS10ZXh0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTE4MGRlZyk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMjhweDtcbiAgICB0b3A6IDIwMCU7IH1cbiAgICAubGVmdC1zaWRlLXRleHQgc3BhbiB7XG4gICAgICBtYXgtd2lkdGg6IDc1cHg7XG4gICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBmb250LXNpemU6IDgwcHg7XG4gICAgICB3cml0aW5nLW1vZGU6IHRiOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLmxlZnQtc2lkZS10ZXh0IHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAubGVmdC1zaWRlIHtcbiAgICAgIG1heC13aWR0aDogMTYuNiU7IH0gfVxuXG4ubGVmdC1zaWRlLXNtIHtcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDsgfVxuICAubGVmdC1zaWRlLXNtLXRpdGxlLXdyYXBwZXIge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAubGVmdC1zaWRlLXNtLXRpdGxlLXdyYXBwZXIgLmxlZnQtc2lkZS1zbS10aXRsZS10YWcge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuMzRlbTtcbiAgICAgIGNvbG9yOiAjRkJGQkZCO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbCAhaW1wb3J0YW50O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAubGVmdC1zaWRlLXNtLXRpdGxlLXdyYXBwZXIgLmxlZnQtc2lkZS1zbS10aXRsZS10YWc6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgIGJvcmRlci13aWR0aDogMnB4IDJweCAwcHggMHB4O1xuICAgICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiA2cHg7XG4gICAgICAgIHRvcDogLTI1cHg7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICAubGVmdC1zaWRlLXNtLXRpdGxlLXdyYXBwZXIgLmxlZnQtc2lkZS1zbS10aXRsZS10YWc6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiAxMjVweDtcbiAgICAgICAgd2lkdGg6IDEzcHg7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCAycHggMnB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogLTI1cHg7XG4gICAgICAgIHJpZ2h0OiAyMHB4OyB9XG5cbi5saW5lcy10aXRsZS13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXRvcDogNzRweDsgfVxuICAubGluZXMtdGl0bGUtd3JhcHBlciAubGluZXMtdGl0bGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7IH1cbiAgICAubGluZXMtdGl0bGUtd3JhcHBlciAubGluZXMtdGl0bGU6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGJvcmRlcjogNHB4IHNvbGlkICMzNjM2MzY7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IC0zNXB4O1xuICAgICAgYm90dG9tOiAtMjlweDtcbiAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lcy10aXRsZTpiZWZvcmUge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lcy10aXRsZTphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDRweDtcbiAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMTJweDtcbiAgICAgIHJpZ2h0OiAtNjVweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lcy10aXRsZSB7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lLXB1cnBsZS1tb2Ige1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAubGluZXMtdGl0bGUtd3JhcHBlciAubGluZS1jb3JuZXItbW9iIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmxpbmVzLXRpdGxlLXdyYXBwZXIgLmxpbmUtYmx1ZS1tb2Ige1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAubGluZXMtdGl0bGUtd3JhcHBlciB7XG4gICAgICBwYWRkaW5nLXRvcDogMDsgfSB9XG5cbi5tYWluLWxpbmsge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1heC13aWR0aDogMzAwcHg7XG4gIHBhZGRpbmctbGVmdDogMjVweDsgfVxuICAubWFpbi1saW5rOmFmdGVyIHtcbiAgICBjb250ZW50OiB1cmwoL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9pbWFnZXMvYXJyb3ctcmlnaHQuc3ZnKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmc6IDBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQjFCMUI7IH1cblxuLm1pZGRsZS1saW5lIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMXB4O1xuICBiYWNrZ3JvdW5kOiAjRURFREVEO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgLm1pZGRsZS1saW5lLWZpcnN0IHtcbiAgICBsZWZ0OiAxNSU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLWxpbmUtZmlyc3Qge1xuICAgICAgICBsZWZ0OiAxNi42JTsgfSB9XG4gIC5taWRkbGUtbGluZS1zZWNvbmQge1xuICAgIGxlZnQ6IDMzLjIlO1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLWxpbmUtc2Vjb25kIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAubWlkZGxlLWxpbmUtdGhpcmQge1xuICAgIGxlZnQ6IDQ5LjklOyB9XG4gIC5taWRkbGUtbGluZS1mb3VydGgge1xuICAgIGxlZnQ6IDY2LjYlO1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLWxpbmUtZm91cnRoIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAubWlkZGxlLWxpbmUtZmlmdGgge1xuICAgIGxlZnQ6IDg1JTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5taWRkbGUtbGluZS1maWZ0aCB7XG4gICAgICAgIGxlZnQ6IDgzLjIlOyB9IH1cbiAgLm1pZGRsZS1saW5lIC5taWRkbGUtbGluZS1zcXVhcmUge1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtMXB4O1xuICAgIHJpZ2h0OiAtMXB4OyB9XG5cbi50aXRsZS1ibG9jayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnRpdGxlLWJsb2NrIGgyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IC0zMHB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiA0NXB4OyB9XG4gIC50aXRsZS1ibG9jayAudGl0bGUtYmxvY2stbGluZXMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIHdpZHRoOiAxMDBweDsgfVxuICAgIC50aXRsZS1ibG9jayAudGl0bGUtYmxvY2stbGluZXMgLmxpbmUtcHVycGxlIHtcbiAgICAgIGhlaWdodDogMjVweDtcbiAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgYm9yZGVyOiA0cHggc29saWQgI0I2NTQ5MDtcbiAgICAgIGJvcmRlci13aWR0aDogNHB4IDBweCAwcHggNHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7IH1cbiAgICAudGl0bGUtYmxvY2sgLnRpdGxlLWJsb2NrLWxpbmVzIC5saW5lLWNvcm5lciB7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICBib3JkZXItd2lkdGg6IDRweCA0cHggNHB4IDBweDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgdG9wOiAtMXB4OyB9XG4gICAgLnRpdGxlLWJsb2NrIC50aXRsZS1ibG9jay1saW5lcyAubGluZS1ibHVlIHtcbiAgICAgIGhlaWdodDogMjVweDtcbiAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgYm9yZGVyOiA0cHggc29saWQgIzUxODRBRjtcbiAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCA0cHggNHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7IH1cbiAgLnRpdGxlLWJsb2NrLXJldmVyc2UgaDIge1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tbGVmdDogLTUwcHg7IH1cbiAgLnRpdGxlLWJsb2NrLXJldmVyc2UgLnRpdGxlLWJsb2NrLWxpbmVzIC5saW5lLXB1cnBsZSB7XG4gICAgYm9yZGVyLXdpZHRoOiA0cHggNHB4IDBweCAwcHg7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogaW5pdGlhbDsgfVxuICAudGl0bGUtYmxvY2stcmV2ZXJzZSAudGl0bGUtYmxvY2stbGluZXMgLmxpbmUtY29ybmVyIHtcbiAgICBib3JkZXItd2lkdGg6IDRweCAwcHggNHB4IDRweDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiBpbml0aWFsOyB9XG4gIC50aXRsZS1ibG9jay1yZXZlcnNlIC50aXRsZS1ibG9jay1saW5lcyAubGluZS1ibHVlIHtcbiAgICBib3JkZXItd2lkdGg6IDBweCA0cHggNHB4IDBweDtcbiAgICByaWdodDogMDtcbiAgICBsZWZ0OiBpbml0aWFsOyB9XG5cbi5saW5lIHtcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gIC5saW5lLXB1cnBsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogI0I2NTQ5MDsgfVxuICAgIC5saW5lLXB1cnBsZS1tb2Ige1xuICAgICAgd2lkdGg6IDRweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIHRvcDogNTRweDtcbiAgICAgIGxlZnQ6IDEyMHB4OyB9XG4gIC5saW5lLWNvcm5lciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyOiBzb2xpZCAjRTA1RDY4OyB9XG4gICAgLmxpbmUtY29ybmVyLW1vYiB7XG4gICAgICB3aWR0aDogMjVweDtcbiAgICAgIGhlaWdodDogMTVweDtcbiAgICAgIGJvcmRlci13aWR0aDogMHB4IDRweCA0cHggMHB4O1xuICAgICAgYm90dG9tOiAtMjhweDtcbiAgICAgIGxlZnQ6IDk4cHg7IH1cbiAgLmxpbmUtYmx1ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogIzUxODRBRjsgfVxuICAgIC5saW5lLWJsdWUtbW9iIHtcbiAgICAgIGhlaWdodDogNHB4O1xuICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICBib3R0b206IC0yOHB4O1xuICAgICAgbGVmdDogNTNweDsgfVxuXG4uc3dpcGVyLW1haW4ge1xuICBoZWlnaHQ6IDY2MHB4O1xuICBwb3NpdGlvbjogaW5pdGlhbDsgfVxuICAuc3dpcGVyLW1haW4gLnN3aXBlci13cmFwcGVyIHtcbiAgICBjdXJzb3I6IGdyYWI7IH1cbiAgICAuc3dpcGVyLW1haW4gLnN3aXBlci13cmFwcGVyIC5zd2lwZXItc2xpZGUgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMzc1cHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgLnN3aXBlci1tYWluIC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDMwcHg7IH1cbiAgICAuc3dpcGVyLW1haW4gLnN3aXBlci1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcyBlYXNlLCBjb2xvciAwLjNzIGVhc2U7XG4gICAgICBjb2xvcjogI0U0RTRFNDtcbiAgICAgIGJvcmRlci1jb2xvcjogI0U0RTRFNDtcbiAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAuc3dpcGVyLW1haW4gLnN3aXBlci1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMDAwO1xuICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGNvbG9yIDAuM3MgZWFzZTsgfVxuICAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tbmV4dCB7XG4gICAgbGVmdDogLTEwMHB4O1xuICAgIHRvcDogNDAlO1xuICAgIGhlaWdodDogNDVweDtcbiAgICB3aWR0aDogNDVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtc2l6ZTogMzJweDsgfVxuICAgIC5zd2lwZXItbWFpbiAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgICAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tbmV4dDpiZWZvcmUge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGhlaWdodDogNDVweDtcbiAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgYm9yZGVyOiAycHggc29saWQgI0JENUI5ODtcbiAgICAgIGJvcmRlci13aWR0aDogMnB4IDBweCAwcHggMnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAtNnB4O1xuICAgICAgbGVmdDogLTZweDsgfVxuXG4udGV4dC13aXRoLWxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogMCUgLTE0MCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAudGV4dC13aXRoLWxvZ28gaDMge1xuICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4xOTVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA3cHg7IH1cbiAgLnRleHQtd2l0aC1sb2dvIHNwYW4ge1xuICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6ICM1OTU5NTk7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMTk1ZW07IH1cbiAgLnRleHQtd2l0aC1sb2dvOmJlZm9yZSB7XG4gICAgY29udGVudDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL2xvZ28tZS5zdmcpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNTBweDtcbiAgICB3aWR0aDogNTBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTcwcHg7XG4gICAgdG9wOiAtN3B4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTsgfVxuXG4uZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi10b3A6IDcwcHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDsgfVxuICAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAzNXB4OyB9XG4gICAgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51IC5mb290ZXItbWVudS1pdGVtIGEge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgY29sb3I6ICM4RjhGOEY7XG4gICAgICB3aWR0aDogMTUwcHg7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51IC5mb290ZXItbWVudS1pdGVtIGE6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICB3aWR0aDogNzBweDtcbiAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAtNTVweDtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7IH1cbiAgICAgIC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51IC5mb290ZXItbWVudS1pdGVtIGE6aG92ZXI6YWZ0ZXIge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0ge1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGluaXRpYWw7IH0gfVxuXG4udG9wLWNydW1icyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDM1cHg7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIC50b3AtY3J1bWJzIC5jcnVtYnMtaXRlbSB7XG4gICAgY29sb3I6ICMxNTE1MTU7IH1cbiAgLnRvcC1jcnVtYnMgLmNydW1icy1sYXN0IHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAudG9wLWNydW1icyAuY3J1bWJzLWxhc3QgLmxpbmUtcHVycGxlIHtcbiAgICAgIGhlaWdodDogM3B4O1xuICAgICAgd2lkdGg6IDE0MHB4O1xuICAgICAgcmlnaHQ6IDEzMXB4O1xuICAgICAgYm90dG9tOiAtMTFweDsgfVxuICAgIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdCAubGluZS1jb3JuZXIge1xuICAgICAgYm9yZGVyLXdpZHRoOiAwIDNweCAzcHggMDtcbiAgICAgIGhlaWdodDogMTBweDtcbiAgICAgIHdpZHRoOiAxNDBweDtcbiAgICAgIHJpZ2h0OiAtOXB4O1xuICAgICAgYm90dG9tOiAtMTBweDsgfVxuICAgIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdCAubGluZS1ibHVlIHtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAzcHg7XG4gICAgICByaWdodDogLTEwcHg7XG4gICAgICBib3R0b206IDBweDsgfVxuICAgIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdDpiZWZvcmUge1xuICAgICAgY29udGVudDogXCIvXCI7XG4gICAgICBjb2xvcjogIzE1MTUxNTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgbWFyZ2luLWxlZnQ6IDE1cHg7IH1cbiAgLnRvcC1jcnVtYnM6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogNHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNzI3Mjc7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cbi5kZXNpZ24tc2VvIHtcbiAgbWFyZ2luLXRvcDogMTIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZGVzaWduLXNlbyAuZGVzaWduLWljb24ge1xuICAgIG1heC13aWR0aDogMTAwcHg7XG4gICAgbWF4LWhlaWdodDogMTUwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMjAlO1xuICAgIHJpZ2h0OiAxMCU7XG4gICAgei1pbmRleDogLTE7IH1cbiAgLmRlc2lnbi1zZW8gLmxpbmVzLXRpdGxlLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLXRvcDogNzRweDsgfVxuICAgIC5kZXNpZ24tc2VvIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lcy10aXRsZSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLmRlc2lnbi1zZW8gLmxpbmVzLXRpdGxlLXdyYXBwZXIgLmxpbmVzLXRpdGxlOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBib3JkZXI6IDRweCBzb2xpZCAjRThFOEU4O1xuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IC0zNXB4O1xuICAgICAgICBib3R0b206IC0yOXB4O1xuICAgICAgICB6LWluZGV4OiAtMTsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLmRlc2lnbi1zZW8gLmxpbmVzLXRpdGxlLXdyYXBwZXIgLmxpbmVzLXRpdGxlOmJlZm9yZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICAgICAuZGVzaWduLXNlbyAubGluZXMtdGl0bGUtd3JhcHBlciAubGluZXMtdGl0bGU6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBub25lOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLmRlc2lnbi1zZW8gLmxpbmVzLXRpdGxlLXdyYXBwZXIgLmxpbmUtcHVycGxlLW1vYiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuZGVzaWduLXNlbyAubGluZXMtdGl0bGUtd3JhcHBlciAubGluZS1jb3JuZXItbW9iIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5kZXNpZ24tc2VvIC5saW5lcy10aXRsZS13cmFwcGVyIC5saW5lLWJsdWUtbW9iIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5kZXNpZ24tc2VvIC5saW5lcy10aXRsZS13cmFwcGVyIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDc0cHg7IH0gfVxuICAgIC5kZXNpZ24tc2VvIC5saW5lcy10aXRsZS13cmFwcGVyOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogNTBweDtcbiAgICAgIGhlaWdodDogNHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IC0xMDBweDtcbiAgICAgIGJvdHRvbTogMTVweDsgfVxuICAgIC5kZXNpZ24tc2VvIC5saW5lcy10aXRsZS13cmFwcGVyOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIGJvdHRvbTogMTVweDsgfVxuICAuZGVzaWduLXNlbyAuZGVzaWduLXNlby1taWRkbGUge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBtYXJnaW4tdG9wOiAxMDBweDsgfVxuICAgIC5kZXNpZ24tc2VvIC5kZXNpZ24tc2VvLW1pZGRsZSBoNCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG4gICAgICAuZGVzaWduLXNlbyAuZGVzaWduLXNlby1taWRkbGUgaDQ6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICNFMDVENjg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNDBweDsgfVxuICAgIC5kZXNpZ24tc2VvIC5kZXNpZ24tc2VvLW1pZGRsZSBwIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICAgIGNvbG9yOiAjMjMyMjIyOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xuICBzcmM6IHVybChcIi93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLmVvdFwiKTtcbiAgc3JjOiBsb2NhbChcIkdvdGhhbSBQcm9cIiksIGxvY2FsKFwiR290aGFtUHJvXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyB9XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbm1haW4sXG5zZWN0aW9uLFxuYXJ0aWNsZSxcbmFzaWRlLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmhlYWRlcixcbmZvb3Rlcixcbm5hdiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmgxIHtcbiAgbWFyZ2luOiAwIDAgMC42N2VtOyB9XG5cbmgyIHtcbiAgbWFyZ2luOiAwOyB9XG5cbnByZSxcbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG5pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgbWFyZ2luOiAwOyB9XG5cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIHBhZGRpbmc6IDA7IH1cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgfVxuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi50b3Atc2l0ZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDk7XG4gIHBhZGRpbmctYm90dG9tOiA3NXB4OyB9XG4gIC50b3Atc2l0ZS1taWRkbGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgaGVpZ2h0OiA2MCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1sZWZ0OiAxMCU7XG4gICAgei1pbmRleDogMTE7IH1cbiAgICAudG9wLXNpdGUtbWlkZGxlLXRpdGxlIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAzNXB4O1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBtYXgtd2lkdGg6IDY2MHB4OyB9XG4gICAgICAudG9wLXNpdGUtbWlkZGxlLXRpdGxlIHN0cm9uZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC50b3Atc2l0ZS1taWRkbGUtdGl0bGUge1xuICAgICAgICAgIGZvbnQtc2l6ZTogNTBweDsgfSB9XG4gICAgLnRvcC1zaXRlLW1pZGRsZS1ib3R0b20ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsgfVxuICAgICAgLnRvcC1zaXRlLW1pZGRsZS1ib3R0b20gcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAudG9wLXNpdGUtbWlkZGxlLWJvdHRvbSBwIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA0NXB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiBzb2xpZCAjZmZmIDNweDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBpbml0aWFsOyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLnRvcC1zaXRlLW1pZGRsZS1ib3R0b20ge1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBoZWlnaHQ6IDUwcHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC50b3Atc2l0ZS1taWRkbGUge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7IH0gfVxuICAudG9wLXNpdGUgLmxvbmctbGluZSB7XG4gICAgaGVpZ2h0OiAzcHg7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgei1pbmRleDogMTE7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNSU7XG4gICAgbGVmdDogMTAlOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLnRvcC1zaXRlIC5sb25nLWxpbmUge1xuICAgICAgICBwb3NpdGlvbjogaW5pdGlhbDtcbiAgICAgICAgd2lkdGg6IDQwMHB4OyB9IH1cbiAgLnRvcC1zaXRlOmJlZm9yZSB7XG4gICAgY29udGVudDogbm9uZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMzUlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyOCwgMjgsIDI4LCAwLjU2KTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC50b3Atc2l0ZTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiOyB9IH1cbiAgLnRvcC1zaXRlOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpOyB9XG5cbi5taWRkbGUtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTsgfVxuICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1ib3R0b206IDIwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpbyAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5wb3J0Zm9saW8tbGVmdC10aXRsZS10YWc6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGJvcmRlcjogNHB4IHNvbGlkIHJnYmEoMjEsIDIxLCAyMSwgMC4wNik7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IC0zNXB4O1xuICAgICAgYm90dG9tOiAtMjlweDtcbiAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpbyAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5wb3J0Zm9saW8tbGVmdC10aXRsZS10YWc6YmVmb3JlIHtcbiAgICAgICAgICBib3R0b206IC0zNXB4O1xuICAgICAgICAgIHJpZ2h0OiAtMjBweDsgfSB9XG4gICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXdyYXBwZXIgLmxpbmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpbyAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5saW5lLXB1cnBsZSB7XG4gICAgICAgICAgd2lkdGg6IDI4cHg7XG4gICAgICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICAgICAgcmlnaHQ6IC0yOHB4O1xuICAgICAgICAgIHRvcDogNjNweDsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpbyAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5saW5lLWNvcm5lciB7XG4gICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCA0cHggNHB4O1xuICAgICAgICAgIHRvcDogMzFweDtcbiAgICAgICAgICBsZWZ0OiAxNXB4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXdyYXBwZXIgLmxpbmUtYmx1ZSB7XG4gICAgICAgICAgaGVpZ2h0OiA2NXB4O1xuICAgICAgICAgIHdpZHRoOiA0cHg7XG4gICAgICAgICAgdG9wOiAtMzRweDtcbiAgICAgICAgICBsZWZ0OiAxNnB4OyB9IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8gLm1pZGRsZS1wb3J0Zm9saW8tbGVmdC10aXRsZSAucG9ydGZvbGlvLWxlZnQtdGl0bGUtcmVkX2xpbmUge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8gLm1pZGRsZS1wb3J0Zm9saW8tbGVmdC10aXRsZSAucG9ydGZvbGlvLWxlZnQtdGl0bGUtcmVkX2xpbmUgc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjRTA1RDY4O1xuICAgICAgICB3aWR0aDogNDVweDtcbiAgICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAyMHB4O1xuICAgICAgICBsZWZ0OiAyOTVweDsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXJlZF9saW5lIHNwYW4ge1xuICAgICAgICAgICAgcG9zaXRpb246IGluaXRpYWw7XG4gICAgICAgICAgICBib3R0b206IGluaXRpYWw7XG4gICAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICAgICAgd2lkdGg6IDRweDtcbiAgICAgICAgICAgIGhlaWdodDogNTBweDsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpbyAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS1yZWRfbGluZSB7XG4gICAgICAgICAgcG9zaXRpb246IGluaXRpYWw7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgICAgICAgIG1hcmdpbjogMTQwcHggMCAxMDBweCAwOyB9IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8gLm1pZGRsZS1wb3J0Zm9saW8tbGVmdC10aXRsZSAucG9ydGZvbGlvLWxlZnQtc2Nyb2xsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIGZvbnQtc2l6ZTogOXB4O1xuICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuMzRlbTsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8gLm1pZGRsZS1wb3J0Zm9saW8tbGVmdC10aXRsZSAucG9ydGZvbGlvLWxlZnQtc2Nyb2xsIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQge1xuICAgICAgICBwYWRkaW5nOiAxNjBweCAwIDgwcHggODBweDsgfSB9XG4gICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciB7XG4gICAgICBwYWRkaW5nOiA1MHB4IDAgMCAwO1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyLXRvcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG8gMjBweDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyLXRvcC1sZWZ0IHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlci10b3AtbGVmdCAuc2xhc2gge1xuICAgICAgICAgICAgbWFyZ2luOiAwcHggMjBweDsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXItdG9wLWxlZnQgLmNhdGVnb3J5IHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyLXRvcC1sZWZ0IC5jYXRlZ29yeSB7XG4gICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNDA1ZW07IH0gfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyLXRvcCAudHJpcHBsZS1idG4tYmlnIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiA0MHB4OyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlci10b3AgLnRyaXBwbGUtYnRuLWJpZyB7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgYm90dG9tOiBpbml0aWFsOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXItdG9wIHtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwJTtcbiAgICAgICAgICAgIG1hcmdpbjogMDsgfSB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgcGFkZGluZzogMTVweCAwIDAgMTVweDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAubGluZS1wdXJwbGUge1xuICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDNweDtcbiAgICAgICAgICBsZWZ0OiA3NXB4O1xuICAgICAgICAgIHRvcDogLTFweDsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLmxpbmUtcHVycGxlIHtcbiAgICAgICAgICAgICAgd2lkdGg6IDI2MHB4OyB9IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLmxpbmUtY29ybmVyIHtcbiAgICAgICAgICB3aWR0aDogNzVweDtcbiAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xuICAgICAgICAgIGJvcmRlci13aWR0aDogM3B4IDBweCAwcHggM3B4O1xuICAgICAgICAgIHRvcDogMHB4O1xuICAgICAgICAgIGxlZnQ6IDBweDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAubGluZS1ibHVlIHtcbiAgICAgICAgICBoZWlnaHQ6IDMxNXB4O1xuICAgICAgICAgIHdpZHRoOiAzcHg7XG4gICAgICAgICAgdG9wOiAxNDBweDtcbiAgICAgICAgICBsZWZ0OiAxcHg7IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIHtcbiAgICAgICAgICBoZWlnaHQ6IDY2MHB4O1xuICAgICAgICAgIHBvc2l0aW9uOiBpbml0aWFsOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItd3JhcHBlciB7XG4gICAgICAgICAgICBjdXJzb3I6IGdyYWI7IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiAuc3dpcGVyLXdyYXBwZXIgLnN3aXBlci1zbGlkZSB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItd3JhcHBlciAuc3dpcGVyLXNsaWRlIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogNTAwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMzc1cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci13cmFwcGVyIC5zd2lwZXItc2xpZGUgLnNsaWRlLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM1NXB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmxhY2s7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG4gICAgICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItd3JhcHBlciAuc3dpcGVyLXNsaWRlIC5zbGlkZS10aXRsZSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgICAgICAgICAgICAgIHdvcmQtc3BhY2luZzogOTk5cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogbm9uZTsgfSB9XG4gICAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci13cmFwcGVyIC5zd2lwZXItc2xpZGUge1xuICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7IH0gfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgaGVpZ2h0OiAzMHB4OyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlO1xuICAgICAgICAgICAgICBjb2xvcjogI0U0RTRFNDtcbiAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjRTRFNEU0O1xuICAgICAgICAgICAgICBvcGFjaXR5OiAxOyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlIHtcbiAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzAwMDtcbiAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogaW5pdGlhbDsgfSB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLW5leHQge1xuICAgICAgICAgICAgbGVmdDogaW5pdGlhbDtcbiAgICAgICAgICAgIHRvcDogaW5pdGlhbDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tbmV4dCAuaWNvbiB7XG4gICAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cbiAgICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiAuc3dpcGVyLWJ1dHRvbi1uZXh0IC5pY29uIHtcbiAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjsgfVxuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLW5leHQ6YmVmb3JlIHtcbiAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgIGhlaWdodDogNDVweDtcbiAgICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNCRDVCOTg7XG4gICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMnB4IDBweCAwcHggMnB4O1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogLTZweDtcbiAgICAgICAgICAgICAgbGVmdDogLTZweDsgfVxuICAgICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLW5leHQ6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLW5leHQge1xuICAgICAgICAgICAgICAgIGxlZnQ6IC0xMDBweDtcbiAgICAgICAgICAgICAgICByaWdodDogaW5pdGlhbDtcbiAgICAgICAgICAgICAgICB0b3A6IDQwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfSB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLXByZXYge1xuICAgICAgICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICAgICAgICBsZWZ0OiAxMHB4O1xuICAgICAgICAgICAgdG9wOiBpbml0aWFsO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tcHJldiAuaWNvbiB7XG4gICAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XG4gICAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tcHJldiAuaWNvbiB7XG4gICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfSB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm1pZGRsZS1wb3J0Zm9saW8tc2xpZGVyIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbiAuc3dpcGVyLW1haW4gLnN3aXBlci1idXR0b24tcHJldjphZnRlciB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ24gLnN3aXBlci1tYWluIC5zd2lwZXItYnV0dG9uLXByZXYge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIgLnN3aXBlci1jb250YWluZXItZGVzaWduIC5zd2lwZXItbWFpbiB7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTEwMHB4OyB9IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ246YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgdG9wOiAtNzlweDtcbiAgICAgICAgICBib3R0b206IC01MHB4O1xuICAgICAgICAgIHdpZHRoOiAxNSU7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IC05N3B4IDBweCA2MHB4IDNweCB3aGl0ZTtcbiAgICAgICAgICB6LWluZGV4OiAyOyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lci1kZXNpZ246YWZ0ZXIge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzQwcHgpIHtcbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvLXNsaWRlciB7XG4gICAgICAgICAgd2lkdGg6IDU1JTsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubWlkZGxlLXBvcnRmb2xpby1zbGlkZXIge1xuICAgICAgICAgIHBhZGRpbmc6IDUwcHggMCAwIDcwcHg7XG4gICAgICAgICAgbWFyZ2luOiBpbml0aWFsO1xuICAgICAgICAgIHdpZHRoOiA4My40JTsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm1pZGRsZS13cmFwcGVyIC5taWRkbGUtcG9ydGZvbGlvIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7IH0gfVxuICAubWlkZGxlLXdyYXBwZXIgLmluZm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLm1pZGRsZS1saW5lIHtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzkzOTM5O1xuICAgICAgdG9wOiAwOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLm1pZGRsZS1saW5lLWZpcnN0IC5taWRkbGUtbGluZS1zcXVhcmUge1xuICAgICAgICB0b3A6IDAlOyB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAubWlkZGxlLWxpbmUtZmlyc3QgLm1pZGRsZS1saW5lLXNxdWFyZS1tb2Ige1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHRvcDogODAlOyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5taWRkbGUtbGluZS1maXJzdCAubWlkZGxlLWxpbmUtc3F1YXJlLW1vYiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5taWRkbGUtbGluZS1zZWNvbmQgLm1pZGRsZS1saW5lLXNxdWFyZSB7XG4gICAgICAgIHRvcDogNzUlOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLm1pZGRsZS1saW5lLXRoaXJkIC5taWRkbGUtbGluZS1zcXVhcmUge1xuICAgICAgICB0b3A6IDk1JTsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5taWRkbGUtbGluZS10aGlyZCAubWlkZGxlLWxpbmUtc3F1YXJlIHtcbiAgICAgICAgICAgIHRvcDogLTIlOyB9IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAubWlkZGxlLWxpbmUtZm91cnRoIC5taWRkbGUtbGluZS1zcXVhcmUge1xuICAgICAgICB0b3A6IDk4JTsgfVxuICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5taWRkbGUtbGluZS1maWZ0aCAubWlkZGxlLWxpbmUtc3F1YXJlIHtcbiAgICAgICAgdG9wOiA1JTsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLm1pZGRsZS1saW5lLWZpZnRoIC5taWRkbGUtbGluZS1zcXVhcmUtbW9iIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB0b3A6IDcwJTsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAubWlkZGxlLWxpbmUtZmlmdGggLm1pZGRsZS1saW5lLXNxdWFyZS1tb2Ige1xuICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAubWlkZGxlLWxpbmUgLm1pZGRsZS1saW5lLXNxdWFyZSB7XG4gICAgICAgIHotaW5kZXg6IDI7IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSB7XG4gICAgICBoZWlnaHQ6IDAlOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSAubGVmdC1zaWRlLXNtLXRpdGxlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSAubGVmdC1zaWRlLXNtLXRpdGxlIC5sZWZ0LXNpZGUtc20tdGl0bGUtdGFnOmJlZm9yZSB7XG4gICAgICAgICAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcbiAgICAgICAgICBib3JkZXItd2lkdGg6IDJweCAycHggMHB4IDBweDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSAubGVmdC1zaWRlLXNtLXRpdGxlIC5sZWZ0LXNpZGUtc20tdGl0bGUtdGFnOmFmdGVyIHtcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xuICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCAycHggMnB4OyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSAubGVmdC1zaWRlLXNtLXRpdGxlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAubGVmdC1zaWRlLXNtIC5sZWZ0LXNpZGUtc20tdGV4dCBzcGFuIHtcbiAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aDogMXB4O1xuICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5sZWZ0LXNpZGUtc20gLmxlZnQtc2lkZS1zbS10ZXh0IHtcbiAgICAgICAgICByaWdodDogMTUlO1xuICAgICAgICAgIHRvcDogMjAwcHg7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmxlZnQtc2lkZS1zbSB7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlOyB9IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMjsgfVxuICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS10b3Age1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwJTsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLXRvcC10aXRsZSB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLXRvcC10aXRsZTpiZWZvcmUge1xuICAgICAgICAgICAgICBjb250ZW50OiB1cmwoL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9pbWFnZXMvbG9nby1lLnN2Zyk7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgIHdpZHRoOiA1NXB4O1xuICAgICAgICAgICAgICBoZWlnaHQ6IDU1cHg7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgbGVmdDogLTgwcHg7XG4gICAgICAgICAgICAgIHRvcDogLTNweDsgfSB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS10b3AtdGl0bGU6YWZ0ZXIge1xuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgd2lkdGg6IDc1cHg7XG4gICAgICAgICAgICAgIGhlaWdodDogNXB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgICByaWdodDogNTVweDtcbiAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvOyB9IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLXRvcC10aXRsZSB7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDVweDsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLXRvcCB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIzMHB4OyB9IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgcGFkZGluZzogMTQwcHggNTBweCAwOyB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIG1heC13aWR0aDogNjAlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS1tYWluLW51bWJlcnMgLm1haW4tbnVtYmVycy1ibG9jayB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tbnVtYmVycyAubWFpbi1udW1iZXJzLWJsb2NrIC5udW1iZXIge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgICAgICAgICAgICAgY29sb3I6ICNGQkZCRkI7IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIC5tYWluLW51bWJlcnMtYmxvY2sgLnRyaXBwbGUtYnRuIHtcbiAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4IDAgMjVweCA1cHg7IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIC5tYWluLW51bWJlcnMtYmxvY2stY2F0ZWdvcnkge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICAgICAgICBjb2xvcjogI0ZCRkJGQjsgfVxuICAgICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS1tYWluLW51bWJlcnMgLm1haW4tbnVtYmVycy1ibG9jay1jYXRlZ29yeSB7XG4gICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIC5tYWluLW51bWJlcnMtYmxvY2stYm90dG9tLXRleHQge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMjg1ZW07XG4gICAgICAgICAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDc1cHg7IH1cbiAgICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIC5tYWluLW51bWJlcnMtYmxvY2stYm90dG9tLXRleHQge1xuICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDBweDsgfSB9XG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIC5tYWluLW51bWJlcnMtYmxvY2sge1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBpbml0aWFsO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMzMlO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1udW1iZXJzIHtcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1yYXRpbmctdGl0bGUge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXNpemU6IDM1cHg7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXRpdGxlIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXN0YXJzIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXN0YXJzIC5zdGFyLWljb24ge1xuICAgICAgICAgICAgbWFyZ2luOiAwcHggNXB4OyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXN0YXJzIC5zdGFyLWljb24gLmljb24ge1xuICAgICAgICAgICAgICBmaWxsOiAjMzgzODM4OyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXN0YXJzIC5zdGFyLWljb24tYWN0aXZlIC5pY29uIHtcbiAgICAgICAgICAgICAgZmlsbDogI0UwNUQ2ODsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1yYXRpbmctc3RhcnMge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1yYXRpbmctdGV4dCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMjVweDtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlLW1haW4tcmF0aW5nLXRleHQge1xuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBpbml0aWFsOyB9IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS1tYWluLXJhdGluZyAubWFpbi1saW5rIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDI3NXB4O1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS1tYWluLXJhdGluZyAubWFpbi1saW5rIHtcbiAgICAgICAgICAgICAgbWFyZ2luOiAwOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbyAuaW5mby1taWRkbGUtbWFpbi1yYXRpbmcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAzMyU7IH0gfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLW1pZGRsZS1tYWluIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDkwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNDBweCAwIDkwcHggMTcwcHg7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tbWlkZGxlIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDY2LjYlO1xuICAgICAgICAgIHBhZGRpbmctdG9wOiAxNzBweDsgfSB9XG4gICAgLm1pZGRsZS13cmFwcGVyIC5pbmZvIC5pbmZvLXJpZ2h0IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtYXgtd2lkdGg6IDE2LjglO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8gLmluZm8tcmlnaHQge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7IH0gfVxuICAgIC5taWRkbGUtd3JhcHBlciAuaW5mbzphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0LCAyNCwgMjQsIDAuOSk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLmluZm8ge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBwYWRkaW5nLXRvcDogMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgaGVpZ2h0OiA4MDBweDsgfSB9XG4gIC5taWRkbGUtd3JhcHBlciAuc2VydmljZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLXRvcCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDMwMHB4OyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLWxlZnQge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAxNi42JTtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS10b3AtbWlkZGxlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBtYXgtd2lkdGg6IDY2LjYlO1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1sZWZ0IHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgd2lkdGg6IDUwJTsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS10b3AtbWlkZGxlLWxlZnQge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1sZWZ0LWxpbmUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBoZWlnaHQ6IDVweDtcbiAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogI0UwNUQ2ODsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCAubGluZXMtdGl0bGUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0NDBweCkge1xuICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCAubGluZXMtdGl0bGUge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzVweDsgfSB9XG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLXRvcC1taWRkbGUtcmlnaHQgLmxpbmVzLXRpdGxlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7IH0gfVxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS10b3AtbWlkZGxlLXJpZ2h0IC5saW5lcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA0NXB4OyB9IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLXRvcC1taWRkbGUtcmlnaHQgLmxpbmVzLXRpdGxlOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCAudGl0bGUtYmxvY2stbGluZXMge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCAudGl0bGUtYmxvY2stbGluZXMge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtdG9wLW1pZGRsZS1yaWdodCB7XG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7IH0gfVxuICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLXRvcC1yaWdodCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXgtd2lkdGg6IDE2LjglO1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGJvcmRlci10b3A6IHNvbGlkIDFweCAjRURFREVEO1xuICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICNFREVERUQ7IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLWxlZnQgLnNlcnZpY2UtbWlkZGxlLWxlZnQtdGV4dCB7XG4gICAgICAgIGxlZnQ6IC00MHB4O1xuICAgICAgICByaWdodDogaW5pdGlhbDtcbiAgICAgICAgdG9wOiA1MHB4OyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1sZWZ0IC5zZXJ2aWNlLW1pZGRsZS1sZWZ0LXRleHQge1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHRvcDogaW5pdGlhbDsgfSB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1sZWZ0IC5zZXJ2aWNlLW1pZGRsZS1sZWZ0LXNpZ24ge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogNTVweDtcbiAgICAgICAgcmlnaHQ6IC0xNXB4O1xuICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zaXplOiAxMi41cHg7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICAgICAgY29sb3I6ICM5RDlEOUQ7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1sZWZ0IHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDE1JTsgfSB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDM1cHg7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0VERURFRDsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sgLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2stYmcge1xuICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sgLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2stYmc6YWZ0ZXIge1xuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiAuc2VydmljZS1taWRkbGUtbWFpbi1ibG9jayAubWlkZGxlLW1haW4tYmxvY2stbnVtYmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICAgIGNvbG9yOiAjMTMxMzEzO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay1udW1iZXI6YmVmb3JlIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMxMzEzMTM7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMjBweDsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sgLm1pZGRsZS1tYWluLWJsb2NrLXRpdGxlIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwMHB4O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBmb250LXNpemU6IDM1cHg7XG4gICAgICAgICAgICBjb2xvcjogIzEzMTMxMztcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA2MHB4OyB9IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay10ZXh0IHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wNjVlbTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay10ZXh0OmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIGhlaWdodDogNjUlO1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcbiAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCAjZmZmIDEwMCUpOyB9XG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sgLm1pZGRsZS1tYWluLWJsb2NrLXRleHQge1xuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDEwNXB4OyB9IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay1ib3R0b20ge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2sgLm1pZGRsZS1tYWluLWJsb2NrLWJvdHRvbSAudHJpcHBsZS1idG4ge1xuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiAuc2VydmljZS1taWRkbGUtbWFpbi1ibG9jayAubWlkZGxlLW1haW4tYmxvY2stYm90dG9tIC50cmlwcGxlLWJ0biAudHJpcHBsZS1idG4tdGhpcmQ6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAtMjUlOyB9XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIC5taWRkbGUtbWFpbi1ibG9jay1ib3R0b206YmVmb3JlIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2s6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrOmhvdmVyIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrLWJnIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2s6aG92ZXIgLm1pZGRsZS1tYWluLWJsb2NrLW51bWJlciB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLnNlcnZpY2UtbWlkZGxlLW1haW4gLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2s6aG92ZXIgLm1pZGRsZS1tYWluLWJsb2NrLW51bWJlcjpiZWZvcmUge1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrOmhvdmVyIC5taWRkbGUtbWFpbi1ibG9jay10aXRsZSB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrOmhvdmVyIC5taWRkbGUtbWFpbi1ibG9jay10ZXh0IHtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiAuc2VydmljZS1taWRkbGUtbWFpbi1ibG9jazpob3ZlciAubWlkZGxlLW1haW4tYmxvY2stdGV4dDphZnRlciB7XG4gICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGluaXRpYWw7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrOmhvdmVyIC5taWRkbGUtbWFpbi1ibG9jay1ib3R0b20ge1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiAuc2VydmljZS1taWRkbGUtbWFpbi1ibG9jazpob3ZlciAubWlkZGxlLW1haW4tYmxvY2stYm90dG9tOmJlZm9yZSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6IG5vbmU7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrOmhvdmVyOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgei1pbmRleDogLTE7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5zZXJ2aWNlLW1pZGRsZS1tYWluIC5zZXJ2aWNlLW1pZGRsZS1tYWluLWJsb2NrIHtcbiAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4OyB9IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiAuc2VydmljZS1idXR0b24tbmV4dCB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICByaWdodDogLTc1cHg7XG4gICAgICAgICAgYm90dG9tOiAyNXB4O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLW1pZGRsZSAuc2VydmljZS1taWRkbGUtbWFpbiB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA2Ni42JTsgfSB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtbWlkZGxlIC5taWRkbGUtc2VydmljZS1sZWZ0IHtcbiAgICAgICAgbWF4LXdpZHRoOiAxNSU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUgLm1pZGRsZS1zZXJ2aWNlLWxlZnQge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxNi42JTsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1taWRkbGUge1xuICAgICAgICAgIGhlaWdodDogNDUwcHg7IH0gfVxuICAgIC5taWRkbGUtd3JhcHBlciAuc2VydmljZS1ib3R0b20ge1xuICAgICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgICBtYXgtd2lkdGg6IDE1JTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtYm90dG9tIC5zZXJ2aWNlLWJvdHRvbS1saW5rIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGhlaWdodDogNjBweDtcbiAgICAgICAgbWF4LWhlaWdodDogNjBweDtcbiAgICAgICAgbWF4LXdpZHRoOiA2MHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5zZXJ2aWNlLWJvdHRvbSAuc2VydmljZS1ib3R0b20tbGluayBzdmcge1xuICAgICAgICAgIGZpbGw6IHdoaXRlOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtYm90dG9tIC5zZXJ2aWNlLWJvdHRvbS1saW5rIHtcbiAgICAgICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwcHg7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2UtYm90dG9tIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDE2LjYlOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLnNlcnZpY2Uge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfSB9XG4gIC5taWRkbGUtd3JhcHBlciAubmV3cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBoZWlnaHQ6IDgwMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MgLmxlZnQtc2lkZSAubGVmdC1zaWRlLXRpdGxlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MgLmxlZnQtc2lkZSB7XG4gICAgICAgIG1heC13aWR0aDogMTUlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7IH0gfVxuICAgIC5taWRkbGUtd3JhcHBlciAubmV3cyAubGVmdC1zaWRlLXRpdGxlLXRhZyB7XG4gICAgICBjb2xvcjogYmxhY2s7IH1cbiAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIHtcbiAgICAgIG1heC13aWR0aDogNzAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUtdG9wIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDgwcHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZS10b3AgLnRpdGxlLWJsb2NrLXJldmVyc2UgLnRpdGxlLWJsb2NrLWxpbmVzIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZS10b3AgLnRpdGxlLWJsb2NrLXJldmVyc2UgLnRpdGxlLWJsb2NrLWxpbmVzIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlLXRvcCAudGl0bGUtYmxvY2stcmV2ZXJzZSBoMiB7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZS10b3AgLnRpdGxlLWJsb2NrLXJldmVyc2UgaDI6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IC05MHB4O1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgzNiwgMzYsIDM2LCAwLjE0KTtcbiAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA0cHg7IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZS10b3AgLm5ld3MtbWlkZGxlLXRvcC1saW5rIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNDA1ZW07IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlLXRvcCAubmV3cy1taWRkbGUtdG9wLWxpbms6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL2xvbmctYXJyb3ctcmlnaHQuc3ZnKTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMwcHg7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlLXRvcCAubmV3cy1taWRkbGUtdG9wLWxpbmsge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbWFyZ2luLXRvcDogNTBQWDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1zbGlkZSB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1zbGlkZSBpbWcge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNjVweDtcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDI4MHB4OyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUgLnNsaWRlLWRhdGUge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICAgICAgICBtYXJnaW46IDMwcHggMDsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLXNsaWRlIC5zbGlkZS10aXRsZSB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDYwJTtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1zbGlkZSAudHJpcHBsZS1idG4ge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMDBweDsgfVxuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUgLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi10aXRsZSB7XG4gICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiBpbml0aWFsO1xuICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDsgfVxuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUgLnRyaXBwbGUtYnRuOmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ltYWdlcy9WZWN0b3Iuc3ZnKTtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICByaWdodDogLTcwcHg7IH1cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUgLnRyaXBwbGUtYnRuIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDsgfSB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUge1xuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogaW5pdGlhbDsgfSB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYm90dG9tOiA3MHB4OyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItcGFnaW5hdGlvbiB7XG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogaW5pdGlhbDtcbiAgICAgICAgICAgICAgbGVmdDogMTAwcHg7IH0gfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1idXR0b24tbmV4dCB7XG4gICAgICAgICAgcmlnaHQ6IC0yNXB4O1xuICAgICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1uZXh0IC5pY29uIHtcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgIHdpZHRoOiAxNXB4OyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItYnV0dG9uLW5leHQ6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogNDNweDtcbiAgICAgICAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBza2V3KDE1ZGVnKTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IC0xMDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMDVENjg7XG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGxlZnQgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyIC5zd2lwZXItYnV0dG9uLW5leHQ6aG92ZXIgLmljb24ge1xuICAgICAgICAgICAgZmlsbDogd2hpdGU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1uZXh0OmhvdmVyOmJlZm9yZSB7XG4gICAgICAgICAgICBsZWZ0OiAtMTVweDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGxlZnQgMC4zcyBlYXNlOyB9XG4gICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICAgICAgICBsZWZ0OiAtMjVweDtcbiAgICAgICAgICB0b3A6IDQwJTtcbiAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1idXR0b24tcHJldiAuaWNvbiB7XG4gICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgICAgICB3aWR0aDogMTVweDsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1wcmV2OmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBoZWlnaHQ6IDQzcHg7XG4gICAgICAgICAgICB3aWR0aDogNDVweDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2tldygxNWRlZyk7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAtMTAwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1wcmV2OmhvdmVyIC5pY29uIHtcbiAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtbWlkZGxlIC5uZXdzLW1pZGRsZS1zbGlkZXIgLnN3aXBlci1idXR0b24tcHJldjpob3ZlcjpiZWZvcmUge1xuICAgICAgICAgICAgbGVmdDogLTE1cHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciAuc3dpcGVyLWJ1dHRvbi1wcmV2OmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IG5vbmU7IH1cbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSAubmV3cy1taWRkbGUtc2xpZGVyOmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICNmZmYsIHRyYW5zcGFyZW50KTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgei1pbmRleDogMjsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlcjphZnRlciB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1taWRkbGUgLm5ld3MtbWlkZGxlLXNsaWRlciB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwMHB4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLW1pZGRsZSB7XG4gICAgICAgICAgbWF4LXdpZHRoOiA2Ni42JTsgfSB9XG4gICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLXJpZ2h0IHtcbiAgICAgIG1heC13aWR0aDogMTUlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nLXRvcDogMTUwcHg7IH1cbiAgICAgIC5taWRkbGUtd3JhcHBlciAubmV3cy1yaWdodC1sb2dvIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogNjBweDsgfVxuICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtcmlnaHQtbG9nbyBzcGFuIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIHotaW5kZXg6IDE7IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtcmlnaHQtbG9nbyBzcGFuOmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBoZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDRweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNCRDVCOTg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3R0b206IDQ1cHg7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBtYXJnaW46IGF1dG87IH1cbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtcmlnaHQtbG9nbyBzcGFuOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogNTUwcHg7XG4gICAgICAgICAgICB3aWR0aDogMXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0QyRDJEMjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNDVweDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWlkZGxlLXdyYXBwZXIgLm5ld3MtcmlnaHQtbG9nbyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1pZGRsZS13cmFwcGVyIC5uZXdzLXJpZ2h0IHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDE2LjclOyB9IH1cblxuLnNsaWRlci1zY3JvbGxiYXIge1xuICBib3R0b206IDEwMHB4OyB9XG5cbi5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuaGVhZGVyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMHB4IDE1MHB4OyB9XG4gIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLm1lbnUtbGVmdCB7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLm1pZGRsZS1saW5lIHtcbiAgICB6LWluZGV4OiAtMTsgfVxuICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWF4LXdpZHRoOiAxMzAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7IH1cbiAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyA+IGlucHV0LFxuICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyID4gLnRhYnMtYmxvY2sge1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlOyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjE6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjEsXG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjI6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjIsXG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjM6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjMsXG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjQ6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjQsXG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjU6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjUge1xuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgI2Rlc2lnbi10YWIxOmNoZWNrZWQgfiB1bCAudGFiMSBsYWJlbCxcbiAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyICNkZXNpZ24tdGFiMjpjaGVja2VkIH4gdWwgLnRhYjIgbGFiZWwsXG4gICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjM6Y2hlY2tlZCB+IHVsIC50YWIzIGxhYmVsLFxuICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgI2Rlc2lnbi10YWI0OmNoZWNrZWQgfiB1bCAudGFiNCBsYWJlbCxcbiAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyICNkZXNpZ24tdGFiNTpjaGVja2VkIH4gdWwgLnRhYjUgbGFiZWwge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjE6Y2hlY2tlZCB+IHVsIC50YWIxIGxhYmVsOmFmdGVyLFxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjI6Y2hlY2tlZCB+IHVsIC50YWIyIGxhYmVsOmFmdGVyLFxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjM6Y2hlY2tlZCB+IHVsIC50YWIzIGxhYmVsOmFmdGVyLFxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjQ6Y2hlY2tlZCB+IHVsIC50YWI0IGxhYmVsOmFmdGVyLFxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAjZGVzaWduLXRhYjU6Y2hlY2tlZCB+IHVsIC50YWI1IGxhYmVsOmFmdGVyIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjRTA1RDY4O1xuICAgICAgICB0cmFuc2l0aW9uOiBib3JkZXItdG9wIDAuM3MgZWFzZTsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIHtcbiAgICAgIG1hcmdpbi10b3A6IDEwMHB4OyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAuZGVzaWduLXRhYnMtbGFiZWxzIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0UxRTFFMTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNzVweDsgfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAuZGVzaWduLXRhYnMtbGFiZWxzIGxpIHtcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzUpOyB9XG4gICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLmRlc2lnbi10YWJzLWxhYmVscyBsaSBsYWJlbCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcGFkZGluZzogMTBweCAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLmRlc2lnbi10YWJzLWxhYmVscyBsaSBsYWJlbDphZnRlciB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgIGJvcmRlci10b3A6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgYm90dG9tOiAtMjBweDtcbiAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwcHg7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGJvcmRlci10b3AgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAuZGVzaWduLXRhYnMtbGFiZWxzIGxpIGxhYmVsOmhvdmVyIHtcbiAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBiM2I4O1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLmxpbmUtcHVycGxlIHtcbiAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgbGVmdDogNTFweDtcbiAgICAgICAgICB0b3A6IC0yNXB4OyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLmxpbmUtcHVycGxlIHtcbiAgICAgICAgICAgICAgd2lkdGg6IDIzMHB4OyB9IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLmxpbmUtY29ybmVyIHtcbiAgICAgICAgICB3aWR0aDogNzVweDtcbiAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xuICAgICAgICAgIGJvcmRlci13aWR0aDogM3B4IDBweCAwcHggM3B4O1xuICAgICAgICAgIHRvcDogLTI0cHg7XG4gICAgICAgICAgbGVmdDogLTI0cHg7IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLmxpbmUtYmx1ZSB7XG4gICAgICAgICAgaGVpZ2h0OiAxNTBweDtcbiAgICAgICAgICB3aWR0aDogM3B4O1xuICAgICAgICAgIHRvcDogMTE1cHg7XG4gICAgICAgICAgbGVmdDogLTIycHg7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAudGFicy1jb250ZW50LWNvbnRhaW5lciAubGluZS1ibHVlIHtcbiAgICAgICAgICAgICAgaGVpZ2h0OiAyNTBweDsgfSB9XG4gICAgICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyIC5kZXNpZ24taWNvbiB7XG4gICAgICAgICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICAgICAgICBtYXgtaGVpZ2h0OiAyODVweDtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiAtMTAwcHg7XG4gICAgICAgICAgcmlnaHQ6IC03NXB4O1xuICAgICAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyIC50YWJzLWJsb2NrIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAudGFicy1jb250ZW50LWNvbnRhaW5lciAudGFicy1ibG9jayAudGFicy1ibG9jay1pdGVtIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzIlO1xuICAgICAgICAgICAgbWF4LWhlaWdodDogNDIwcHg7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiA0MjBweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDYwcHggNDBweCAzMHB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLnRhYnMtYmxvY2sgLnRhYnMtYmxvY2staXRlbSBoMiB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi1ib3R0b20gMC41cyBlYXNlOyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAudGFicy1jb250ZW50LWNvbnRhaW5lciAudGFicy1ibG9jayAudGFicy1ibG9jay1pdGVtIHAge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogNjBweDtcbiAgICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjVzIGVhc2U7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyIC50YWJzLWJsb2NrIC50YWJzLWJsb2NrLWl0ZW06YWZ0ZXIge1xuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1kZXNpZ24gLmRlc2lnbi13cmFwcGVyIC5kZXNpZ24tY29udGFpbmVyIC5kZXNpZ24tdGFicyAudGFicy1jb250ZW50LWNvbnRhaW5lciAudGFicy1ibG9jayAudGFicy1ibG9jay1pdGVtOmhvdmVyIHtcbiAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyIC50YWJzLWJsb2NrIC50YWJzLWJsb2NrLWl0ZW06aG92ZXIgaDIge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLWJvdHRvbSAwLjVzIGVhc2U7IH1cbiAgICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtZGVzaWduIC5kZXNpZ24td3JhcHBlciAuZGVzaWduLWNvbnRhaW5lciAuZGVzaWduLXRhYnMgLnRhYnMtY29udGVudC1jb250YWluZXIgLnRhYnMtYmxvY2sgLnRhYnMtYmxvY2staXRlbTpob3ZlciBwIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMC41cyBlYXNlOyB9XG4gICAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWRlc2lnbiAuZGVzaWduLXdyYXBwZXIgLmRlc2lnbi1jb250YWluZXIgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyIC50YWJzLWJsb2NrIC50YWJzLWJsb2NrLWl0ZW06aG92ZXI6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuXG4uZXJyb3I0MDQgLmhlYWRlciB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAxMDBweCAwOyB9XG4gIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAubWlkZGxlLWxpbmUge1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7IH1cbiAgLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIC5lcnJvci1pY29uIHtcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDI4NXB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDEwMHB4O1xuICAgIGxlZnQ6IC0xMDBweDtcbiAgICB6LWluZGV4OiAtMTsgfVxuICAgIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAuZXJyb3ItaWNvbi1zZWMge1xuICAgICAgdG9wOiAxMDBweDtcbiAgICAgIHJpZ2h0OiAtMTAwcHg7XG4gICAgICBsZWZ0OiBpbml0aWFsOyB9XG4gIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAuZXJyb3ItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTsgfVxuICAgIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAuZXJyb3ItY29udGFpbmVyIC5lcnJvci1yaWdodC10ZXh0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogLTE0MHB4O1xuICAgICAgcmlnaHQ6IDUwcHg7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTsgfVxuICAgICAgLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIC5lcnJvci1jb250YWluZXIgLmVycm9yLXJpZ2h0LXRleHQgc3BhbiB7XG4gICAgICAgIC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGg6IDFweDtcbiAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU1KTtcbiAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBmb250LXNpemU6IDkwcHg7XG4gICAgICAgIC13ZWJraXQtd3JpdGluZy1tb2RlOiB0YjtcbiAgICAgICAgLW1zLXdyaXRpbmctbW9kZTogdGI7XG4gICAgICAgIHdyaXRpbmctbW9kZTogdGI7IH1cbiAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItdGl0bGUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBtYXgtd2lkdGg6IGZpdC1jb250ZW50O1xuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBmb250LXNpemU6IDM1cHg7XG4gICAgICBjb2xvcjogIzE1MTUxNTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIC5lcnJvci1jb250YWluZXIgLmVycm9yLXRpdGxlIC5saW5lLXB1cnBsZSB7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIHJpZ2h0OiA0MHB4O1xuICAgICAgICBib3R0b206IC0xMXB4OyB9XG4gICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItdGl0bGUgLmxpbmUtY29ybmVyIHtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDNweCAzcHggMDtcbiAgICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgcmlnaHQ6IC05cHg7XG4gICAgICAgIGJvdHRvbTogLTEwcHg7IH1cbiAgICAgIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAuZXJyb3ItY29udGFpbmVyIC5lcnJvci10aXRsZSAubGluZS1ibHVlIHtcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICB3aWR0aDogM3B4O1xuICAgICAgICByaWdodDogLTEwcHg7XG4gICAgICAgIGJvdHRvbTogMHB4OyB9XG4gICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItdGl0bGU6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNzI3Mjc7XG4gICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICBoZWlnaHQ6IDVweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA0MHB4OyB9XG4gICAgLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIC5lcnJvci1jb250YWluZXIgLmVycm9yLW1pZGRsZSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItbWlkZGxlIC5lcnJvci1udW0ge1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMjkwcHg7XG4gICAgICAgIGNvbG9yOiAjRTA1RDY4OyB9XG4gICAgLmVycm9yNDA0IC5lcnJvci13cmFwcGVyIC5lcnJvci1jb250YWluZXIgLmVycm9yLWJvdHRvbSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5lcnJvci1ib3R0b20tdGl0bGUge1xuICAgICAgICB3aWR0aDogNTAlOyB9XG4gICAgICAgIC5lcnJvcjQwNCAuZXJyb3Itd3JhcHBlciAuZXJyb3ItY29udGFpbmVyIC5lcnJvci1ib3R0b20gLmVycm9yLWJvdHRvbS10aXRsZSAuZXJyb3ItdGl0bGUge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgZm9udC1zaXplOiA0NXB4O1xuICAgICAgICAgIGNvbG9yOiAjMTUxNTE1O1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAgICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5lcnJvci1ib3R0b20tdGl0bGUgLmVycm9yLXRpdGxlOmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjMTUxNTE1O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBib3JkZXItd2lkdGg6IDBweCAycHggMnB4IDBweDtcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgIHdpZHRoOiAyMzBweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDBweDtcbiAgICAgICAgICAgIGJvdHRvbTogLTI0cHg7IH1cbiAgICAgICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5lcnJvci1ib3R0b20tdGl0bGUgLmVycm9yLXRpdGxlOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogNTBweDtcbiAgICAgICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgIzE1MTUxNTtcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogMnB4IDBweCAwcHggMnB4O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAyNnB4O1xuICAgICAgICAgICAgbGVmdDogMHB4OyB9XG4gICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5mb290ZXItYm90dG9tLWxlZnQtbWVudSB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICBtYXgtd2lkdGg6IDUwJTsgfVxuICAgICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhOmFmdGVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgICAgICAgIHJpZ2h0OiAtMjBweDtcbiAgICAgICAgICB3aWR0aDogNDBweDsgfVxuICAgICAgICAuZXJyb3I0MDQgLmVycm9yLXdyYXBwZXIgLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItYm90dG9tIC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjdGN0Y3OyB9XG5cbi5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5oZWFkZXIge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5jb250YWN0cy13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDAgMTUwcHg7IH1cbiAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLm1lbnUtbGVmdCB7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLm1lbnUtbGVmdCAubWVudS1sZWZ0LWJvdHRvbSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLm1lbnUtbGVmdCAuaW5mby1yaWdodCB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuY29udGFjdHMtd3JhcHBlciAuY29udGFjdHMtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDEzMDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDE1MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5jb250YWN0cy13cmFwcGVyIC5jb250YWN0cy1jb250YWluZXIgLnRvcC1jcnVtYnMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTQwcHg7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5jb250YWN0cy13cmFwcGVyIC5jb250YWN0cy1jb250YWluZXIgLnRvcC1jcnVtYnMgLmNydW1icy1sYXN0IC5saW5lLXB1cnBsZSB7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIHJpZ2h0OiA0MXB4O1xuICAgICAgICBib3R0b206IC0xMXB4OyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuY29udGFjdHMtd3JhcHBlciAuY29udGFjdHMtY29udGFpbmVyIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdCAubGluZS1jb3JuZXIge1xuICAgICAgICBib3JkZXItd2lkdGg6IDAgM3B4IDNweCAwO1xuICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICByaWdodDogLTlweDtcbiAgICAgICAgYm90dG9tOiAtMTBweDsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLmNvbnRhY3RzLWNvbnRhaW5lciAudG9wLWNydW1icyAuY3J1bWJzLWxhc3QgLmxpbmUtYmx1ZSB7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgd2lkdGg6IDNweDtcbiAgICAgICAgcmlnaHQ6IC0xMHB4O1xuICAgICAgICBib3R0b206IDBweDsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5jb250YWN0cy13cmFwcGVyIC5jb250YWN0cy1jb250YWluZXIgLmNvbnRhY3RzLW1pZGRsZSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5jb250YWN0cy13cmFwcGVyIC5jb250YWN0cy1jb250YWluZXIgLmNvbnRhY3RzLW1pZGRsZSAuY29udGFjdHMtdGl0bGUge1xuICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMDBweDsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLmNvbnRhY3RzLWNvbnRhaW5lciAuY29udGFjdHMtbWlkZGxlLWxlZnQge1xuICAgICAgICBtYXgtd2lkdGg6IDU1JTtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLmNvbnRhY3RzLWNvbnRhaW5lciAuY29udGFjdHMtbWlkZGxlLWxlZnQgLmZvb3Rlci1ib3R0b20tcmlnaHQgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW0ge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDcwcHg7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuY29udGFjdHMtd3JhcHBlciAuY29udGFjdHMtY29udGFpbmVyIC5jb250YWN0cy1taWRkbGUtbGVmdCAuZm9vdGVyLWJvdHRvbS1yaWdodCAuZm9vdGVyLXJpZ2h0LWluZm8taXRlbSAuZm9vdGVyLXJpZ2h0LWluZm8taXRlbS1wbGFjZSB7XG4gICAgICAgICAgICBjb2xvcjogIzM3MzczNzsgfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuY29udGFjdHMtd3JhcHBlciAuY29udGFjdHMtY29udGFpbmVyIC5jb250YWN0cy1taWRkbGUtbGVmdCAuY29udGFjdHMtbWFwLWJsb2NrIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuY29udGFjdHMtd3JhcHBlciAuY29udGFjdHMtY29udGFpbmVyIC5jb250YWN0cy1taWRkbGUtbGVmdCAuY29udGFjdHMtbWFwLWJsb2NrIGltZyB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3R0b206IC03MHB4O1xuICAgICAgICAgICAgbGVmdDogLTUzcHg7XG4gICAgICAgICAgICB6LWluZGV4OiAtMTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmNvbnRhY3RzLXdyYXBwZXIgLmNvbnRhY3RzLWNvbnRhaW5lciAuY29udGFjdHMtbWlkZGxlLWZvcm0ge1xuICAgICAgICBtYXgtd2lkdGg6IDM1JTtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cblxuLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLXRvcCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWJvdHRvbS1sZWZ0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuZm9vdGVyIC5mb290ZXItYm90dG9tIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1ib3R0b20tbGVmdC10aXRsZSB7XG4gICAgb3JkZXI6IDA7IH1cbiAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItYm90dG9tLWxlZnQtbWVudSB7XG4gICAgb3JkZXI6IDI7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWNvbnRhY3RzIC5mb290ZXIgLmZvb3Rlci1ib3R0b20gLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1ib3R0b20tbGVmdCAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0ge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJS82KTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhIHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAucGFnZS10ZW1wbGF0ZS1jb250YWN0cyAuZm9vdGVyIC5mb290ZXItYm90dG9tIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1zb2NpYWwge1xuICAgIG9yZGVyOiAxOyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItc29jaWFsOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWJvdHRvbS1yaWdodCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLnBhZ2UtdGVtcGxhdGUtY29udGFjdHMgLmZvb3RlciAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWFuY2hvciB7XG4gIG1hcmdpbi10b3A6IDQwcHg7IH1cblxuLnBhZ2UtdGVtcGxhdGUtYmxvZyAuaGVhZGVyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMCAxNTBweDsgfVxuICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLm1lbnUtbGVmdCB7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTMwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTUwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAudG9wLWNydW1icyB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNDBweDsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAudG9wLWNydW1icyAuY3J1bWJzLWxhc3QgLmxpbmUtcHVycGxlIHtcbiAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgcmlnaHQ6IDQxcHg7XG4gICAgICAgIGJvdHRvbTogLTExcHg7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLnRvcC1jcnVtYnMgLmNydW1icy1sYXN0IC5saW5lLWNvcm5lciB7XG4gICAgICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7XG4gICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgIHJpZ2h0OiAtOXB4O1xuICAgICAgICBib3R0b206IC0xMHB4OyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdCAubGluZS1ibHVlIHtcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICB3aWR0aDogM3B4O1xuICAgICAgICByaWdodDogLTEwcHg7XG4gICAgICAgIGJvdHRvbTogMHB4OyB9XG4gICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5kZXNpZ24taWNvbiB7XG4gICAgICAgIG1heC13aWR0aDogMTUwcHg7XG4gICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNDcwcHg7XG4gICAgICAgIHJpZ2h0OiAtMjVweDtcbiAgICAgICAgei1pbmRleDogLTE7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIHtcbiAgICAgICAgcG9zaXRpb246IGluaXRpYWw7IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbSB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIHBhZGRpbmc6IDMwcHggMjBweCA1MHB4O1xuICAgICAgICAgIG1heC13aWR0aDogNDglO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0gLmxpbmUge1xuICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtIC5saW5lLXB1cnBsZSB7XG4gICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwcHg7XG4gICAgICAgICAgICAgIHRvcDogLTIwcHg7IH1cbiAgICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0gLmxpbmUtcHVycGxlIHtcbiAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMzBweDsgfSB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtIC5saW5lLWNvcm5lciB7XG4gICAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xuICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDNweCAwcHggMHB4IDNweDtcbiAgICAgICAgICAgICAgdG9wOiAtMTlweDtcbiAgICAgICAgICAgICAgbGVmdDogLTE1cHg7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0gLmxpbmUtYmx1ZSB7XG4gICAgICAgICAgICAgIGhlaWdodDogMjAwcHg7XG4gICAgICAgICAgICAgIHdpZHRoOiAzcHg7XG4gICAgICAgICAgICAgIHRvcDogMTIxcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IC0xM3B4OyB9XG4gICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbS10aXRsZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbS10aXRsZSBoMyB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgICBjb2xvcjogIzJCMkIyQjsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbS10aXRsZSAudHJpcHBsZS1idG4ge1xuICAgICAgICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtLWltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMjgwcHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0taW1nIGltZyB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbS1pbWc6YmVmb3JlIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICBib3R0b206IC01cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IC00MHB4OyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtLWltZzphZnRlciB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgIGJvdHRvbTogLTFweDtcbiAgICAgICAgICAgICAgbGVmdDogLTQwcHg7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtLXRleHQge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyOXB4O1xuICAgICAgICAgICAgbWFyZ2luOiAzMHB4IDAgNDVweCAwO1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgICAgICAgbWF4LWhlaWdodDogOTBweDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0tdGV4dDphZnRlciB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICBoZWlnaHQ6IDY1JTtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgI2ZmZiAxMDAlKTsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0tYm90dG9tIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0tYm90dG9tIC50cmlwcGxlLWJ0biAudHJpcHBsZS1idG4tdGl0bGUge1xuICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogaW5pdGlhbDsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbS1ib3R0b20gLnRyaXBwbGUtYnRuOmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ltYWdlcy9WZWN0b3Iuc3ZnKTtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICByaWdodDogLTcwcHg7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW0tYm90dG9tIC5ibG9nLWl0ZW0tYm90dG9tLWRhdGUge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtOmhvdmVyIHtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMzVweCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjNzIGVhc2UsIGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW06aG92ZXIgLmxpbmUge1xuICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLmJsb2ctaXRlbTpob3ZlciAudHJpcHBsZS1idG4tZmlyc3Qge1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAtMiU7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlOyB9XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuYmxvZy1pdGVtOmhvdmVyIC50cmlwcGxlLWJ0bi1zZWNvbmQge1xuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwJTtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5ibG9nLWl0ZW06aG92ZXIgLnRyaXBwbGUtYnRuLXRoaXJkIHtcbiAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMiU7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbiAwLjJzIGVhc2U7IH1cbiAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICB0b3A6IC01MHB4O1xuICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xuICAgICAgICAgIGxlZnQ6IGluaXRpYWw7XG4gICAgICAgICAgcmlnaHQ6IDgwcHg7IH1cbiAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLXBhZ2luYXRpb24gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGNvbG9yIDAuM3MgZWFzZTtcbiAgICAgICAgICAgIGNvbG9yOiAjRTRFNEU0O1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjRTRFNEU0O1xuICAgICAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItcGFnaW5hdGlvbiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gICAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzAwMDtcbiAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcyBlYXNlLCBjb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLXBhZ2luYXRpb24ge1xuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGluaXRpYWw7IH0gfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLWJ1dHRvbi1uZXh0IHtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICAgIHRvcDogaW5pdGlhbDtcbiAgICAgICAgICB0b3A6IC01MHB4O1xuICAgICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICAgIGhlaWdodDogNDVweDtcbiAgICAgICAgICB3aWR0aDogNDVweDtcbiAgICAgICAgICBmb250LXNpemU6IDMycHg7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItYnV0dG9uLW5leHQgLmljb24ge1xuICAgICAgICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICBmaWxsOiBibGFjaztcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1idXR0b24tbmV4dDphZnRlciB7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiOyB9XG4gICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1idXR0b24tbmV4dDpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjQkQ1Qjk4O1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHggMHB4IDBweCAycHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IC02cHg7XG4gICAgICAgICAgICBsZWZ0OiAtNnB4OyB9XG4gICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1idXR0b24tbmV4dDpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAzMHB4IC0zcHggcmdiYSgwLCAwLCAwLCAwLjQ5KTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLCBib3gtc2hhZG93IDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuYmxvZy1zbGlkZXIgLnN3aXBlci1jb250YWluZXIgLnN3aXBlci1idXR0b24tbmV4dDpob3ZlciAuaWNvbiB7XG4gICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgZWFzZTsgfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5ibG9nLXNsaWRlciAuc3dpcGVyLWNvbnRhaW5lciAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgICAgICAgICByaWdodDogMjUwcHg7XG4gICAgICAgICAgdG9wOiAtNTBweDtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICAgIGhlaWdodDogNDVweDtcbiAgICAgICAgICB3aWR0aDogNDVweDtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZSwgYm94LXNoYWRvdyAwLjNzIGVhc2U7XG4gICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItYnV0dG9uLXByZXYgLmljb24ge1xuICAgICAgICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICBmaWxsOiBibGFjaztcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItYnV0dG9uLXByZXY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjsgfVxuICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItYnV0dG9uLXByZXY6aG92ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggMzBweCAtM3B4IHJnYmEoMCwgMCwgMCwgMC40OSk7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZSwgYm94LXNoYWRvdyAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmJsb2ctc2xpZGVyIC5zd2lwZXItY29udGFpbmVyIC5zd2lwZXItYnV0dG9uLXByZXY6aG92ZXIgLmljb24ge1xuICAgICAgICAgICAgICBmaWxsOiB3aGl0ZTtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGVhc2U7IH1cbiAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb24ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiA4MTBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuY29uc3VsdGF0aW9uLXRleHQge1xuICAgICAgICBwYWRkaW5nOiA0MHB4IDAgNDBweCA1MHB4OyB9XG4gICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmNvbnN1bHRhdGlvbi10ZXh0IGgzIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICAgICAgICBjb2xvcjogIzIzMjIyMjsgfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb24tdGV4dCBwIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgIGNvbG9yOiAjMjMyMjIyOyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb24gLnRyaXBwbGUtYnRuIHtcbiAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNzBweDsgfVxuICAgICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb24gLnRyaXBwbGUtYnRuIC50cmlwcGxlLWJ0bi10aXRsZSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xuICAgICAgICAgIGxldHRlci1zcGFjaW5nOiBpbml0aWFsOyB9XG4gICAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmNvbnN1bHRhdGlvbiAudHJpcHBsZS1idG46YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL1ZlY3Rvci5zdmcpO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IC03MHB4OyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb246YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMDVENjg7XG4gICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwOyB9XG4gICAgICAucGFnZS10ZW1wbGF0ZS1ibG9nIC5ibG9nLXdyYXBwZXIgLmJsb2ctY29udGFpbmVyIC5jb25zdWx0YXRpb246aG92ZXIgLnRyaXBwbGUtYnRuLWZpcnN0IHtcbiAgICAgICAgbWFyZ2luLXRvcDogLTIlO1xuICAgICAgICB0cmFuc2l0aW9uOiBtYXJnaW4tdG9wIDAuMnMgZWFzZTsgfVxuICAgICAgLnBhZ2UtdGVtcGxhdGUtYmxvZyAuYmxvZy13cmFwcGVyIC5ibG9nLWNvbnRhaW5lciAuY29uc3VsdGF0aW9uOmhvdmVyIC50cmlwcGxlLWJ0bi1zZWNvbmQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwJTtcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7IH1cbiAgICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmNvbnN1bHRhdGlvbjpob3ZlciAudHJpcHBsZS1idG4tdGhpcmQge1xuICAgICAgICBtYXJnaW4tdG9wOiAyJTtcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luIDAuMnMgZWFzZTsgfVxuICAgIC5wYWdlLXRlbXBsYXRlLWJsb2cgLmJsb2ctd3JhcHBlciAuYmxvZy1jb250YWluZXIgLmRlc2lnbi1zZW8ge1xuICAgICAgbWFyZ2luLXRvcDogNzBweDsgfVxuXG4uc3dpcGVyLWNvbnRhaW5lci1tdWx0aXJvdy1jb2x1bW4gPiAuc3dpcGVyLXdyYXBwZXIge1xuICBmbGV4LWRpcmVjdGlvbjogcm93ICFpbXBvcnRhbnQ7IH1cblxuLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuaGVhZGVyIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4uYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC50b3Atc2l0ZS13aXRoLWNydW1icyB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBpbml0aWFsO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAudG9wLXNpdGUtd2l0aC1jcnVtYnMgLnRvcC1jcnVtYnMge1xuICAgIHBhZGRpbmctbGVmdDogMjUlO1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxMTtcbiAgICBwYWRkaW5nLXRvcDogNzBweDsgfVxuICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLnRvcC1zaXRlLXdpdGgtY3J1bWJzIC50b3AtY3J1bWJzIC5jcnVtYnMtaXRlbSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAudG9wLXNpdGUtd2l0aC1jcnVtYnMgLnRvcC1jcnVtYnMgLmNydW1icy1pdGVtIHNwYW4ge1xuICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC50b3Atc2l0ZS13aXRoLWNydW1icyAudG9wLWNydW1icyAuY3J1bWJzLWl0ZW06YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiL1wiO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTVweDsgfVxuICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLnRvcC1zaXRlLXdpdGgtY3J1bWJzIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdCBzcGFuIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDsgfVxuICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLnRvcC1zaXRlLXdpdGgtY3J1bWJzIC50b3AtY3J1bWJzIC5jcnVtYnMtbGFzdDpiZWZvcmUge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgZm9udC1zaXplOiAxOHB4OyB9XG4gICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAudG9wLXNpdGUtd2l0aC1jcnVtYnMgLnRvcC1jcnVtYnM6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAudG9wLXNpdGUtd2l0aC1jcnVtYnMgLnRvcC1zaXRlLW1pZGRsZSAudG9wLXNpdGUtbWlkZGxlLXRleHQge1xuICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICAgIG1heC13aWR0aDogNTAlOyB9XG4gIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLnRvcC1zaXRlLXdpdGgtY3J1bWJzIC50b3Atc2l0ZS1taWRkbGUtYm90dG9tIC5kYXRlIHtcbiAgICBib3JkZXItbGVmdDogbm9uZTsgfVxuICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC50b3Atc2l0ZS13aXRoLWNydW1icyAudGV4dC13aXRoLWxvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogLTYwcHg7XG4gICAgdG9wOiAzNTBweDtcbiAgICB6LWluZGV4OiAxMTsgfVxuICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLnRvcC1zaXRlLXdpdGgtY3J1bWJzIC50ZXh0LXdpdGgtbG9nbyBzcGFuIHtcbiAgICAgIGNvbG9yOiAjRkZGRkZGOyB9XG5cbi5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5wb3J0Zm9saW8tbGVmdC10aXRsZS10YWc6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJvcmRlcjogNHB4IHNvbGlkIHJnYmEoMjEsIDIxLCAyMSwgMC4wNik7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtMzVweDtcbiAgICBib3R0b206IC0yOXB4O1xuICAgIHotaW5kZXg6IC0xOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5wb3J0Zm9saW8tbGVmdC10aXRsZS10YWc6YmVmb3JlIHtcbiAgICAgICAgYm90dG9tOiAtMzVweDtcbiAgICAgICAgcmlnaHQ6IC0yMHB4OyB9IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5saW5lIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXdyYXBwZXIgLmxpbmUtcHVycGxlIHtcbiAgICAgICAgd2lkdGg6IDI4cHg7XG4gICAgICAgIGhlaWdodDogNHB4O1xuICAgICAgICByaWdodDogLTI4cHg7XG4gICAgICAgIHRvcDogNjNweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyIC5saW5lLWNvcm5lciB7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBoZWlnaHQ6IDM1cHg7XG4gICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCA0cHggNHB4O1xuICAgICAgICB0b3A6IDMxcHg7XG4gICAgICAgIGxlZnQ6IDE1cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLm1pZGRsZS1wb3J0Zm9saW8tbGVmdC10aXRsZSAucG9ydGZvbGlvLWxlZnQtdGl0bGUtd3JhcHBlciAubGluZS1ibHVlIHtcbiAgICAgICAgaGVpZ2h0OiA2NXB4O1xuICAgICAgICB3aWR0aDogNHB4O1xuICAgICAgICB0b3A6IC0zNHB4O1xuICAgICAgICBsZWZ0OiAxNnB4OyB9IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS1yZWRfbGluZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0LXRpdGxlIC5wb3J0Zm9saW8tbGVmdC10aXRsZS1yZWRfbGluZSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgYmFja2dyb3VuZDogI0UwNUQ2ODtcbiAgICAgIHdpZHRoOiA0NXB4O1xuICAgICAgaGVpZ2h0OiA0cHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDIwcHg7XG4gICAgICBsZWZ0OiAyOTVweDsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXJlZF9saW5lIHNwYW4ge1xuICAgICAgICAgIHBvc2l0aW9uOiBpbml0aWFsO1xuICAgICAgICAgIGJvdHRvbTogaW5pdGlhbDtcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xuICAgICAgICAgIHdpZHRoOiA0cHg7XG4gICAgICAgICAgaGVpZ2h0OiA1MHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5taWRkbGUtcG9ydGZvbGlvLWxlZnQtdGl0bGUgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXJlZF9saW5lIHtcbiAgICAgICAgcG9zaXRpb246IGluaXRpYWw7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMzBweDtcbiAgICAgICAgbWFyZ2luOiAxNDBweCAwIDEwMHB4IDA7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAubWlkZGxlLXBvcnRmb2xpby1sZWZ0IHtcbiAgICAgIHBhZGRpbmc6IDE2MHB4IDAgODBweCA4MHB4OyB9IH1cbiAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAuYmxvZy1zaW5nbGUtbWFpbi1yaWdodCB7XG4gICAgcGFkZGluZzogODBweCA0MHB4O1xuICAgIHdpZHRoOiA4My40JTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5ibG9nLXNpbmdsZS1tYWluLXJpZ2h0IC5kZXNpZ24taWNvbiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDMwJTtcbiAgICAgIHJpZ2h0OiAtNTBweDsgfVxuICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogMTEwMHB4O1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1kYXRlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1NXB4OyB9XG4gICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1kYXRlIC5kYXRlIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4OyB9XG4gICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1kYXRlOmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgIHdpZHRoOiA5MCU7IH1cbiAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1tb21lbnQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTAwcHg7IH1cbiAgICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAuYmxvZy1zaW5nbGUtbWFpbi1yaWdodC1jb250YWluZXIgLmJsb2ctc2luZ2xlLW1haW4tdG9wLW1vbWVudCAubW9tZW50LWxlZnQge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIGxlZnQ6IC0zMHB4O1xuICAgICAgICAgIHRvcDogNzBweDsgfVxuICAgICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1tb21lbnQgLm1vbWVudC1sZWZ0IHNwYW4ge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAuYmxvZy1zaW5nbGUtbWFpbi1yaWdodC1jb250YWluZXIgLmJsb2ctc2luZ2xlLW1haW4tdG9wLW1vbWVudCAubW9tZW50LWxlZnQgLnRyaXBwbGUtYnRuIHtcbiAgICAgICAgICAgIGhlaWdodDogNHB4O1xuICAgICAgICAgICAgd2lkdGg6IDExMHB4O1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsgfVxuICAgICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5ibG9nLXNpbmdsZS1tYWluLXJpZ2h0LWNvbnRhaW5lciAuYmxvZy1zaW5nbGUtbWFpbi10b3AtbW9tZW50IC5tb21lbnQtdGV4dCBwIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzM3B4OyB9XG4gICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLXRvcC1tb21lbnQgLm1vbWVudC10ZXh0LWJnIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAtMjBweDtcbiAgICAgICAgICByaWdodDogMTUwcHg7IH1cbiAgICAgICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5ibG9nLXNpbmdsZS1tYWluLXJpZ2h0LWNvbnRhaW5lciAuYmxvZy1zaW5nbGUtbWFpbi10b3AtbW9tZW50IC5tb21lbnQtdGV4dC1iZyBzcGFuIHtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgZm9udC1zaXplOiA4MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA3NXB4O1xuICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aDogMXB4O1xuICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgICAgLmJsb2ctdGVtcGxhdGUtZGVmYXVsdC5zaW5nbGUtYmxvZyAuYmxvZy1zaW5nbGUtbWFpbiAuYmxvZy1zaW5nbGUtbWFpbi1yaWdodC1jb250YWluZXIgLmJsb2ctc2luZ2xlLW1haW4tbWlkZGxlIHAge1xuICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMzNweDtcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICAgIG1hcmdpbjogMzVweCAwOyB9XG4gICAgICAuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9nIC5ibG9nLXNpbmdsZS1tYWluIC5ibG9nLXNpbmdsZS1tYWluLXJpZ2h0LWNvbnRhaW5lciAuYmxvZy1zaW5nbGUtbWFpbi1taWRkbGUgdWwgbGkge1xuICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMzNweDtcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICAgIG1hcmdpbjogNXB4IDA7IH1cbiAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLW1pZGRsZSAubWFpbi1taWRkbGUtaW1nIHtcbiAgICAgICAgbWF4LWhlaWdodDogNDUwcHg7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLW1pZGRsZSAubWFpbi1taWRkbGUtaW1nIGltZyB7XG4gICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgICAgIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLmJsb2ctc2luZ2xlLW1haW4tcmlnaHQtY29udGFpbmVyIC5ibG9nLXNpbmdsZS1tYWluLW1pZGRsZSAubWFpbi1taWRkbGUtaW1nIC5kZXNpZ24taWNvbiB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogLTc1cHg7XG4gICAgICAgICAgcmlnaHQ6IDEwNXB4O1xuICAgICAgICAgIHotaW5kZXg6IC0xOyB9XG4gIC5ibG9nLXRlbXBsYXRlLWRlZmF1bHQuc2luZ2xlLWJsb2cgLmJsb2ctc2luZ2xlLW1haW4gLm1lbnUtbGVmdC1ib3R0b20ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDsgfVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL2Zvb3Rlci1iZy5qcGcpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmZvb3RlciAuZm9vdGVyLXRpdGxlIHtcbiAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogNDVweDtcbiAgICBjb2xvcjogI0VERURFRDsgfVxuICAuZm9vdGVyIC5mb290ZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXgtd2lkdGg6IDEzNjBweDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZm9vdGVyLXRvcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA3MHB4IDAgNjBweCAwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDE7IH1cbiAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1hcCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDAgMjVweDsgfVxuICAgICAgLmZvb3Rlci10b3AgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYXAgLmZvb3Rlci10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cbiAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFwIC5tYXAtY29udGFpbmVyIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiAyNXB4IDI1cHg7IH1cbiAgICAgICAgLmZvb3Rlci10b3AgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYXAgLm1hcC1jb250YWluZXIgLmxpbmUtcHVycGxlIHtcbiAgICAgICAgICB3aWR0aDogMTUwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgbGVmdDogNzVweDtcbiAgICAgICAgICB0b3A6IC0xcHg7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1hcCAubWFwLWNvbnRhaW5lciAubGluZS1wdXJwbGUge1xuICAgICAgICAgICAgICB3aWR0aDogMjMwcHg7IH0gfVxuICAgICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1hcCAubWFwLWNvbnRhaW5lciAubGluZS1jb3JuZXIge1xuICAgICAgICAgIHdpZHRoOiA3NXB4O1xuICAgICAgICAgIGhlaWdodDogMTQwcHg7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiAzcHggMHB4IDBweCAzcHg7XG4gICAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgICAgbGVmdDogMHB4OyB9XG4gICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFwIC5tYXAtY29udGFpbmVyIC5saW5lLWJsdWUge1xuICAgICAgICAgIGhlaWdodDogMTUwcHg7XG4gICAgICAgICAgd2lkdGg6IDNweDtcbiAgICAgICAgICB0b3A6IDE0MHB4O1xuICAgICAgICAgIGxlZnQ6IDFweDsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFwIC5tYXAtY29udGFpbmVyIC5saW5lLWJsdWUge1xuICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4OyB9IH1cbiAgICAgICAgLmZvb3Rlci10b3AgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYXAgLm1hcC1jb250YWluZXIgLmZvb3Rlci1tYXAtYmxvY2sge1xuICAgICAgICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAgICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFwIC5tYXAtY29udGFpbmVyIC5mb290ZXItbWFwLWJsb2NrIGlmcmFtZSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4OyB9XG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItbWFwIC5tYXAtY29udGFpbmVyIC5mb290ZXItbWFwLWJsb2NrIGlmcmFtZSB7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogNDAwcHg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiA2MDBweDsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLW1hcCAubWFwLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBwYWRkaW5nOiAyNXB4IDAgMCAyNXB4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLmZvb3Rlci10b3AgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1tYXAge1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItZm9ybSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWZvcm0gLnRyaXBwbGUtbGluZXMge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgICAgICAgLmZvb3Rlci10b3AgLmZvb3Rlci1jb250YWluZXIgLmZvb3Rlci1mb3JtIC50cmlwcGxlLWxpbmVzLWxvbmcge1xuICAgICAgICAgIHdpZHRoOiAyNzBweDtcbiAgICAgICAgICBoZWlnaHQ6IDFweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLWZvcm0gLnRyaXBwbGUtbGluZXMtbG9uZzpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IC03MHB4OyB9XG4gICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItZm9ybSAudHJpcHBsZS1saW5lcy10d28ge1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICAgIGhlaWdodDogMXB4OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItZm9ybSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItdG9wLXJpZ2h0LXRleHQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxNTBweDtcbiAgICAgIHJpZ2h0OiAtNDlweDtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpOyB9XG4gICAgICAuZm9vdGVyLXRvcCAuZm9vdGVyLWNvbnRhaW5lciAuZm9vdGVyLXRvcC1yaWdodC10ZXh0IHNwYW4ge1xuICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgICAgIC13ZWJraXQtdGV4dC1zdHJva2UtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41NSk7XG4gICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgZm9udC1zaXplOiA5MHB4O1xuICAgICAgICAtd2Via2l0LXdyaXRpbmctbW9kZTogdGI7XG4gICAgICAgIC1tcy13cml0aW5nLW1vZGU6IHRiO1xuICAgICAgICB3cml0aW5nLW1vZGU6IHRiOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC5mb290ZXItdG9wIC5mb290ZXItY29udGFpbmVyIC5mb290ZXItdG9wLXJpZ2h0LXRleHQge1xuICAgICAgICAgIHRvcDogLTQwcHg7XG4gICAgICAgICAgcmlnaHQ6IDIwcHg7IH0gfVxuICAgIC5mb290ZXItdG9wOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLmZvb3Rlci10b3A6YWZ0ZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5mb290ZXItdG9wIHtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50OyB9IH1cbiAgLmZvb3Rlci1ib3R0b20ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLmZvb3Rlci1ib3R0b20gLmZvb3Rlci1jb250YWluZXIge1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWNvbnRhaW5lciB7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICBhbGlnbi1pdGVtczogaW5pdGlhbDsgfSB9XG4gICAgLmZvb3Rlci1ib3R0b20tbGVmdCB7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi10b3A6IDcwcHg7IH1cbiAgICAgIC5mb290ZXItYm90dG9tLWxlZnQtdGl0bGUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0LXRpdGxlIC5mb290ZXItdGl0bGUge1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7IH1cbiAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0LXRpdGxlIC5mb290ZXItdGl0bGU6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNFMDVENjg7XG4gICAgICAgICAgICBib3JkZXItd2lkdGg6IDBweCAycHggMnB4IDBweDtcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgIHdpZHRoOiAyMzBweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6IDBweDtcbiAgICAgICAgICAgIGJvdHRvbTogLTI0cHg7IH1cbiAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0LXRpdGxlIC5mb290ZXItdGl0bGU6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgaGVpZ2h0OiA1NXB4O1xuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjRTA1RDY4O1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHggMHB4IDBweCAycHg7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDIwcHg7XG4gICAgICAgICAgICBsZWZ0OiAwcHg7IH1cbiAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdC10aXRsZSBzcGFuIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtMTBweDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogNDBweDsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQtdGl0bGUgc3BhbiB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQtdGl0bGUge1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBpbml0aWFsOyB9IH1cbiAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBtYXJnaW4tdG9wOiA3MHB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cbiAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdCAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0ge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzNXB4OyB9XG4gICAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdCAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0gYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgICBjb2xvcjogIzhGOEY4RjtcbiAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhOmFmdGVyIHtcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICByaWdodDogLTU1cHg7XG4gICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItYm90dG9tLWxlZnQtbWVudSAuZm9vdGVyLW1lbnUtaXRlbSBhOmhvdmVyIHtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdCAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnUgLmZvb3Rlci1tZW51LWl0ZW0gYTpob3ZlcjphZnRlciB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51IC5mb290ZXItbWVudS1pdGVtIHtcbiAgICAgICAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBpbml0aWFsOyB9IH1cbiAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1zb2NpYWwge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAzNXB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4OyB9XG4gICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1zb2NpYWwgLnNvY2lhbCB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdCAuZm9vdGVyLXNvY2lhbCAuc29jaWFsIC5zb2NpYWwtaWNvbiAuaWNvbiB7XG4gICAgICAgICAgICBmaWxsOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cbiAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItc29jaWFsIC5zb2NpYWwgLnNvY2lhbC1pY29uOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgICBtYXJnaW46IDBweCA1MHB4OyB9XG4gICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1zb2NpYWw6YWZ0ZXIge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzRDNEM0O1xuICAgICAgICAgIHdpZHRoOiAyNTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDFweDsgfVxuICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQgLmZvb3Rlci1zb2NpYWw6YWZ0ZXIge1xuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0IC5mb290ZXItc29jaWFsIHtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIG1heC13aWR0aDogODAlOyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdCB7XG4gICAgICAgICAgbWF4LXdpZHRoOiA1NSU7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMDsgfSB9XG4gICAgLmZvb3Rlci1ib3R0b20tcmlnaHQge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgICAuZm9vdGVyLWJvdHRvbS1yaWdodCAuZm9vdGVyLXJpZ2h0LWluZm8taXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAgICAgLmZvb3Rlci1ib3R0b20tcmlnaHQgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW0gaW1nIHtcbiAgICAgICAgICB3aWR0aDogMzVweDtcbiAgICAgICAgICBoZWlnaHQ6IDM1cHg7IH1cbiAgICAgICAgLmZvb3Rlci1ib3R0b20tcmlnaHQgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW0gLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW0tcGxhY2Uge1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICM1QjVCNUI7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4OyB9XG4gICAgICAgIC5mb290ZXItYm90dG9tLXJpZ2h0IC5mb290ZXItcmlnaHQtaW5mby1pdGVtOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgbWFyZ2luOiA1MHB4IDA7IH1cbiAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1yaWdodCAuZm9vdGVyLXJpZ2h0LWluZm8taXRlbTpudGgtY2hpbGQoMikge1xuICAgICAgICAgICAgICBtYXJnaW46IDA7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAuZm9vdGVyLWJvdHRvbS1yaWdodCB7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7IH0gfVxuICAgIC5mb290ZXItYm90dG9tIC5mb290ZXItYW5jaG9yIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAxMjBweCBhdXRvIDA7XG4gICAgICBwYWRkaW5nOiA0MHB4IDEwJTtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNUI1QjVCO1xuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGNvbG9yOiAjOEY4RjhGO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzFjMWMxYzsgfVxuICAgICAgLmZvb3Rlci1ib3R0b20gLmZvb3Rlci1hbmNob3ItbGVmdCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgd2lkdGg6IDQwJTsgfVxuICAgICAgICAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWFuY2hvci1sZWZ0IGEge1xuICAgICAgICAgIGNvbG9yOiAjOEY4RjhGOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWFuY2hvci1sZWZ0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAuZm9vdGVyLWJvdHRvbSAuZm9vdGVyLWFuY2hvciB7XG4gICAgICAgICAgbWF4LXdpZHRoOiA4MCU7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAuZm9vdGVyLWJvdHRvbSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxYzFjMWM7XG4gICAgICAgIHBhZGRpbmctdG9wOiA2MHB4OyB9IH1cbiAgLmZvb3RlcjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5mb290ZXI6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgIC5mb290ZXIge1xuICAgICAgYmFja2dyb3VuZDogbm9uZTsgfSB9XG5cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMTA7XG4gIGhlaWdodDogMTAwcHg7IH1cbiAgLmhlYWRlci1sZWZ0LWJsb2NrIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIG1heC13aWR0aDogMzUlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctbGVmdDogMjUlOyB9XG4gICAgLmhlYWRlci1sZWZ0LWJsb2NrIC5oZWFkZXItbGFuZyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgICAgLmhlYWRlci1sZWZ0LWJsb2NrIC5oZWFkZXItbGFuZyBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAgICAgLmhlYWRlci1sZWZ0LWJsb2NrIC5oZWFkZXItbGFuZyBsaTptYXJrZXIge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgICAgLmhlYWRlci1sZWZ0LWJsb2NrIC5oZWFkZXItbGFuZyBsaSBhIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIGNvbG9yOiAjNTQ1NDU0OyB9XG4gICAgICAgIC5oZWFkZXItbGVmdC1ibG9jayAuaGVhZGVyLWxhbmcgbGk6bGFzdC1jaGlsZDpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICcvJztcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW46IDBweCAxMHB4O1xuICAgICAgICAgIGNvbG9yOiAjNTQ1NDU0OyB9XG4gICAgICAgIC5oZWFkZXItbGVmdC1ibG9jayAuaGVhZGVyLWxhbmcgbGkuY3VycmVudC1sYW5nIGEge1xuICAgICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLmhlYWRlci1sZWZ0LWJsb2NrIHtcbiAgICAgICAgZGlzcGxheTogZmxleDsgfSB9XG4gIC5oZWFkZXIgLmhlYWRlci1sb2dvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAxNTBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTAlO1xuICAgIHRvcDogNzVweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5oZWFkZXIgLmhlYWRlci1sb2dvIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB0b3A6IDI1cHg7XG4gICAgICAgIG1heC13aWR0aDogMjIwcHg7IH0gfVxuICAuaGVhZGVyLXJpZ2h0LWJsb2NrIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAuaGVhZGVyLXJpZ2h0LWJsb2NrIC5zbWFsbC1saW5lIHtcbiAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAgIC5oZWFkZXItcmlnaHQtYmxvY2sgLnNvY2lhbCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgcGFkZGluZzogMHB4IDEyMHB4IDBweCA2MHB4OyB9XG4gICAgICAuaGVhZGVyLXJpZ2h0LWJsb2NrIC5zb2NpYWwtaWNvbiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAgICAgLmhlYWRlci1yaWdodC1ibG9jayAuc29jaWFsLWljb24gc3ZnIHtcbiAgICAgICAgICBmaWxsOiAjZmZmOyB9XG4gICAgICAgIC5oZWFkZXItcmlnaHQtYmxvY2sgLnNvY2lhbC1pY29uOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgbWFyZ2luOiAwcHggNjBweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5oZWFkZXItcmlnaHQtYmxvY2sge1xuICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cblxuLm1lbnUtbGVmdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWF4LXdpZHRoOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDYwcHg7XG4gIHJpZ2h0OiA0MHB4O1xuICB6LWluZGV4OiAxMTsgfVxuICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAzMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMTEwJSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDgwMG1zIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7IH1cbiAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDUwcHggNiU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1OyB9XG4gICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWNsb3NlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIHdpZHRoOiA2NXB4O1xuICAgICAgICBoZWlnaHQ6IDY1cHg7XG4gICAgICAgIGJhY2tncm91bmQ6ICMxQjFCMUI7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWNsb3NlIC5tZW51LWxlZnQtdG9wLWJ1cmdlci1jcm9zcyB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWFyZ2luOiBhdXRvIDA7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbi1sZWZ0IC5tZW51LWxlZnQtdG9wLWJ1cmdlci1jbG9zZSAubWVudS1sZWZ0LXRvcC1idXJnZXItY3Jvc3M6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24tbGVmdCAubWVudS1sZWZ0LXRvcC1idXJnZXItY2xvc2UgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWNyb3NzIHNwYW4ge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICAgICAgbWFyZ2luOiA4cHggMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDogLTEwMDBweDsgfVxuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24tbGVmdCAubWVudS1sZWZ0LXRvcC1idXJnZXItY2xvc2UgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWNyb3NzOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICBoZWlnaHQ6IDNweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyB9XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbi1sZWZ0IC5tZW51LWxlZnQtdG9wLWJ1cmdlci1jbG9zZSAubWVudS1sZWZ0LXRvcC1idXJnZXItY3Jvc3M6aG92ZXIge1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbi1sZWZ0IC5tZW51LWxlZnQtdG9wLWJ1cmdlci1jbG9zZSAubWVudS1sZWZ0LXRvcC1idXJnZXItY3Jvc3Mge1xuICAgICAgICAgICAgICB3aWR0aDogNDBweDsgfSB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWNsb3NlIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgICAgIGhlaWdodDogMTAwcHg7IH0gfVxuICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbi1sZWZ0IC5sb2dvLW1vYiB7XG4gICAgICAgIG1heC13aWR0aDogMTUwcHg7IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24tbGVmdCAubG9nby1tb2Ige1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQgLnRleHQtd2l0aC1sb2dvIHtcbiAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogaW5pdGlhbDtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQgLnRleHQtd2l0aC1sb2dvIHNwYW4ge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24tbGVmdCAudGV4dC13aXRoLWxvZ28ge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7IH0gfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLWxlZnQge1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XG4gICAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICBwYWRkaW5nOiAwIDAgMTIlIDA7IH0gfVxuICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjsgfVxuICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJS82KTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWJnIHtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyB9XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSAubWVudS1saXN0LWl0ZW0tYmc6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDsgfVxuICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uIC5tZW51LWxpc3QgLm1lbnUtbGlzdC1pdGVtIC5tZW51LWxpc3QtaXRlbS1jb250YWluZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lciAubWVudS1saXN0LWl0ZW0tbGluayB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSAubWVudS1saXN0LWl0ZW0tY29udGFpbmVyIC5saW5rLWNvbnRlbnQge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAzMCU7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lciAubGluay1jb250ZW50IC5saW5rLWNvbnRlbnQtbWFpbiB7XG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyM3B4O1xuICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlOyB9XG4gICAgICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uIC5tZW51LWxpc3QgLm1lbnUtbGlzdC1pdGVtIC5tZW51LWxpc3QtaXRlbS1jb250YWluZXIgLmxpbmstY29udGVudCAubGluay1jb250ZW50LXN1YiB7XG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgICAgICAgICAgIHBhZGRpbmc6IDBweCAxMCU7IH1cbiAgICAgICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSAubWVudS1saXN0LWl0ZW0tY29udGFpbmVyIC5saW5rLWNvbnRlbnQgLmxpbmstY29udGVudC1zdWIgLmxpbmstY29udGVudC1zdWItaXRlbSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAjNkQ2RDZEIDFweCBzb2xpZDsgfVxuICAgICAgICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lciAubGluay1jb250ZW50IC5saW5rLWNvbnRlbnQtc3ViIC5saW5rLWNvbnRlbnQtc3ViLWl0ZW0gYSB7XG4gICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIzcHg7XG4gICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSAubWVudS1saXN0LWl0ZW0tY29udGFpbmVyIC5saW5rLWNvbnRlbnQgLmxpbmstY29udGVudC1zdWIgLmxpbmstY29udGVudC1zdWItaXRlbSBhOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNFMDVENjg7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lciAubGluay1jb250ZW50IC5saW5rLWNvbnRlbnQtc3ViIC5saW5rLWNvbnRlbnQtc3ViLWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOyB9XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSAubWVudS1saXN0LWl0ZW0tY29udGFpbmVyOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW0gLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lcjpob3ZlciAubWVudS1saXN0LWl0ZW0tbGluayB7XG4gICAgICAgICAgICAgIGJvcmRlci10b3A6ICNFMDVENjggNnB4IHNvbGlkOyB9XG4gICAgICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uIC5tZW51LWxpc3QgLm1lbnUtbGlzdC1pdGVtIC5tZW51LWxpc3QtaXRlbS1jb250YWluZXI6aG92ZXIgLmxpbmstY29udGVudC1tYWluIHtcbiAgICAgICAgICAgICAgY29sb3I6ICNFMDVENjg7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uIC5tZW51LWxpc3QgLm1lbnUtbGlzdC1pdGVtOm50aC1jaGlsZCgybikgLm1lbnUtbGlzdC1pdGVtLWNvbnRhaW5lciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI5MjkyOTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgfVxuICAgICAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24gLm1lbnUtbGlzdCAubWVudS1saXN0LWl0ZW06bnRoLWNoaWxkKDJuKSAubWVudS1saXN0LWl0ZW0tY29udGFpbmVyOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IH1cbiAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbTpob3ZlciAubWVudS1saXN0LWl0ZW0tYmcge1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTsgfVxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IC5tZW51LWxpc3QtaXRlbSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzYpOyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1lbnUtbGVmdCAubmF2aWdhdGlvbiAubWVudS1saXN0IHtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93OyB9IH1cbiAgICAubWVudS1sZWZ0IC5uYXZpZ2F0aW9uLm5hdmlnYXRpb24tb3BlbiB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gODAwbXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5tZW51LWxlZnQgLm5hdmlnYXRpb24ge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93OyB9IH1cbiAgLm1lbnUtbGVmdC10b3AtYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGJhY2tncm91bmQ6ICMxQjFCMUI7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWJ0biB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbjogYXV0byAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItYnRuOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItYnRuOmJlZm9yZSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDNweDsgfSB9XG4gICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItYnRuIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBtYXJnaW46IDNweCAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItYnRuIHNwYW4ge1xuICAgICAgICAgICAgbWFyZ2luOiA4cHggMDtcbiAgICAgICAgICAgIGhlaWdodDogM3B4OyB9IH1cbiAgICAgIC5tZW51LWxlZnQtdG9wLWJ1cmdlci1idG46YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICB3aWR0aDogNjAlO1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyB9XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItYnRuOmFmdGVyIHtcbiAgICAgICAgICAgIGhlaWdodDogM3B4OyB9IH1cbiAgICAgIC5tZW51LWxlZnQtdG9wLWJ1cmdlci1idG46aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgICAgLm1lbnUtbGVmdC10b3AtYnVyZ2VyLWJ0biB7XG4gICAgICAgICAgd2lkdGg6IDQwcHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5tZW51LWxlZnQtdG9wLWJ1cmdlciB7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDsgfSB9XG4gIC5tZW51LWxlZnQtdG9wLW5hbWUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDtcbiAgICBtaW4taGVpZ2h0OiA1MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5tZW51LWxlZnQtdG9wLW5hbWUtdGV4dCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuMzRlbTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgICAgIC5tZW51LWxlZnQtdG9wLW5hbWUge1xuICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgLm1lbnUtbGVmdC1ib3R0b20ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5tZW51LWxlZnQtYm90dG9tIHN2ZyB7XG4gICAgICBmaWxsOiAjZmZmOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgLm1lbnUtbGVmdC1ib3R0b20ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4OyB9IH1cbiAgLm1lbnUtbGVmdCAuaW5mby1yaWdodCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDsgfVxuICAgIC5tZW51LWxlZnQgLmluZm8tcmlnaHQgLnRleHQtd2l0aC1sb2dvIHtcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGluaXRpYWw7IH1cbiAgICAgIC5tZW51LWxlZnQgLmluZm8tcmlnaHQgLnRleHQtd2l0aC1sb2dvIGgzIHtcbiAgICAgICAgY29sb3I6IGJsYWNrOyB9XG4gICAgICAubWVudS1sZWZ0IC5pbmZvLXJpZ2h0IC50ZXh0LXdpdGgtbG9nbyBzcGFuIHtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAgICAgLm1lbnUtbGVmdCAuaW5mby1yaWdodCAudGV4dC13aXRoLWxvZ286YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgLm1lbnUtbGVmdCB7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICBtaW4taGVpZ2h0OiAxMDB2aDsgfSB9XG4iLCJbY2xhc3NePVwiZmxleF9jb2xcIl0ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDAgMTBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIC8vIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICBAbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICAgIC8vIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG5cclxuICA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG4uZmxleCB7XHJcbiAgJl9jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDEzMDBweDtcclxuICAgIHBhZGRpbmc6IDAgMjVweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgei1pbmRleDogMjtcclxuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTYwMHB4KSB7XHJcbiAgICAgIG1heC13aWR0aDogMTAyNHB4O1xyXG4gICAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNTBweDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkge1xyXG4gICAgICBwYWRkaW5nOiAwIDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX3JvdyB7XHJcbiAgICBtYXJnaW46IDAgLTEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICYtYWxpZ24tY2VudGVyIHtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkge1xyXG4gICAgICBtYXJnaW46IDAgLTEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX2NvbCB7XHJcbiAgICAmLS0xLTEge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgIC5jZjdzZy1wb3B1cCB7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLS0xLTIge1xyXG4gICAgICB3aWR0aDogNTAlO1xyXG4gICAgfVxyXG5cclxuICAgICYtLTEtMyB7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDk5LjklIC8gMyk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tMi0zIHtcclxuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtICgxMDAlIC8gMykpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLTEtNCB7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA3NSUpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLTItNCB7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNSUpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLTMtNCB7XHJcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNSUpO1xyXG4gICAgfVxyXG5cclxuICAgICYtdGFiIHsgXHJcblxyXG4gICAgICAmLS0xLTEge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtLTEtMiB7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIHtcclxuICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLS0xLTMge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC8gMyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLS0yLTMge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gKDEwMCUgLyAzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYtLTQtNSB7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIHtcclxuICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMCUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtZGVzayB7XHJcbiAgICAgICYtLTEtMiB7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi0tMS0zIHtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLyAzKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gICAgICBcclxuXHJcbiAgICAgICYtLTEtNSB7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gODAlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYtLTEtNiB7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gKDEwMCUvNikqNSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLS0yLTUge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDYwJSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLS00LTUge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwJSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLS0yLTMge1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtICgxMDAlIC8gMykpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi0tMS00IHtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA3NSUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgJi0tMi00IHtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMjUlKTtcclxuXHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi0tMy00IHtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNSUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJib2R5IHtcclxuICBmb250OiAxNnB4LzEuMTcgXCJOdW5pdG8gU2Fuc1wiLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6ICMwMDA7XHJcblxyXG4gICYgKiB7XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgd2lkdGg6IDdweDtcclxuICAgIH1cclxuXHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDcsIDE2MCwgOTIsIDAuNSk7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICAgIHdpZHRoOiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLm1lbnUtb3BlbmVke1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB9XHJcbn1cclxuXHJcbmgze1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4ycyBlYXNlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4ycyBlYXNlO1xyXG4gIH1cclxuXHJcbiAgJjphY3RpdmUsXHJcbiAgJjpmb2N1cyxcclxuICAmOnZpc2l0ZWQge1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIDAuMyBlYXNlO1xyXG4gIH1cclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgYmFja2dyb3VuZDogbm9uZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4uaGVhZGVyLFxyXG4uZm9vdGVyIHtcclxuICBmbGV4LXNocmluazogMTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4ge1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICBiYWNrZ3JvdW5kOiByZ2IoMTU4LCAxNTYsIDE1OCk7XHJcbiAgb3BhY2l0eTogMTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgd2lkdGg6IDE3NXB4O1xyXG4gIHBhZGRpbmc6IDcuNXB4IDhweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBvdXRsaW5lOiBub25lO1xyXG5cclxuICAmW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuXHJcbiAgJlt0eXBlPVwidGV4dFwiXSB7XHJcbiAgICBtYXJnaW46IDEwcHggYXV0bztcclxuICAgIGhlaWdodDogMzVweDtcclxuICAgIC8vIG1heC13aWR0aDogNDIwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDBweDtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcblxyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6JHRhYmxldCkge1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmW3R5cGU9XCJlbWFpbFwiXSB7XHJcbiAgICBtYXJnaW46IDEwcHggYXV0bztcclxuICAgIGhlaWdodDogMzVweDsgICBcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDokdGFibGV0KSB7XHJcbiAgICAgIGhlaWdodDogNTBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICY6dmlzaXRlZCxcclxuICAmOmFjdGl2ZSxcclxuICAmOmhvdmVyLFxyXG4gICY6Zm9jdXMge1xyXG4gICAgYmFja2dyb3VuZDogJHdoaXRlO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmljb24ge1xyXG4gIHdpZHRoOiAyNXB4O1xyXG4gIGhlaWdodDogMjVweDtcclxufVxyXG5cclxuLm1pbmlfZGVzY3tcclxuICBtYXgtaGVpZ2h0OiA5MHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbn1cclxuXHJcbi50cmlwcGxlLWJ0bntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAudHJpcHBsZS1idG4tZmlyc3R7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjQjY1NDkwO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgdHJhbnNmb3JtOiBza2V3KDI1ZGVnKTtcclxuICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7XHJcblxyXG4gICAgICAmOmJlZm9yZXtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNCNjU0OTA7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyAgICAgIFxyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAtMTglO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogNjAlOyAgXHJcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KC0yNWRlZyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudHJpcHBsZS1idG4tc2Vjb25ke1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgYmFja2dyb3VuZDogI0UwNUQ2ODtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB3aWR0aDogMzAlO1xyXG4gICAgICB0cmFuc2Zvcm06IHNrZXcoMjVkZWcpO1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTJweDsgIFxyXG4gICAgICB0cmFuc2l0aW9uOiBtYXJnaW4tdG9wIDAuMnMgZWFzZTtcclxuICAgIH1cclxuXHJcbiAgICAudHJpcHBsZS1idG4tdGhpcmR7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGJhY2tncm91bmQ6ICM1MTg0QUY7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgd2lkdGg6IDMwJTtcclxuICAgICAgbWFyZ2luLWxlZnQ6IC0xcHg7XHJcbiAgICAgIHRyYW5zZm9ybTogc2tldygyNWRlZyk7IFxyXG4gICAgICB0cmFuc2l0aW9uOiBtYXJnaW4tdG9wIDAuMnMgZWFzZTtcclxuXHJcbiAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjNTE4NEFGO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgICAgICBcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgcmlnaHQ6IC0yNSU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiA2MCU7ICBcclxuICAgICAgICB0cmFuc2Zvcm06IHNrZXcoLTI1ZGVnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC50cmlwcGxlLWJ0bi10aXRsZXtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgYm90dG9tOiAwO1xyXG4gICAgICBtYXJnaW46IDAgYXV0bzsgICAgICBcclxuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7ICAgICBcclxuICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XHJcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgICAmLnRyaXBwbGUtYnRuLXRpdGxlLWFycm93e1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgIGNvbnRlbnQ6IHVybCgvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ltYWdlcy9WZWN0b3Iuc3ZnKTtcclxuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjQwNWVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi50cmlwcGxlLWJ0bi10aW55e1xyXG4gICAgICB3aWR0aDogNTBweDtcclxuICAgICAgaGVpZ2h0OiA2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi50cmlwcGxlLWJ0bi1zbWFsbHtcclxuICAgICAgd2lkdGg6IDEzMHB4O1xyXG4gICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgIFxyXG4gICAgICAudHJpcHBsZS1idG4tdGl0bGV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi50cmlwcGxlLWJ0bi1iaWdnZXJ7XHJcbiAgICAgIHdpZHRoOiAxMzVweDtcclxuICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICBcclxuICAgICAgLnRyaXBwbGUtYnRuLXRpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYudHJpcHBsZS1idG4tbWVkaXVte1xyXG4gICAgICB3aWR0aDogMTgwcHg7XHJcbiAgICAgIGhlaWdodDogNTVweDtcclxuICAgIH1cclxuXHJcbiAgICAmLnRyaXBwbGUtYnRuLWJpZ3tcclxuICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlcntcclxuXHJcbiAgICAgIC50cmlwcGxlLWJ0bi1maXJzdHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAtMiU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7XHJcbiAgICAgIH1cclxuXHJcblxyXG4gICAgICAudHJpcHBsZS1idG4tc2Vjb25ke1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDAlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAudHJpcHBsZS1idG4tdGhpcmR7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMiU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luIDAuMnMgZWFzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vL0xlZnQgc2lkZWJhclxyXG4ubGVmdC1zaWRleyBcclxuICB3aWR0aDogMTAwJTsgICAgICBcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAmLXRpdGxle1xyXG4gICAgXHJcbiAgICAubGVmdC1zaWRlLXRpdGxlLXdyYXBwZXJ7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogNDVweDtcclxuICAgICAgcGFkZGluZy10b3A6IDcwcHg7XHJcblxyXG4gICAgICAubGVmdC1zaWRlLXRpdGxlLXRhZ3tcclxuICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgICAgICAgXHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBmb250LXNpemU6IDM4cHg7ICAgICAgICAgIFxyXG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICAgICAgICBcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHdyaXRpbmctbW9kZTogdGI7ICAgIFxyXG4gICAgICAgICAgZm9udC1zaXplOiA0NXB4OyAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IFxyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogaW5pdGlhbDtcclxuICAgICAgICBwYWRkaW5nLXRvcDogaW5pdGlhbDtcclxuICAgICAgfVxyXG4gICAgfSAgICAgXHJcbiAgICBcclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgd2lkdGg6IDEwMHB4OyBcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtdGV4dHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTE4MGRlZyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogLTI4cHg7XHJcbiAgICB0b3A6IDIwMCU7XHJcblxyXG4gICAgc3BhbntcclxuICAgICAgbWF4LXdpZHRoOiA3NXB4O1xyXG4gICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxcHg7XHJcbiAgICAgIC13ZWJraXQtdGV4dC1zdHJva2UtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcbiAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgICAgICBcclxuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgZm9udC1zaXplOiA4MHB4O1xyXG4gICAgICB3cml0aW5nLW1vZGU6IHRiO1xyXG4gICAgfSAgIFxyXG4gICAgXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgIG1heC13aWR0aDogMTYuNiU7XHJcbiAgfVxyXG59ICBcclxuXHJcbi5sZWZ0LXNpZGUtc217XHJcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcclxuXHJcbiAgJi10aXRsZXtcclxuXHJcbiAgICAmLXdyYXBwZXJ7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgIC5sZWZ0LXNpZGUtc20tdGl0bGUtdGFne1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHghaW1wb3J0YW50O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAxLjM0ZW07XHJcbiAgICAgICAgY29sb3I6ICNGQkZCRkI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbCFpbXBvcnRhbnQ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcbiAgICAgICAgICBib3JkZXItd2lkdGg6IDJweCAycHggMHB4IDBweDtcclxuICAgICAgICAgIGhlaWdodDogMTJweDtcclxuICAgICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgcmlnaHQ6IDZweDtcclxuICAgICAgICAgIHRvcDogLTI1cHg7XHJcbiAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICBoZWlnaHQ6IDEyNXB4O1xyXG4gICAgICAgICAgd2lkdGg6IDEzcHg7XHJcbiAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiAwcHggMHB4IDJweCAycHg7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB0b3A6IC0yNXB4O1xyXG4gICAgICAgICAgcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubGluZXMtdGl0bGUtd3JhcHBlcntcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZy10b3A6IDc0cHg7XHJcblxyXG4gIC5saW5lcy10aXRsZXtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuXHJcbiAgICAmOmJlZm9yZXtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGJvcmRlcjogNHB4IHNvbGlkICMzNjM2MzY7XHJcbiAgICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICByaWdodDogLTM1cHg7XHJcbiAgICAgIGJvdHRvbTogLTI5cHg7XHJcbiAgICAgIHotaW5kZXg6IC0xO1xyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjphZnRlcntcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICB3aWR0aDogNDVweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDEycHg7XHJcbiAgICAgIHJpZ2h0OiAtNjVweDtcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICB3aWR0aDogYXV0bztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5saW5lLXB1cnBsZS1tb2J7XHJcbiAgICBcclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGluZS1jb3JuZXItbW9ie1xyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGluZS1ibHVlLW1vYntcclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgIHBhZGRpbmctdG9wOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLm1haW4tbGlua3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTtcclxuICBoZWlnaHQ6IDUwcHg7ICAgXHJcbiAgbWF4LXdpZHRoOiAzMDBweDtcclxuICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcblxyXG4gICY6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiB1cmwoL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9pbWFnZXMvYXJyb3ctcmlnaHQuc3ZnKTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUIxQjFCOyBcclxuICB9XHJcbn1cclxuXHJcbi5taWRkbGUtbGluZXtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDFweDtcclxuICBiYWNrZ3JvdW5kOiAjRURFREVEO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHJcbiAgJi1maXJzdHtcclxuICAgIGxlZnQ6IDE1JTtcclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICBsZWZ0OiAxNi42JTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtc2Vjb25ke1xyXG4gICAgbGVmdDogMzMuMiU7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi10aGlyZHtcclxuICAgIGxlZnQ6IDQ5LjklO1xyXG4gIH1cclxuXHJcbiAgJi1mb3VydGh7XHJcbiAgICBsZWZ0OiA2Ni42JTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLWZpZnRoe1xyXG4gICAgbGVmdDogODUlO1xyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIGxlZnQ6IDgzLjIlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm1pZGRsZS1saW5lLXNxdWFyZSB7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAtMXB4O1xyXG4gICAgcmlnaHQ6IC0xcHg7ICAgICAgXHJcbiAgfVxyXG59XHJcblxyXG4udGl0bGUtYmxvY2t7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICBoMntcclxuICAgIG1hcmdpbi1yaWdodDogLTMwcHg7XHJcbiAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGZvbnQtc2l6ZTogNDVweDtcclxuICB9XHJcblxyXG4gIC50aXRsZS1ibG9jay1saW5lc3tcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcblxyXG4gICAgLmxpbmUtcHVycGxle1xyXG4gICAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICBib3JkZXI6IDRweCBzb2xpZCAjQjY1NDkwO1xyXG4gICAgICBib3JkZXItd2lkdGg6IDRweCAwcHggMHB4IDRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5saW5lLWNvcm5lcntcclxuICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgd2lkdGg6IDI1cHg7XHJcbiAgICAgIGJvcmRlci13aWR0aDogNHB4IDRweCA0cHggMHB4O1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgdG9wOiAtMXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5saW5lLWJsdWV7XHJcbiAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgd2lkdGg6IDc1cHg7XHJcbiAgICAgIGJvcmRlcjogNHB4IHNvbGlkICM1MTg0QUY7XHJcbiAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCA0cHggNHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbml0aWFsO1xyXG4gICAgICBib3R0b206IDA7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLXJldmVyc2V7XHJcblxyXG4gICAgaDJ7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgbWFyZ2luLWxlZnQ6IC01MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC50aXRsZS1ibG9jay1saW5lc3tcclxuICBcclxuICAgICAgLmxpbmUtcHVycGxle1xyXG4gICAgICAgIGJvcmRlci13aWR0aDogNHB4IDRweCAwcHggMHB4O1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGxlZnQ6IGluaXRpYWw7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLmxpbmUtY29ybmVye1xyXG4gICAgICAgIGJvcmRlci13aWR0aDogNHB4IDBweCA0cHggNHB4O1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IGluaXRpYWw7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLmxpbmUtYmx1ZXtcclxuICAgICAgICBib3JkZXItd2lkdGg6IDBweCA0cHggNHB4IDBweDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubGluZXtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblxyXG4gICYtcHVycGxle1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiAjQjY1NDkwO1xyXG5cclxuICAgICYtbW9ie1xyXG4gICAgICB3aWR0aDogNHB4O1xyXG4gICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgIHRvcDogNTRweDtcclxuICAgICAgbGVmdDogMTIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLWNvcm5lcntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYm9yZGVyOiBzb2xpZCAjRTA1RDY4O1xyXG5cclxuICAgICYtbW9ie1xyXG4gICAgICB3aWR0aDogMjVweDtcclxuICAgICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgICBib3JkZXItd2lkdGg6IDBweCA0cHggNHB4IDBweDtcclxuICAgICAgYm90dG9tOiAtMjhweDtcclxuICAgICAgbGVmdDogOThweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtYmx1ZXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgYmFja2dyb3VuZDogIzUxODRBRjtcclxuXHJcbiAgICAmLW1vYntcclxuICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgICBib3R0b206IC0yOHB4O1xyXG4gICAgICBsZWZ0OiA1M3B4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnN3aXBlci1tYWluIHsgICAgIFxyXG4gIGhlaWdodDogNjYwcHg7ICAgXHJcbiAgcG9zaXRpb246IGluaXRpYWw7IFxyXG5cclxuICAuc3dpcGVyLXdyYXBwZXJ7XHJcbiAgICBjdXJzb3I6IGdyYWI7XHJcblxyXG4gICAgLnN3aXBlci1zbGlkZXtcclxuXHJcbiAgICAgIGltZ3tcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBtYXgtaGVpZ2h0OiA1MDBweDtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzNzVweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICB9XHJcbiAgICB9ICAgICAgICBcclxuICB9XHJcblxyXG4gIC5zd2lwZXItcGFnaW5hdGlvbntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcblxyXG4gICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHtcclxuICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICB3aWR0aDogMzBweDtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgY29sb3I6ICNFNEU0RTQ7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogI0U0RTRFNDtcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuXHJcbiAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZXtcclxuICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogIzAwMDtcclxuICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlO1xyXG4gICAgfVxyXG4gIH0gICAgXHJcblxyXG4gIC5zd2lwZXItYnV0dG9uLW5leHR7XHJcbiAgICBsZWZ0OiAtMTAwcHg7XHJcbiAgICB0b3A6IDQwJTtcclxuICAgIGhlaWdodDogNDVweDtcclxuICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udC1zaXplOiAzMnB4O1xyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgJjpiZWZvcmV7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICB3aWR0aDogNDVweDtcclxuICAgICAgYm9yZGVyOiAycHggc29saWQgI0JENUI5ODtcclxuICAgICAgYm9yZGVyLXdpZHRoOiAycHggMHB4IDBweCAycHg7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAtNnB4O1xyXG4gICAgICBsZWZ0OiAtNnB4O1xyXG4gICAgfVxyXG4gIH1cclxufSBcclxuXHJcbi50ZXh0LXdpdGgtbG9nb3tcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gIHRyYW5zZm9ybS1vcmlnaW46IDAlIC0xNDAlO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgaDN7XHJcbiAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMC4xOTVlbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICB9XHJcblxyXG4gIHNwYW57XHJcbiAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBjb2xvcjogIzU5NTk1OTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAwLjE5NWVtO1xyXG4gIH1cclxuXHJcbiAgJjpiZWZvcmV7XHJcbiAgICBjb250ZW50OiB1cmwoL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9pbWFnZXMvbG9nby1lLnN2Zyk7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogLTcwcHg7XHJcbiAgICB0b3A6IC03cHg7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XHJcbiAgfVxyXG59XHJcblxyXG4uZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgbWFyZ2luLXRvcDogNzBweDtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcblxyXG4gIC5mb290ZXItbWVudS1pdGVte1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzVweDtcclxuXHJcbiAgICAgIGF7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICBjb2xvcjogIzhGOEY4RjtcclxuICAgICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICB3aWR0aDogNzBweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgcmlnaHQ6IC01NXB4O1xyXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH0gICAgICBcclxuICAgICAgXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICB3aWR0aDogMzAlO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBpbml0aWFsO1xyXG4gICAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4udG9wLWNydW1ic3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIGZvbnQtc2l6ZTogMzVweDtcclxuICBjb2xvcjogIzE1MTUxNTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyAgICAgICAgICAgICBcclxuXHJcbiAgLmNydW1icy1pdGVte1xyXG4gICAgICBjb2xvcjogIzE1MTUxNTsgIFxyXG4gIH1cclxuXHJcbiAgLmNydW1icy1sYXN0e1xyXG4gICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICAgICAgIFxyXG5cclxuICAgICAgLmxpbmV7XHJcblxyXG4gICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDE0MHB4O1xyXG4gICAgICAgICAgICAgIHJpZ2h0OiAxMzFweDtcclxuICAgICAgICAgICAgICBib3R0b206IC0xMXB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtY29ybmVye1xyXG4gICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxNDBweDtcclxuICAgICAgICAgICAgICByaWdodDogLTlweDtcclxuICAgICAgICAgICAgICBib3R0b206IC0xMHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtYmx1ZXtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDNweDtcclxuICAgICAgICAgICAgICByaWdodDogLTEwcHg7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiAwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiL1wiO1xyXG4gICAgICAgIGNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJjpiZWZvcmV7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNzI3Mjc7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICB9XHJcbn1cclxuXHJcbi5kZXNpZ24tc2Vve1xyXG4gIG1hcmdpbi10b3A6IDEyMHB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgLmRlc2lnbi1pY29ue1xyXG4gICAgbWF4LXdpZHRoOiAxMDBweDtcclxuICAgIG1heC1oZWlnaHQ6IDE1MHB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAyMCU7XHJcbiAgICByaWdodDogMTAlO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgfVxyXG5cclxuICAgIC5saW5lcy10aXRsZS13cmFwcGVye1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHBhZGRpbmctdG9wOiA3NHB4O1xyXG4gICAgXHJcbiAgICAgICAgLmxpbmVzLXRpdGxle1xyXG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgIFxyXG4gICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBib3JkZXI6IDRweCBzb2xpZCAjRThFOEU4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgcmlnaHQ6IC0zNXB4O1xyXG4gICAgICAgICAgICBib3R0b206IC0yOXB4O1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiBub25lOyAgICAgICAgICAgIFxyXG4gICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgIC5saW5lLXB1cnBsZS1tb2J7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgLmxpbmUtY29ybmVyLW1vYntcclxuICAgICAgXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgIC5saW5lLWJsdWUtbW9ie1xyXG4gICAgICBcclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHBhZGRpbmctdG9wOiA3NHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIGxlZnQ6IC0xMDBweDtcclxuICAgICAgICAgIGJvdHRvbTogMTVweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHJpZ2h0OiAwcHg7XHJcbiAgICAgICAgICBib3R0b206IDE1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuZGVzaWduLXNlby1taWRkbGV7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwMHB4O1xyXG5cclxuICAgICAgICBoNHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICAgICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcblxyXG4gICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjRTA1RDY4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwe1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNnB4O1xyXG4gICAgICAgICAgY29sb3I6ICMyMzIyMjI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLy8gMS4gQmFzaWMgdmFyaWFibGVzXHJcblx0Ly8gMS4xIENvbG9yc1xyXG4kYmxhY2s6ICMwMDA7XHJcbiR3aGl0ZTogI2ZmZjtcclxuXHQvLyAxLjIgT3RoZXJcclxuXHJcbi8vIDIuIFdvcmsgdmFyaWFibGVzXHJcblx0Ly8gMi4xIENvbG9yc1xyXG4kbWFpbi1jb2xvcjogJGJsYWNrO1xyXG5cclxuXHQvLyAyLjIgVHlwb2dyYXBoeSAoZm9udHMgYW5kIHRleHQgdmFyaWFibGVzKVxyXG4kdGV4dC1jb2xvcjogJGJsYWNrO1xyXG4kZi1zaXplLWJhc2U6IDE0cHg7XHJcblxyXG5cdC8vIDIuMyBNZWRpYVxyXG4gICAgLy8gMi4zLjEgTW9iaWxlIGZpcnN0XHJcbiAgICBcclxuJGRlc2t0b3AtZnVsbDogMTYwMHB4O1xyXG4kZGVza3RvcDogMTAyNHB4O1xyXG4kdGFibGV0OiA3NjhweDtcclxuJHBob25lOiA2NDBweDtcclxuXHJcblx0XHQvLyAyLjMuMiBEZXNrdG9wIGZpcnN0XHJcbiRkZXNrdG9wLWRmOiAxMDIzcHg7XHJcbiR0YWJsZXQtZGY6IDc2N3B4O1xyXG4kcGhvbmUtZGY6IDYzOXB4O1xyXG5cclxuXHQvLyAyLjQgT3RoZXJcclxuJGItcmFkaXVzLWJhc2U6IDNweDtcclxuXHJcblx0Ly8gMi41IEZvcm1zXHJcbiRpbnB1dC1jb2xvcjogJHRleHQtY29sb3I7XHJcbiRpbnB1dC1ib3JkZXItY29sb3I6ICRibGFjaztcclxuJGlucHV0LWJvcmRlci1mb2N1czogJG1haW4tY29sb3I7XHJcblxyXG5cdC8vIDIuNiBOYXYgYW5kIGxpbmtzXHJcbiRsaW5rLW1haW4tY29sb3I6ICRtYWluLWNvbG9yO1xyXG4kbGluay1tYWluLWhvdmVyOiBkYXJrZW4oJGxpbmstbWFpbi1jb2xvciwgMjAlKTtcclxuJGxpbmstYWN0aXZlLWhvdmVyOiBkYXJrZW4oJGxpbmstbWFpbi1jb2xvciwgMjAlKTtcclxuXHJcbiRuYXYtY29sb3I6ICRtYWluLWNvbG9yO1xyXG4kbmF2LWhvdmVyOiBkYXJrZW4oJG5hdi1jb2xvciwgMjAlKTtcclxuXHJcblx0Ly8gMi43IEJ1dHRvbnNcclxuJGJ0bi1tYWluLWNvbG9yOiAkYmxhY2s7XHJcbiRidG4tbWFpbi1ib3JkZXI6ICRibGFjaztcclxuJGJ0bi1tYWluLWJnOiAkd2hpdGU7XHJcbiRidG4tbWFpbi1ob3ZlcjogZGFya2VuKCRidG4tbWFpbi1iZywgMjAlKTtcclxuIiwiLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xyXG4vLyAgICAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQm9sZC5lb3QnKTtcclxuLy8gICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8gQm9sZCcpLCBsb2NhbCgnR290aGFtUHJvLUJvbGQnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy8vd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1Cb2xkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy8vd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XHJcbi8vICAgICBmb250LXdlaWdodDogYm9sZDtcclxuLy8gICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuLy8gfVxyXG5cclxuLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xyXG4vLyAgICAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTGlnaHQuZW90Jyk7XHJcbi8vICAgICBzcmM6IGxvY2FsKCdHb3RoYW0gUHJvIExpZ2h0JyksIGxvY2FsKCdHb3RoYW1Qcm8tTGlnaHQnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUxpZ2h0LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1MaWdodC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUxpZ2h0LndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUxpZ2h0LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuLy8gICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbi8vICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbi8vIH1cclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvJztcclxuLy8gICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1CbGFjay5lb3QnKTtcclxuLy8gICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8gQmxhY2snKSwgbG9jYWwoJ0dvdGhhbVByby1CbGFjaycpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQmxhY2suZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJsYWNrLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQmxhY2sud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tQmxhY2sudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuLy8gICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuLy8gfVxyXG5cclxuLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xyXG4vLyAgICAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUl0YWxpYy5lb3QnKTtcclxuLy8gICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8gSXRhbGljJyksIGxvY2FsKCdHb3RoYW1Qcm8tSXRhbGljJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1JdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUl0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUl0YWxpYy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1JdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuLy8gICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuLy8gfVxyXG5cclxuLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8gTmFycm93JztcclxuLy8gICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByb05hcnJvdy1Cb2xkLmVvdCcpO1xyXG4vLyAgICAgc3JjOiBsb2NhbCgnR290aGFtIFBybyBOYXJyb3cgQm9sZCcpLCBsb2NhbCgnR290aGFtUHJvTmFycm93LUJvbGQnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvTmFycm93LUJvbGQuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvTmFycm93LUJvbGQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByb05hcnJvdy1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvTmFycm93LUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbi8vICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbi8vIH1cclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvJztcclxuLy8gICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1NZWRpdW0uZW90Jyk7XHJcbi8vICAgICBzcmM6IGxvY2FsKCdHb3RoYW0gUHJvIE1lZGl1bScpLCBsb2NhbCgnR290aGFtUHJvLU1lZGl1bScpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTWVkaXVtLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1NZWRpdW0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1NZWRpdW0ud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTWVkaXVtLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuLy8gICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbi8vICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbi8vIH1cclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvJztcclxuLy8gICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1Cb2xkSXRhbGljLmVvdCcpO1xyXG4vLyAgICAgc3JjOiBsb2NhbCgnR290aGFtIFBybyBCb2xkIEl0YWxpYycpLCBsb2NhbCgnR290aGFtUHJvLUJvbGRJdGFsaWMnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJvbGRJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJvbGRJdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1Cb2xkSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJvbGRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbi8vICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbi8vIH1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvJztcclxuICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby5lb3QnKTtcclxuICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8nKSwgbG9jYWwoJ0dvdGhhbVBybycpLFxyXG4gICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8ud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8udHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xyXG4vLyAgICAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLU1lZGl1bUl0YWxpYy5lb3QnKTtcclxuLy8gICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8gTWVkaXVtIEl0YWxpYycpLCBsb2NhbCgnR290aGFtUHJvLU1lZGl1bUl0YWxpYycpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTWVkaXVtSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1NZWRpdW1JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1NZWRpdW1JdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTWVkaXVtSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuLy8gICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbi8vICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbi8vIH1cclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvJztcclxuLy8gICAgIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1CbGFja0l0YWxpYy5lb3QnKTtcclxuLy8gICAgIHNyYzogbG9jYWwoJ0dvdGhhbSBQcm8gQmxhY2sgSXRhbGljJyksIGxvY2FsKCdHb3RoYW1Qcm8tQmxhY2tJdGFsaWMnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJsYWNrSXRhbGljLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByby1CbGFja0l0YWxpYy53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJsYWNrSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUJsYWNrSXRhbGljLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuLy8gICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbi8vICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbi8vIH1cclxuXHJcbi8vIEBmb250LWZhY2Uge1xyXG4vLyAgICAgZm9udC1mYW1pbHk6ICdHb3RoYW0gUHJvIE5hcnJvdyc7XHJcbi8vICAgICBzcmM6IHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm9OYXJyb3ctTWVkaXVtLmVvdCcpO1xyXG4vLyAgICAgc3JjOiBsb2NhbCgnR290aGFtIFBybyBOYXJyb3cgTWVkaXVtJyksIGxvY2FsKCdHb3RoYW1Qcm9OYXJyb3ctTWVkaXVtJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByb05hcnJvdy1NZWRpdW0uZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvTmFycm93LU1lZGl1bS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvTmFycm93LU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbi8vICAgICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ZvbnRzL0dvdGhhbVByb05hcnJvdy1NZWRpdW0udHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuLy8gICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuLy8gfVxyXG5cclxuLy8gQGZvbnQtZmFjZSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJ0dvdGhhbSBQcm8nO1xyXG4vLyAgICAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUxpZ2h0SXRhbGljLmVvdCcpO1xyXG4vLyAgICAgc3JjOiBsb2NhbCgnR290aGFtIFBybyBMaWdodCBJdGFsaWMnKSwgbG9jYWwoJ0dvdGhhbVByby1MaWdodEl0YWxpYycpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTGlnaHRJdGFsaWMuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcclxuLy8gICAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vZm9udHMvR290aGFtUHJvLUxpZ2h0SXRhbGljLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTGlnaHRJdGFsaWMud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4vLyAgICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9mb250cy9Hb3RoYW1Qcm8tTGlnaHRJdGFsaWMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuLy8gICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuLy8gfVxyXG5cclxuIiwiKixcclxuKjpiZWZvcmUsXHJcbio6YWZ0ZXIge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYWluLFxyXG5zZWN0aW9uLFxyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuZmlndXJlLFxyXG5maWdjYXB0aW9uLFxyXG5oZWFkZXIsXHJcbmZvb3RlcixcclxubmF2IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuaDEge1xyXG4gIG1hcmdpbjogMCAwIDAuNjdlbTtcclxufVxyXG5cclxuaDJ7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5wcmUsXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xyXG4gIGZvbnQtc2l6ZTogMWVtO1xyXG59XHJcblxyXG5hIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuc21hbGwge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgZm9udC1zaXplOiA3NSU7XHJcbiAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3ViIHtcclxuICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgdG9wOiAtMC41ZW07XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogYXV0bztcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBsaW5lLWhlaWdodDogMS4xNTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmJ1dHRvbixcclxuW3R5cGU9XCJidXR0b25cIl0sXHJcblt0eXBlPVwicmVzZXRcIl0sXHJcblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxufVxyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5idXR0b246LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG59XHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgY29sb3I6IGluaGVyaXQ7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxufVxyXG5cclxucHJvZ3Jlc3Mge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG5bdHlwZT1cImNoZWNrYm94XCJdLFxyXG5bdHlwZT1cInJhZGlvXCJdIHtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xyXG59XHJcblxyXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxufVxyXG5cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn0iLCIudG9wLXNpdGV7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICB3aWR0aDogMTAwJTsgIFxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB6LWluZGV4OiA5O1xyXG4gIHBhZGRpbmctYm90dG9tOiA3NXB4O1xyXG5cclxuICAmLW1pZGRsZXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgaGVpZ2h0OiA2MCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmctbGVmdDogMTAlO1xyXG4gICAgei1pbmRleDogMTE7XHJcblxyXG4gICAgJi10aXRsZXtcclxuICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICBmb250LXNpemU6IDM1cHg7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICBtYXgtd2lkdGg6IDY2MHB4O1xyXG5cclxuICAgICAgc3Ryb25ne1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNTBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtYm90dG9te1xyXG4gICAgICBkaXNwbGF5OiBmbGV4OyAgICAgXHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsgXHJcblxyXG4gICAgICBwe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgXHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlOyAgICAgICAgICAgXHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjNweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG5cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDQ1cHg7XHJcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgICAgYm9yZGVyLWxlZnQ6IHNvbGlkICNmZmYgM3B4O1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IGluaXRpYWw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubG9uZy1saW5le1xyXG4gICAgaGVpZ2h0OiAzcHg7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgei1pbmRleDogMTE7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDUlO1xyXG4gICAgbGVmdDogMTAlO1xyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgIHBvc2l0aW9uOiBpbml0aWFsO1xyXG4gICAgICB3aWR0aDogNDAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmOmJlZm9yZXtcclxuICAgIGNvbnRlbnQ6IG5vbmU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDM1JTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjgsIDI4LCAyOCwgMC41Nik7XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICY6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xyXG4gIH1cclxufVxyXG5cclxuLm1pZGRsZS13cmFwcGVye1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcblxyXG4gIC5taWRkbGUtcG9ydGZvbGlveyAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgLm1pZGRsZS1wb3J0Zm9saW8tbGVmdHsgICAgIFxyXG5cclxuICAgICAgJi10aXRsZXsgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXdyYXBwZXJ7IFxyXG5cclxuICAgICAgICAgIC5wb3J0Zm9saW8tbGVmdC10aXRsZS10YWd7XHJcbiAgXHJcbiAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiA0cHggc29saWQgcmdiYSgyMSwgMjEsIDIxLCAwLjA2KTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgcmlnaHQ6IC0zNXB4O1xyXG4gICAgICAgICAgICAgIGJvdHRvbTogLTI5cHg7XHJcbiAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IC0zNXB4O1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IC0yMHB4O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5saW5le1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblxyXG4gICAgICAgICAgICAmLXB1cnBsZXsgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyOHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgICAgICAgICByaWdodDogLTI4cHg7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDYzcHg7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLWNvcm5lcnsgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCA0cHggNHB4O1xyXG4gICAgICAgICAgICAgICAgdG9wOiAzMXB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMTVweDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtYmx1ZXtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNjVweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0zNHB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMTZweDsgIFxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gICAgICBcclxuICAgICAgICBcclxuICAgICAgICAucG9ydGZvbGlvLWxlZnQtdGl0bGUtcmVkX2xpbmV7ICBcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjRTA1RDY4O1xyXG4gICAgICAgICAgICB3aWR0aDogNDVweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0cHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAyOTVweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgIGxlZnQ6IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDRweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogaW5pdGlhbDtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMHB4OyAgXHJcbiAgICAgICAgICAgIG1hcmdpbjogMTQwcHggMCAxMDBweCAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnBvcnRmb2xpby1sZWZ0LXNjcm9sbHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogOXB4O1xyXG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuMzRlbTtcclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgcGFkZGluZzogMTYwcHggMCA4MHB4IDgwcHg7XHJcbiAgICAgIH1cclxuICAgIH0gIFxyXG5cclxuICAgICYtc2xpZGVye1xyXG4gICAgICBwYWRkaW5nOiA1MHB4IDAgMCAwO1xyXG4gICAgICB3aWR0aDogOTAlO1xyXG4gICAgICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgICAgICYtdG9we1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgbWFyZ2luOiA0MHB4IGF1dG8gMjBweDtcclxuXHJcbiAgICAgICAgJi1sZWZ0e1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgLnNsYXNoe1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweCAyMHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5jYXRlZ29yeXtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJHRhYmxldCkge1xyXG4gICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjQwNWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuICAgICAgICAudHJpcHBsZS1idG4tYmlne1xyXG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgYm90dG9tOiA0MHB4OyAgICAgIFxyXG5cclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgYm90dG9tOiBpbml0aWFsO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwJTtcclxuICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5zd2lwZXItY29udGFpbmVyLWRlc2lnbnsgXHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgIFxyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMCAwIDE1cHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmxpbmV7XHJcblxyXG4gICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDc1cHg7XHJcbiAgICAgICAgICAgIHRvcDogLTFweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICR0YWJsZXQpIHtcclxuICAgICAgICAgICAgICB3aWR0aDogMjYwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmLWNvcm5lcntcclxuICAgICAgICAgICAgd2lkdGg6IDc1cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTQwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogM3B4IDBweCAwcHggM3B4O1xyXG4gICAgICAgICAgICB0b3A6IDBweDtcclxuICAgICAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYtYmx1ZXtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6IDNweDtcclxuICAgICAgICAgICAgdG9wOiAxNDBweDtcclxuICAgICAgICAgICAgbGVmdDogMXB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN3aXBlci1tYWluIHsgICAgICAgICAgICBcclxuICAgICAgICAgIGhlaWdodDogNjYwcHg7ICAgXHJcbiAgICAgICAgICBwb3NpdGlvbjogaW5pdGlhbDsgXHJcblxyXG4gICAgICAgICAgLnN3aXBlci13cmFwcGVye1xyXG4gICAgICAgICAgICBjdXJzb3I6IGdyYWI7XHJcblxyXG4gICAgICAgICAgICAuc3dpcGVyLXNsaWRle1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogNTAwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM3NXB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgLnNsaWRlLXRpdGxle1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzNTVweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBibGFjazsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDsgICAgIFxyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4OyAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDsgIFxyXG4gICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHdvcmQtc3BhY2luZzogOTk5cHg7IFxyXG4gICAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCBibGFjazsgICBcclxuICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ICAgICAgICBcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb257XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcblxyXG4gICAgICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0e1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcclxuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjNzIGVhc2UsIGNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICBjb2xvcjogI0U0RTRFNDtcclxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICNFNEU0RTQ7XHJcbiAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmV7XHJcbiAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogaW5pdGlhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSAgICBcclxuXHJcbiAgICAgICAgICAuc3dpcGVyLWJ1dHRvbi1uZXh0e1xyXG4gICAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICB0b3A6IGluaXRpYWw7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDVweDtcclxuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7ICAgICAgIFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuXHJcbiAgICAgICAgICAgIC5pY29ue1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgICB3aWR0aDogMTVweDtcclxuICAgICAgICAgICAgICBmaWxsOiB3aGl0ZTtcclxuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgI0JENUI5ODtcclxuICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDJweCAwcHggMHB4IDJweDtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgdG9wOiAtNnB4O1xyXG4gICAgICAgICAgICAgIGxlZnQ6IC02cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgbGVmdDogLTEwMHB4O1xyXG4gICAgICAgICAgICAgIHJpZ2h0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgIHRvcDogNDAlO1xyXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLnN3aXBlci1idXR0b24tcHJldntcclxuICAgICAgICAgICAgcmlnaHQ6IGluaXRpYWw7XHJcbiAgICAgICAgICAgIGxlZnQ6IDEwcHg7XHJcbiAgICAgICAgICAgIHRvcDogaW5pdGlhbDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwOyAgICAgICBcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAuaWNvbntcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgICAgZmlsbDogd2hpdGU7XHJcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xMDBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG5cclxuICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgIHRvcDogLTc5cHg7XHJcbiAgICAgICAgICBib3R0b206IC01MHB4O1xyXG4gICAgICAgICAgd2lkdGg6IDE1JTtcclxuICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IC05N3B4IDBweCA2MHB4IDNweCB3aGl0ZTtcclxuICAgICAgICAgIHotaW5kZXg6IDI7XHJcblxyXG4gICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiA3NDBweCkge1xyXG4gICAgICAgIHdpZHRoOiA1NSU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgcGFkZGluZzogNTBweCAwIDAgNzBweDtcclxuICAgICAgICBtYXJnaW46IGluaXRpYWw7XHJcbiAgICAgICAgd2lkdGg6IDgzLjQlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuaW5mb3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4O1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgIC5taWRkbGUtbGluZXtcclxuICAgICAgei1pbmRleDogMTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM5MzkzOTtcclxuICAgICAgdG9wOiAwO1xyXG5cclxuICAgICAgJi1maXJzdHtcclxuXHJcbiAgICAgICAgLm1pZGRsZS1saW5lLXNxdWFyZXtcclxuICAgICAgICAgIHRvcDogMCU7XHJcblxyXG4gICAgICAgICAgJi1tb2J7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB0b3A6IDgwJTtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfSAgICAgICAgICBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgJi1zZWNvbmR7XHJcblxyXG4gICAgICAgIC5taWRkbGUtbGluZS1zcXVhcmV7XHJcbiAgICAgICAgICB0b3A6IDc1JTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgJi10aGlyZHtcclxuICAgICAgICBcclxuICAgICAgICAubWlkZGxlLWxpbmUtc3F1YXJleyAgICAgICAgXHJcbiAgICAgICAgICB0b3A6IDk1JTtcclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICB0b3A6LTIlIDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgJi1mb3VydGh7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLm1pZGRsZS1saW5lLXNxdWFyZXtcclxuICAgICAgICAgdG9wOiA5OCU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgXHJcbiAgICAgICYtZmlmdGh7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLm1pZGRsZS1saW5lLXNxdWFyZXtcclxuICAgICAgICAgIHRvcDogNSU7XHJcblxyXG4gICAgICAgICAgJi1tb2J7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB0b3A6IDcwJTtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfSAgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAubWlkZGxlLWxpbmUtc3F1YXJle1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgIH1cclxuICAgIH0gIFxyXG5cclxuICAgIC5sZWZ0LXNpZGUtc217XHJcbiAgICAgIGhlaWdodDogMCU7XHJcblxyXG4gICAgICAubGVmdC1zaWRlLXNtLXRpdGxle1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgIC5sZWZ0LXNpZGUtc20tdGl0bGUtdGFne1xyXG5cclxuICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpO1xyXG4gICAgICAgICAgICBib3JkZXItd2lkdGg6IDJweCAycHggMHB4IDBweDtcclxuICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xNSk7XHJcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4IDBweCAycHggMnB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAubGVmdC1zaWRlLXNtLXRleHR7ICAgICAgIFxyXG5cclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS13aWR0aDogMXB4O1xyXG4gICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHJpZ2h0OiAxNSU7XHJcbiAgICAgICAgICB0b3A6IDIwMHB4OyAgIFxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaW5mby1taWRkbGV7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHotaW5kZXg6IDI7XHJcblxyXG4gICAgICAmLXRvcHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwJTtcclxuXHJcbiAgICAgICAgJi10aXRsZXsgICAgICAgICAgXHJcbiAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAmOmJlZm9yZXtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgY29udGVudDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL2xvZ28tZS5zdmcpO1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgICB3aWR0aDogNTVweDtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDU1cHg7IFxyXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICBsZWZ0OiAtODBweDtcclxuICAgICAgICAgICAgICB0b3A6IC0zcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmOmFmdGVye1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogNXB4O1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgcmlnaHQ6IDU1cHg7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA0NXB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIHBhZGRpbmctbGVmdDogMjMwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLW1haW57XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBwYWRkaW5nOiAxNDBweCA1MHB4IDA7XHJcblxyXG4gICAgICAgICYtbnVtYmVyc3tcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAubWFpbi1udW1iZXJzLWJsb2NreyAgICBcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgICBcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgICAgICBcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuXHJcbiAgICAgICAgICAgIC5udW1iZXJ7XHJcbiAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgICAgY29sb3I6ICNGQkZCRkI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC50cmlwcGxlLWJ0bntcclxuICAgICAgICAgICAgICBtYXJnaW46IDIwcHggMCAyNXB4IDVweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi1jYXRlZ29yeXtcclxuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjRkJGQkZCOyAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi1ib3R0b20tdGV4dHtcclxuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4yODVlbTtcclxuICAgICAgICAgICAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNzVweDtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCl7XHJcbiAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzMyU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLXJhdGluZ3sgICAgICBcclxuXHJcbiAgICAgICAgICAmLXRpdGxle1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJi1zdGFyc3tcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcblxyXG4gICAgICAgICAgICAuc3Rhci1pY29ue1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMHB4IDVweDtcclxuXHJcbiAgICAgICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgICAgICBmaWxsOiAjMzgzODM4O1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgJi1hY3RpdmV7XHJcblxyXG4gICAgICAgICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgICAgICAgIGZpbGw6ICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJi10ZXh0e1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBpbml0aWFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLm1haW4tbGlua3tcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNzVweDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMzMlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDkwcHg7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxNDBweCAwIDkwcHggMTcwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIG1heC13aWR0aDogNjYuNiU7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDE3MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmluZm8tcmlnaHR7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgIG1heC13aWR0aDogMTYuOCU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogNjBweDtcclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6YWZ0ZXJ7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNCwgMjQsIDI0LCAwLjkpOztcclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBwYWRkaW5nLXRvcDogMHB4O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgICAgaGVpZ2h0OiA4MDBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZXJ2aWNle1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICYtdG9we1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAzMDBweDtcclxuXHJcbiAgICAgICYtbGVmdHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXgtd2lkdGg6IDE2LjYlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAmLW1pZGRsZXtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBtYXgtd2lkdGg6IDY2LjYlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlOyAgICBcclxuXHJcbiAgICAgICAgJi1sZWZ0e1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJi1saW5le1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgaGVpZ2h0OiA1cHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjRTA1RDY4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1yaWdodHtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgICAgXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIC5saW5lcy10aXRsZXtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6IDQ0MHB4KSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiA2NDBweCkge1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDQ1cHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLnRpdGxlLWJsb2NrLWxpbmVze1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLXJpZ2h0e1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1heC13aWR0aDogMTYuOCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLW1pZGRsZXtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYm9yZGVyLXRvcDogc29saWQgMXB4ICNFREVERUQ7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAjRURFREVEO1xyXG5cclxuICAgICAgLnNlcnZpY2UtbWlkZGxlLWxlZnR7ICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAuc2VydmljZS1taWRkbGUtbGVmdC10ZXh0e1xyXG4gICAgICAgICAgbGVmdDogLTQwcHg7XHJcbiAgICAgICAgICByaWdodDogaW5pdGlhbDtcclxuICAgICAgICAgIHRvcDogNTBweDtcclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IGluaXRpYWw7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc2VydmljZS1taWRkbGUtbGVmdC1zaWdue1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIGJvdHRvbTogNTVweDtcclxuICAgICAgICAgIHJpZ2h0OiAtMTVweDtcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICBmb250LXNpemU6IDEyLjVweDtcclxuICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcclxuICAgICAgICAgIGNvbG9yOiAjOUQ5RDlEO1xyXG4gICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIG1heC13aWR0aDogMTUlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgICAuc2VydmljZS1taWRkbGUtbWFpbnsgICAgICAgICAgXHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4OyAgICAgICAgICBcclxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICAgICAgICAgICAgIFxyXG4gICAgICAgICAgbWF4LXdpZHRoOiA3MCU7XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTsgIFxyXG4gIFxyXG4gICAgICAgICAgLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2t7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDM1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7ICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNFREVERUQ7ICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgLnNlcnZpY2UtbWlkZGxlLW1haW4tYmxvY2stYmd7XHJcbiAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG5cclxuICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICAgLm1pZGRsZS1tYWluLWJsb2NrLW51bWJlcntcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICAgICAgICBjb2xvcjogIzEzMTMxMztcclxuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xyXG4gIFxyXG4gICAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMTMxMzEzO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4OyAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAgIC5taWRkbGUtbWFpbi1ibG9jay10aXRsZXtcclxuICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzVweDtcclxuICAgICAgICAgICAgICBjb2xvcjogIzEzMTMxMztcclxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDYwcHg7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAgIC5taWRkbGUtbWFpbi1ibG9jay10ZXh0e1xyXG4gICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDY1ZW07XHJcbiAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XHJcbiAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsOyAgICAgIFxyXG4gICAgICAgICAgICAgIGNvbG9yOiBibGFjazsgXHJcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xyXG4gIFxyXG4gICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDY1JTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgI2ZmZiAxMDAlKVxyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDEwNXB4OyAgXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IFxyXG4gIFxyXG4gICAgICAgICAgICAubWlkZGxlLW1haW4tYmxvY2stYm90dG9te1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgXHJcbiAgICAgICAgICAgICAgLnRyaXBwbGUtYnRue1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIFxyXG4gICAgICAgICAgICAgICAgLnRyaXBwbGUtYnRuLXRoaXJke1xyXG4gIFxyXG4gICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMjUlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpob3ZlcnsgICBcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAuc2VydmljZS1taWRkbGUtbWFpbi1ibG9jay1iZ3tcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIC5taWRkbGUtbWFpbi1ibG9jay1udW1iZXJ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XHJcbiAgXHJcbiAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICAgICAubWlkZGxlLW1haW4tYmxvY2stdGl0bGV7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgICAgIC5taWRkbGUtbWFpbi1ibG9jay10ZXh0e1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xyXG4gIFxyXG4gICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgXHJcbiAgICAgICAgICAgICAgLm1pZGRsZS1tYWluLWJsb2NrLWJvdHRvbXtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgXHJcbiAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgY29udGVudDogbm9uZTsgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5zZXJ2aWNlLWJ1dHRvbi1uZXh0e1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICByaWdodDogLTc1cHg7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMjVweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgfSAgICAgIFxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDY2LjYlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gIFxyXG5cclxuICAgICAgICAubWlkZGxlLXNlcnZpY2UtbGVmdHtcclxuICAgICAgICAgIG1heC13aWR0aDogMTUlOyBcclxuICAgICAgICAgIHdpZHRoOiAxMDAlOyBcclxuICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDE2LjYlOyBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDQ1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWJvdHRvbXtcclxuICAgICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbiAgICAgIG1heC13aWR0aDogMTUlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgIC5zZXJ2aWNlLWJvdHRvbS1saW5re1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAgICAgbWF4LWhlaWdodDogNjBweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDYwcHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcblxyXG4gICAgICAgIHN2Z3tcclxuICAgICAgICAgIGZpbGw6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICAgICAgICBtYXgtaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgIG1heC13aWR0aDogMTAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIG1heC13aWR0aDogMTYuNiU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5uZXdze1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogODAwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgLmxlZnQtc2lkZXsgIFxyXG4gICAgICBcclxuICAgICAgLmxlZnQtc2lkZS10aXRsZXtcclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogMzIwcHgpIGFuZCAobWF4LXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6IDMyMHB4KSBhbmQgKG1heC13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDE1JTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubGVmdC1zaWRlLXRpdGxlLXRhZ3tcclxuICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgfVxyXG5cclxuICAgICYtbWlkZGxle1xyXG4gICAgICBtYXgtd2lkdGg6IDcwJTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICYtdG9we1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA4MHB4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcblxyXG4gICAgICAgIC50aXRsZS1ibG9jay1yZXZlcnNle1xyXG5cclxuICAgICAgICAgIC50aXRsZS1ibG9jay1saW5lc3tcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBoMntcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgbGVmdDogLTkwcHg7ICAgXHJcbiAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICBtYXJnaW46IGF1dG87ICAgICAgICAgICBcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDM2LCAzNiwgMzYsIDAuMTQpO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogNHB4OyAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5uZXdzLW1pZGRsZS10b3AtbGlua3tcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7ICAgICAgICAgIFxyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjQwNWVtO1xyXG5cclxuICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IHVybCgvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ltYWdlcy9sb25nLWFycm93LXJpZ2h0LnN2Zyk7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMzBweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLm5ld3MtbWlkZGxlLXNsaWRlcntcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICAgIFxyXG4gICAgICAgIG1hcmdpbi10b3A6IDUwUFg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLnN3aXBlci1zbGlkZXtcclxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMjY1cHg7XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDI4MHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5zbGlkZS1kYXRle1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMzBweCAwO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5zbGlkZS10aXRsZXtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDYwJTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAudHJpcHBsZS1idG57XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xMDBweDtcclxuXHJcbiAgICAgICAgICAgIC50cmlwcGxlLWJ0bi10aXRsZXtcclxuICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogaW5pdGlhbDtcclxuICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgvd3AtY29udGVudC90aGVtZXMvaW50ZXJpY2NvL2ltYWdlcy9WZWN0b3Iuc3ZnKTtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7ICBcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODsgICAgICBcclxuICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgcmlnaHQ6IC03MHB4OyAgICAgIFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb257XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICBib3R0b206IDcwcHg7ICAgICAgICAgXHJcblxyXG4gICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBpbml0aWFsO1xyXG4gICAgICAgICAgICBsZWZ0OiAxMDBweDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItYnV0dG9uLW5leHR7XHJcbiAgICAgICAgICByaWdodDogLTI1cHg7XHJcbiAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgICAgXHJcblxyXG4gICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQzcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNrZXcoMTVkZWcpO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogLTEwMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogbGVmdCAwLjNzIGVhc2U7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5pY29ue1xyXG4gICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICBsZWZ0OiAtMTVweDtcclxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnN3aXBlci1idXR0b24tcHJldntcclxuICAgICAgICAgIGxlZnQ6IC0yNXB4O1xyXG4gICAgICAgICAgdG9wOiA0MCU7XHJcbiAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgICB3aWR0aDogNDVweDtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDNweDtcclxuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2tldygxNWRlZyk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAtMTAwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMDVENjg7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgICAgZmlsbDogd2hpdGU7XHJcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogZmlsbCAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgIGxlZnQ6IC0xNXB4O1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGxlZnQgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgY29udGVudDogbm9uZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICNmZmYsIHRyYW5zcGFyZW50KTtcclxuICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgIHotaW5kZXg6IDI7XHJcblxyXG4gICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMDBweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA2Ni42JTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtcmlnaHR7XHJcbiAgICAgIG1heC13aWR0aDogMTUlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgcGFkZGluZy10b3A6IDE1MHB4O1xyXG5cclxuICAgICAgJi1sb2dve1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA2MHB4OyAgICAgICAgXHJcblxyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgei1pbmRleDogMTtcclxuXHJcbiAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNCRDVCOTg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiA0NXB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNEMkQyRDI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiA0NXB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9ICAgXHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDE2LjclO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLnNsaWRlci1zY3JvbGxiYXJ7XHJcbiAgYm90dG9tOiAxMDBweDtcclxufSIsIi5wYWdlLXRlbXBsYXRlLWRlc2lnbntcclxuICAgIFxyXG4gICAgLmhlYWRlcntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC5kZXNpZ24td3JhcHBlcntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTUwcHg7XHJcblxyXG4gICAgICAgIC5tZW51LWxlZnR7XHJcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubWlkZGxlLWxpbmV7XHJcbiAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kZXNpZ24tY29udGFpbmVye1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEzMDBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDEwMHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XHJcblxyXG4gICAgICAgICAgICAuZGVzaWduLXRhYnMgPiBpbnB1dCxcclxuICAgICAgICAgICAgLmRlc2lnbi10YWJzIC50YWJzLWNvbnRlbnQtY29udGFpbmVyID4gLnRhYnMtYmxvY2sge1xyXG4gICAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgI2Rlc2lnbi10YWIxOmNoZWNrZWQgfiBzZWN0aW9uIC5ibG9jay10YWIxLFxyXG4gICAgICAgICAgICAjZGVzaWduLXRhYjI6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjIsXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiMzpjaGVja2VkIH4gc2VjdGlvbiAuYmxvY2stdGFiMyxcclxuICAgICAgICAgICAgI2Rlc2lnbi10YWI0OmNoZWNrZWQgfiBzZWN0aW9uIC5ibG9jay10YWI0LFxyXG4gICAgICAgICAgICAjZGVzaWduLXRhYjU6Y2hlY2tlZCB+IHNlY3Rpb24gLmJsb2NrLXRhYjUge1xyXG4gICAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiMTpjaGVja2VkIH4gdWwgLnRhYjEsXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiMjpjaGVja2VkIH4gdWwgLnRhYjIsXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiMzpjaGVja2VkIH4gdWwgLnRhYjMsXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiNDpjaGVja2VkIH4gdWwgLnRhYjQsXHJcbiAgICAgICAgICAgICNkZXNpZ24tdGFiNTpjaGVja2VkIH4gdWwgLnRhYjUge1xyXG5cclxuICAgICAgICAgICAgICBsYWJlbHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAjRTA1RDY4O1xyXG4gICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBib3JkZXItdG9wIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9ICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRlc2lnbi10YWJze1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwMHB4O1xyXG5cclxuICAgICAgICAgICAgICAuZGVzaWduLXRhYnMtbGFiZWxze1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNFMUUxRTE7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA3NXB4O1xyXG5cclxuICAgICAgICAgICAgICAgIGxpe1xyXG4gICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgbGFiZWx7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTsgXHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBzb2xpZCB0cmFuc3BhcmVudDsgXHJcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLXRvcCAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigjRTA1RDY4LCAyMCUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAudGFicy1jb250ZW50LWNvbnRhaW5lcntcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgIC5saW5le1xyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICAgICAmLXB1cnBsZXtcclxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogNTFweDtcclxuICAgICAgICAgICAgICAgICAgICAgIHRvcDogLTI1cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICYtY29ybmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDc1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAzcHggMHB4IDBweCAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICB0b3A6IC0yNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTI0cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgJi1ibHVle1xyXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICB0b3A6IDExNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTIycHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuZGVzaWduLWljb257XHJcbiAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDI4NXB4O1xyXG4gICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTEwMHB4O1xyXG4gICAgICAgICAgICAgICAgICByaWdodDogLTc1cHg7XHJcbiAgICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC50YWJzLWJsb2Nre1xyXG4gICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuXHJcbiAgICAgICAgICAgICAgICAgIC50YWJzLWJsb2NrLWl0ZW17XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAzMiU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogNDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogNDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDYwcHggNDBweCAzMHB4OyAgIFxyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7ICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaDJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsgXHJcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBtYXJnaW4tYm90dG9tIDAuNXMgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwOyAgICBcclxuICAgICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDYwcHg7ICBcclxuICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjVzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjsgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgaDJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi1ib3R0b20gMC41cyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgIHB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNjBweDsgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOyAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjVzIGVhc2U7ICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgcmdiYSgwLDAsMCwwLjQpOyAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuZXJyb3I0MDR7XHJcblxyXG4gICAgLmhlYWRlcntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC5lcnJvci13cmFwcGVye1xyXG4gICAgICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwMHB4IDA7XHJcblxyXG4gICAgICAgIC5taWRkbGUtbGluZXtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZXJyb3ItaWNvbntcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgbWF4LWhlaWdodDogMjg1cHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAxMDBweDtcclxuICAgICAgICAgICAgbGVmdDogLTEwMHB4O1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuXHJcbiAgICAgICAgICAgICYtc2Vje1xyXG4gICAgICAgICAgICAgICAgdG9wOiAxMDBweDtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTAwcHg7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZXJyb3ItY29udGFpbmVye1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTIwMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICAgICAgICAgLmVycm9yLXJpZ2h0LXRleHR7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7ICAgICAgICBcclxuICAgICAgICAgICAgICAgIHRvcDogLTE0MHB4O1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDUwcHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgc3BhbnsgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjU1KTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA5MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIC13ZWJraXQtd3JpdGluZy1tb2RlOiB0YjtcclxuICAgICAgICAgICAgICAgICAgICAtbXMtd3JpdGluZy1tb2RlOiB0YjtcclxuICAgICAgICAgICAgICAgICAgICB3cml0aW5nLW1vZGU6IHRiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZXJyb3ItdGl0bGV7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzVweDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgICAgIC5saW5le1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmLXB1cnBsZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTExcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmLWNvcm5lcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDNweCAzcHggMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC05cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmLWJsdWV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IDBweDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNzI3O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmVycm9yLW1pZGRsZXtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgLmVycm9yLW51bXsgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjkwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5lcnJvci1ib3R0b217XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cclxuICAgICAgICAgICAgICAgIC5lcnJvci1ib3R0b20tdGl0bGV7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLmVycm9yLXRpdGxle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMxNTE1MTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjMTUxNTE1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDBweCAycHggMnB4IDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTI0cHg7ICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgIzE1MTUxNTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMnB4IDBweCAwcHggMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAyNnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0LW1lbnV7XHJcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAuZm9vdGVyLW1lbnUtaXRlbXtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGN0Y3Rjc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucGFnZS10ZW1wbGF0ZS1jb250YWN0c3tcclxuXHJcbiAgICAuaGVhZGVye1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvbnRhY3RzLXdyYXBwZXJ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcGFkZGluZzogMCAxNTBweDtcclxuXHJcbiAgICAgICAgLm1lbnUtbGVmdHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgLm1lbnUtbGVmdC1ib3R0b217XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuaW5mby1yaWdodHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgLmNvbnRhY3RzLWNvbnRhaW5lcntcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMzAwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNTBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgLnRvcC1jcnVtYnN7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNDBweDtcclxuXHJcbiAgICAgICAgICAgICAgICAuY3J1bWJzLWxhc3R7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5saW5le1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiA0MXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMTFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWNvcm5lcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtOXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWJsdWV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5jb250YWN0cy1taWRkbGV7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgLmNvbnRhY3RzLXRpdGxle1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMDBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmLWxlZnR7XHJcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1NSU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5mb290ZXItYm90dG9tLXJpZ2h0e1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW17ICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDcwcHg7ICAgICAgICAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZm9vdGVyLXJpZ2h0LWluZm8taXRlbS1wbGFjZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzM3MzczNztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLmNvbnRhY3RzLW1hcC1ibG9ja3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaW1ne1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtNzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IC01M3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJi1mb3Jte1xyXG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMzUlO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5mb290ZXJ7XHJcblxyXG4gICAgICAgIC5mb290ZXItdG9we1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmZvb3Rlci1ib3R0b217XHJcblxyXG4gICAgICAgICAgICAuZm9vdGVyLWNvbnRhaW5lcntcclxuXHJcbiAgICAgICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1sZWZ0e1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5mb290ZXItYm90dG9tLWxlZnQtdGl0bGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmZvb3Rlci1tZW51LWl0ZW17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzYpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAuZm9vdGVyLXNvY2lhbHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IDE7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuZm9vdGVyLWJvdHRvbS1yaWdodHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuZm9vdGVyLWFuY2hvcntcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucGFnZS10ZW1wbGF0ZS1ibG9ne1xyXG5cclxuICAgIC5oZWFkZXJ7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAuYmxvZy13cmFwcGVye1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTUwcHg7XHJcblxyXG4gICAgICAgIC5tZW51LWxlZnR7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5ibG9nLWNvbnRhaW5lcntcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMzAwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNTBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgLnRvcC1jcnVtYnN7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNDBweDtcclxuXHJcbiAgICAgICAgICAgICAgICAuY3J1bWJzLWxhc3R7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5saW5le1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiA0MXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMTFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWNvcm5lcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtOXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWJsdWV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0xMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5ibG9nLXNsaWRlcntcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgICAgIC5kZXNpZ24taWNvbntcclxuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IDQ3MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMjVweDtcclxuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5zd2lwZXItY29udGFpbmVye1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBpbml0aWFsO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5ibG9nLWl0ZW17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggMjBweCA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0OCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmxpbmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDYwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC0yMHB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYtY29ybmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDc1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAzcHggMHB4IDBweCAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC0xOXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJi1ibHVle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDEyMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTEzcHg7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICYtdGl0bGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaDN7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzJCMkIyQjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0cHg7ICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNnB4OyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmLWltZ3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI4MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltZ3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7ICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7ICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICYtdGV4dHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjlweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDMwcHggMCA0NXB4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDkwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDY1JTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSwgI2ZmZiAxMDAlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJi1ib3R0b217XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bntcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bi10aXRsZXsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL3dwLWNvbnRlbnQvdGhlbWVzL2ludGVyaWNjby9pbWFnZXMvVmVjdG9yLnN2Zyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0UwNUQ2ODtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtNzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmJsb2ctaXRlbS1ib3R0b20tZGF0ZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMzVweCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4zcyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmxpbmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRyaXBwbGUtYnRuLWZpcnN0e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAtMiU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudHJpcHBsZS1idG4tc2Vjb25ke1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudHJpcHBsZS1idG4tdGhpcmR7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBtYXJnaW4gMC4ycyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb257XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogLTUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogODBweDtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXR7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjRTRFNEU0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogI0U0RTRFNDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC4zcyBlYXNlLCBjb2xvciAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICB9ICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLnN3aXBlci1idXR0b24tbmV4dHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC01MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDVweDsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuaWNvbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbDogYmxhY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0NXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNCRDVCOTg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAycHggMHB4IDBweCAycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogLTZweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtNnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDMwcHggLTNweCByZ2JhKDAsIDAsIDAsIDAuNDkpOyAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pY29ue1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgIC5zd2lwZXItYnV0dG9uLXByZXZ7ICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAyNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAtNTBweDsgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBpbml0aWFsOyAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0NXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDVweDsgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5pY29ue1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBibGFjaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDMwcHggLTNweCByZ2JhKDAsIDAsIDAsIDAuNDkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pY29ue1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGZpbGwgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAuY29uc3VsdGF0aW9ue1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA4MTBweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAmLXRleHR7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNDBweCAwIDQwcHggNTBweDtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBoM3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMjMyMjIyO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyMzIyMjI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bntcclxuICAgICAgICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDcwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bi10aXRsZXsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL1ZlY3Rvci5zdmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtNzBweDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTA1RDY4O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLnRyaXBwbGUtYnRuLWZpcnN0e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAtMiU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG1hcmdpbi10b3AgMC4ycyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAudHJpcHBsZS1idG4tc2Vjb25ke1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luLXRvcCAwLjJzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAudHJpcHBsZS1idG4tdGhpcmR7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBtYXJnaW4gMC4ycyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmRlc2lnbi1zZW97XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA3MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLnN3aXBlci1jb250YWluZXItbXVsdGlyb3ctY29sdW1uID4gLnN3aXBlci13cmFwcGVye1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdyFpbXBvcnRhbnQ7XHJcbn0iLCIuYmxvZy10ZW1wbGF0ZS1kZWZhdWx0LnNpbmdsZS1ibG9neyBcclxuXHJcbiAgICAuaGVhZGVye1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLnRvcC1zaXRlLXdpdGgtY3J1bWJze1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyAgICAgICAgXHJcblxyXG4gICAgICAgIC50b3AtY3J1bWJze1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTE7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA3MHB4O1xyXG5cclxuICAgICAgICAgICAgLmNydW1icy1pdGVteyAgICBcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCIvXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLmNydW1icy1sYXN0e1xyXG5cclxuICAgICAgICAgICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAudG9wLXNpdGUtbWlkZGxle1xyXG5cclxuICAgICAgICAgICAgLnRvcC1zaXRlLW1pZGRsZS10ZXh0e1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC50b3Atc2l0ZS1taWRkbGUtYm90dG9te1xyXG5cclxuICAgICAgICAgICAgLmRhdGV7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnRleHQtd2l0aC1sb2dve1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNjBweDtcclxuICAgICAgICAgICAgdG9wOiAzNTBweDtcclxuICAgICAgICAgICAgei1pbmRleDogMTE7XHJcblxyXG4gICAgICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmJsb2ctc2luZ2xlLW1haW57XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgIC5taWRkbGUtcG9ydGZvbGlvLWxlZnR7ICAgICBcclxuXHJcbiAgICAgICAgICAgICYtdGl0bGV7ICAgIFxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIC5wb3J0Zm9saW8tbGVmdC10aXRsZS13cmFwcGVyeyBcclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICAucG9ydGZvbGlvLWxlZnQtdGl0bGUtdGFne1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogNHB4IHNvbGlkIHJnYmEoMjEsIDIxLCAyMSwgMC4wNik7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMzVweDtcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206IC0yOXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAtMzVweDtcclxuICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMjBweDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICAubGluZXtcclxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICAgJi1wdXJwbGV7ICAgICAgICAgICAgXHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjhweDtcclxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC0yOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiA2M3B4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICAgJi1jb3JuZXJ7ICAgICAgICAgIFxyXG4gICAgICBcclxuICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDM1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDBweCAwcHggNHB4IDRweDtcclxuICAgICAgICAgICAgICAgICAgICAgIHRvcDogMzFweDtcclxuICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAmLWJsdWV7XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgdG9wOiAtMzRweDtcclxuICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDE2cHg7ICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9ICAgICAgXHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgLnBvcnRmb2xpby1sZWZ0LXRpdGxlLXJlZF9saW5leyAgXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7ICAgICAgICAgICAgICAgICBcclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI0UwNUQ2ODtcclxuICAgICAgICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgICAgICAgICAgIGhlaWdodDogNHB4O1xyXG4gICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgIGJvdHRvbTogMjBweDtcclxuICAgICAgICAgICAgICAgICAgbGVmdDogMjk1cHg7XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGluaXRpYWw7XHJcbiAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMzBweDsgIFxyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDE0MHB4IDAgMTAwcHggMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogMTYwcHggMCA4MHB4IDgwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ICBcclxuXHJcbiAgICAgICAgLmJsb2ctc2luZ2xlLW1haW4tcmlnaHR7ICAgXHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDgwcHggNDBweDsgICAgICAgICBcclxuICAgICAgICAgICAgd2lkdGg6IDgzLjQlO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgICAuZGVzaWduLWljb257XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDMwJTtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAtNTBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi1jb250YWluZXJ7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDExMDBweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgICAgIC5ibG9nLXNpbmdsZS1tYWluLXRvcHsgICAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJi1kYXRle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDU1cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuZGF0ZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICYtbW9tZW50e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAubW9tZW50LWxlZnR7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDcwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50cmlwcGxlLWJ0bntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLm1vbWVudC10ZXh0eyAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDMzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tb21lbnQtdGV4dC1iZ3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogLTIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMTUwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3BhbnsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDgwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC13ZWJraXQtdGV4dC1zdHJva2Utd2lkdGg6IDFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuYmxvZy1zaW5nbGUtbWFpbi1taWRkbGV7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAzNXB4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB1bHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDVweCAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAubWFpbi1taWRkbGUtaW1ne1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmRlc2lnbi1pY29ue1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAtNzVweDsgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAxMDVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAubWVudS1sZWZ0LWJvdHRvbXtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmZvb3RlcnsgIFxyXG4gICAgYmFja2dyb3VuZDogdXJsKC93cC1jb250ZW50L3RoZW1lcy9pbnRlcmljY28vaW1hZ2VzL2Zvb3Rlci1iZy5qcGcpOyBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgIC5mb290ZXItdGl0bGV7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBmb250LXNpemU6IDQ1cHg7XHJcbiAgICAgICAgY29sb3I6ICNFREVERUQ7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvb3Rlci1jb250YWluZXJ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMzYwcHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJi10b3B7ICAgICAgICBcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDcwcHggMCA2MHB4IDBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMTsgICAgICAgIFxyXG5cclxuICAgICAgICAuZm9vdGVyLWNvbnRhaW5lcnsgICAgICBcclxuXHJcbiAgICAgICAgICAgIC5mb290ZXItbWFwe1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDI1cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgLmZvb3Rlci10aXRsZXtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAubWFwLWNvbnRhaW5lcntcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjVweCAyNXB4O1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLmxpbmV7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJi1wdXJwbGV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDc1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAtMXB4O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIzMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWNvcm5lcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNzVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogM3B4IDBweCAwcHggM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAmLWJsdWV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxNTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogM3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMTQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMXB4O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLmZvb3Rlci1tYXAtYmxvY2t7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmcmFtZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogMzAwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA0MDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDYwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyNXB4IDAgMCAyNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5mb290ZXItZm9ybXtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICAgICAgLnRyaXBwbGUtbGluZXN7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICYtbG9uZ3sgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI3MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC03MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAmLXR3b3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgIC5mb290ZXItdG9wLXJpZ2h0LXRleHR7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7ICAgICAgICBcclxuICAgICAgICAgICAgICAgIHRvcDogMTUwcHg7XHJcbiAgICAgICAgICAgICAgICByaWdodDogLTQ5cHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgc3BhbnsgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAtd2Via2l0LXRleHQtc3Ryb2tlLXdpZHRoOiAxcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZS1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjU1KTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA5MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIC13ZWJraXQtd3JpdGluZy1tb2RlOiB0YjtcclxuICAgICAgICAgICAgICAgICAgICAtbXMtd3JpdGluZy1tb2RlOiB0YjtcclxuICAgICAgICAgICAgICAgICAgICB3cml0aW5nLW1vZGU6IHRiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtNDBweDtcclxuICAgICAgICAgICAgICAgICAgICByaWdodDogMjBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gXHJcblxyXG4gICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtd2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmUhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLWJvdHRvbXtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgIFxyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICAgICAuZm9vdGVyLWNvbnRhaW5lcntcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogaW5pdGlhbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1sZWZ0e1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA3MHB4O1xyXG5cclxuICAgICAgICAgICAgJi10aXRsZXtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgLmZvb3Rlci10aXRsZXtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMHB4IDJweCAycHggMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogLTI0cHg7ICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTVweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNFMDVENjg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMnB4IDBweCAwcHggMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLmZvb3Rlci1ib3R0b20tbGVmdC1tZW51e1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDcwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgLmZvb3Rlci1tZW51LWl0ZW17XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7ICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjOEY4RjhGO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogNzBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogLTU1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5mb290ZXItc29jaWFse1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMzVweDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDMwcHg7ICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAuc29jaWFse1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAuc29jaWFsLWljb257XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmljb257XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4IDUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0M0QzRDNDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTUlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1yaWdodHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW17XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICAgICAgICAgICAgIGltZ3tcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzVweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDM1cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLmZvb3Rlci1yaWdodC1pbmZvLWl0ZW0tcGxhY2V7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzVCNUI1QjtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJHb3RoYW0gUHJvXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogNTBweCAwO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5mb290ZXItYW5jaG9ye1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgICAgICBcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMTIwcHggYXV0byAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA0MHB4IDEwJTtcclxuICAgICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM1QjVCNUI7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjOEY4RjhGO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWMxYzFjO1xyXG5cclxuICAgICAgICAgICAgJi1sZWZ0e1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcblxyXG4gICAgICAgICAgICAgICAgYXsgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICM4RjhGOEY7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxYzFjMWM7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA2MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmOmFmdGVye1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgIH1cclxufSIsIi5oZWFkZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgei1pbmRleDogMTA7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG5cclxuICAgICYtbGVmdC1ibG9ja3tcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIG1heC13aWR0aDogMzUlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlOyBcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDI1JTtcclxuICAgIFxyXG4gICAgICAgIC5oZWFkZXItbGFuZ3tcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgIGxpe1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICAgICAgICAgICAgICAmOm1hcmtlcntcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiR290aGFtIFByb1wiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzU0NTQ1NDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGR7XHJcbiAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmV7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcvJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMHB4IDEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNTQ1NDU0O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmLmN1cnJlbnQtbGFuZyBhe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXItbG9nb3tcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxNTBweDsgICAgICAgXHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyAgICAgICBcclxuICAgICAgICBsZWZ0OiAxMCU7XHJcbiAgICAgICAgdG9wOiA3NXB4OyAgICAgICBcclxuXHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDI1cHg7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMjIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtcmlnaHQtYmxvY2t7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAuc21hbGwtbGluZXtcclxuICAgICAgICAgICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zb2NpYWx7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAxMjBweCAwcHggNjBweDtcclxuXHJcbiAgICAgICAgICAgICYtaWNvbntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIHN2Z3tcclxuICAgICAgICAgICAgICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDBweCA2MHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5tZW51LWxlZnR7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIG1heC13aWR0aDogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDYwcHg7XHJcbiAgICByaWdodDogNDBweDtcclxuICAgIHotaW5kZXg6IDExO1xyXG5cclxuICAgIC5uYXZpZ2F0aW9ue1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IDMwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMTAlKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gODAwbXMgY3ViaWMtYmV6aWVyKC43NywwLC4xNzUsMSk7XHJcblxyXG4gICAgICAgICYtbGVmdHsgICAgIFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDUwcHggNiU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7XHJcblxyXG4gICAgICAgICAgICAubWVudS1sZWZ0LXRvcC1idXJnZXItY2xvc2V7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMUIxQjFCO1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOyAgICAgIFxyXG5cclxuICAgICAgICAgICAgICAgIC5tZW51LWxlZnQtdG9wLWJ1cmdlci1jcm9zc3tcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG8gMDtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICY6YmVmb3JleyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA4cHggMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtMTAwMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlOyAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7ICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC5sb2dvLW1vYntcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTUwcHg7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLnRleHQtd2l0aC1sb2dve1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcclxuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMCAwIDEyJSAwOyAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm1lbnUtbGlzdHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgICAgIFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyMjIyOyAgICAgXHJcblxyXG4gICAgICAgICAgICAubWVudS1saXN0LWl0ZW17XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogY2FsYygxMDAlLzYpOyAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAgICAgICAgIC5tZW51LWxpc3QtaXRlbS1iZ3tcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAubWVudS1saXN0LWl0ZW0tY29udGFpbmVye1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5tZW51LWxpc3QtaXRlbS1saW5re1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLmxpbmstY29udGVudHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDMwJTsgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5saW5rLWNvbnRlbnQtbWFpbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjsgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmxpbmstY29udGVudC1zdWJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMHB4IDEwJTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAubGluay1jb250ZW50LXN1Yi1pdGVte1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogIzZENkQ2RCAxcHggc29saWQ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjsgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjNweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI0UwNUQ2ODtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlcntcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLm1lbnUtbGlzdC1pdGVtLWxpbmt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAjRTA1RDY4IDZweCBzb2xpZDsgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAubGluay1jb250ZW50LW1haW57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI0UwNUQ2ODtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgybikge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAubWVudS1saXN0LWl0ZW0tY29udGFpbmVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjkyOTI5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5tZW51LWxpc3QtaXRlbS1iZ3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJS82KTsgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLm5hdmlnYXRpb24tb3BlbntcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUpO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gODAwbXMgY3ViaWMtYmV6aWVyKC43NywwLC4xNzUsMSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLXRvcHtcclxuXHJcbiAgICAgICAgJi1idXJnZXJ7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB3aWR0aDogNjBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMUIxQjFCO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7ICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICYtYnRue1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG8gMDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgICY6YmVmb3JleyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTsgIFxyXG4gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDNweCAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA4cHggMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgJjphZnRlcntcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlOyAgXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7ICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLW5hbWV7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogNTAwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICAgICAmLXRleHR7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBQcm9cIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuMzRlbTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9ICBcclxuXHJcbiAgICAmLWJvdHRvbXtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTtcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgIHN2Z3tcclxuICAgICAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRkZXNrdG9wKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5pbmZvLXJpZ2h0e1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLnRleHQtd2l0aC1sb2dve1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBpbml0aWFsO1xyXG5cclxuICAgICAgICAgICAgaDN7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7ICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICY6YmVmb3Jle1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAbWVkaWEobWluLXdpZHRoOiAkZGVza3RvcCkge1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIHJpZ2h0OiBpbml0aWFsO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gICAgfVxyXG59Il19 */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> Stashed changes
